{"version":3,"sources":["pages/DashboardPage/DashboardPage.module.scss","components/StatusDot/StatusDot.module.scss","pages/RoomDetailsPage/RoomDetailsPage.module.scss","containers/PageContainer/PageContainer.module.scss","pages/AssignmentsPage/AssignmentsPage.module.scss","components/CleanerSelect/CleanerSelect.module.scss","components/CleaningReportsTable/CleaningReportTable.module.scss","utils/constants.js","utils/api.js","containers/PageContainer/index.js","containers/PageContainer/PageContainer.js","pages/DashboardPage/KeyStat.js","pages/DashboardPage/index.js","pages/DashboardPage/DashboardPage.js","components/ShiftPicker/ShiftPicker.js","pages/CleanersPage/CleanersPage.js","pages/CleanersPage/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","pages/AnalysisPage/index.js","pages/AnalysisPage/AnalysisPage.js","utils/utils.js","pages/RoomsPage/RoomsPage.js","pages/RoomsPage/index.js","utils/tableUtils.js","components/CleanerSelect/index.js","components/CleanerSelect/CleanerSelect.js","pages/AssignmentsPage/AssignCleanerDialog.js","pages/AssignmentsPage/AssignmentsPage.js","pages/AssignmentsPage/index.js","pages/RoomDetailsPage/RoomDetailsCard.js","components/StatusDot/index.js","components/StatusDot/StatusDot.js","pages/RoomDetailsPage/RoomCleanerCard.js","pages/RoomDetailsPage/RoomReportComments.js","components/CleaningReportsTable/CleaningReportsTable.js","pages/RoomDetailsPage/index.js","pages/RoomDetailsPage/RoomDetailsPage.js","components/CleaningReportsTable/index.js","pages/CleanerDetailsPage/EditCleanerDialog.js","pages/CleanerDetailsPage/CleanerDetailsPage.js","pages/CleanerDetailsPage/index.js","pages/ReportPage/index.js","pages/ReportPage/ReportPage.js","app/App.js","serviceWorker.js","index.js","pages/ReportPage/ReportPage.module.scss","components/Toolbar/Toolbar.module.scss","components/ShiftPicker/ShiftPicker.module.scss","pages/CleanersPage/CleanersPage.module.scss","pages/CleanerDetailsPage/CleanerDetailsPage.module.scss"],"names":["module","exports","API_KEY","BASE_URL","ROOM_TYPES","Object","freeze","OFFICE","frequency","cleaningTime","displayName","TOILET","WARD_ROOM","EXAMINATION_ROOM","CORRIDOR","WAITING_ROOM","getRooms","hospital","floor","showAssigned","a","params","doGetRequest","getHospitals","getAssignedRooms","cleanerId","getAssignedCleaners","roomId","assignRoomsToCleaner","rooms","cleaner","Promise","all","map","room","assignRoom","doPostRequest","JSON","stringify","unAssignRoom","doDeleteRequest","getRoom","getCleaners","getCleaner","createCleaner","name","shiftStart","shiftEnd","getReports","deleteCleaner","getReport","reportId","getHeatmap","type","requestURL","fetch","method","headers","response","ok","Error","json","message","editCleaner","doPutRequest","url","console","log","body","PageContainer","children","style","className","styles","pageContainer","pageContent","KeyStat","value","subtitle","color","stat","keyStat","Typography","variant","DashboardPage","textAlign","Grid","container","spacing","item","xs","semiBold","ShiftPicker","row","component","Select","inputProps","menuprops","classes","paper","menu","Array","keys","number","num","toString","padStart","MenuItem","key","margin","validationSchema","Yup","firstName","required","lastName","AddCleanerDialog","open","setOpen","setIsLoaded","setSnackOpen","handleClose","handleSubmit","vars","setSubmitting","startHour","startMinutes","endHour","endMinutes","Dialog","onClose","aria-labelledby","DialogTitle","id","initialValues","onSubmit","isSubmitting","resetForm","values","DialogContent","TextField","autoFocus","label","fullWidth","DialogActions","Button","onClick","CleanersTable","cleaners","history","useHistory","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","IconButton","push","pathname","state","viewCleaner","VisibilityOutlined","CleanersPage","useState","setCleaners","isLoaded","React","snackOpen","useEffect","then","err","handleSnackClose","event","reason","headerRow","bold","Tooltip","title","AddCircleOutline","CircularProgress","marginTop","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","NavTabs","withStyles","root","width","flexGrow","indicator","display","justifyContent","backgroundColor","marginBottom","borderTopLeftRadius","borderTopRightRadius","props","Tabs","TabIndicatorProps","Toolbar","location","useLocation","getTabValue","tabId","route","matchPath","path","exact","strict","mountTabValueFactory","AppBar","position","toolbar","split","length","goBack","ArrowBackRounded","svg","Tab","tab","DashboardRounded","fontSize","Link","to","disableRipple","FormatListBulletedRounded","PeopleRounded","BusinessRounded","AssessmentRounded","AnalysisPage","getRoomTypeProp","propName","RoomTable","building","patient","date","moment","format","openRoom","RoomsPage","error","setError","setRooms","hospitals","setHospitals","setHospital","result","FormControl","minWidth","InputLabel","onChange","target","hosp","descendingComparator","b","orderBy","undefined","CleanerSelect","options","setOptions","openSelect","setOpenSelect","setCleaner","loading","active","clnrs","Autocomplete","onOpen","autocomplete","getOptionLabel","option","newValue","renderInput","InputProps","endAdornment","AssignCleanerDialog","selected","disableBackdropClick","disabled","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","Checkbox","indeterminate","checked","headCell","sortDirection","TableSortLabel","direction","property","visuallyHidden","useToolbarStyles","makeStyles","theme","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","primary","dark","EnhancedTableToolbar","setSelected","clsx","fontWeight","flexBasis","aria-label","FilterList","useStyles","table","border","clip","height","overflow","top","AssignmentsPage","setOrder","setOrderBy","page","setPage","roomsPerPage","setRoomsPerPage","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","RouterLink","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","RoomDetailsCard","Card","card","cardContent","Divider","divider","medium","critical","join","StatusDot","tooltip","dot","neutral","small","RoomCleanerCard","newCleaner","setNewCleaner","snackText","setSnackText","hasCleaner","removeCleanerAssignment","assignNewCleaner","isBetween","getColor","marginLeft","ClearOutlined","btn","lineHeight","CommentsList","reports","comments","reduce","report","time","comment","author","CleaningReportsTable","Check","good","CloseRounded","viewReport","RoomDetailsPage","roomLoaded","setRoomLoaded","setRoom","setReports","Date","titleRow","action","content","detailsRow","EditCleanerDialog","onSave","start","end","edited","res","AssignmentsTable","assignments","setAssignments","setLoading","removeAssignment","newAssignments","splice","Clear","CleanerDetailsPage","cleanerLoaded","setCleanerLoaded","editing","setEditing","anchorEl","setAnchorEl","data","getData","handleConfirmClose","removeCleaner","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","ListItemIcon","Edit","ListItemText","DeleteForever","AccountCircleRounded","avatar","aria-describedby","DialogContentText","ReportPage","setReport","setType","mapSelected","reportInfo","App","render","window","hostname","match","createMuiTheme","blueGrey","lightBlue","typography","fontFamily","ReactDOM","StrictMode","basename","ThemeProvider","StylesProvider","injectFirst","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fec75d52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"semiBold\":\"DashboardPage_semiBold__1wP56\",\"stat\":\"DashboardPage_stat__1HNGL\",\"keyStat\":\"DashboardPage_keyStat__3TqkO\",\"subtitle\":\"DashboardPage_subtitle__SKIyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot\":\"StatusDot_dot__1rSYH\",\"good\":\"StatusDot_good__1GIEp\",\"medium\":\"StatusDot_medium__3zBB3\",\"critical\":\"StatusDot_critical__23vOC\",\"neutral\":\"StatusDot_neutral__1H6OR\",\"tiny\":\"StatusDot_tiny__33nQ5\",\"small\":\"StatusDot_small__1yc1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleRow\":\"RoomDetailsPage_titleRow__JoTlm\",\"content\":\"RoomDetailsPage_content__2CxAu\",\"card\":\"RoomDetailsPage_card__2J4HU\",\"cardContent\":\"RoomDetailsPage_cardContent__1soEX\",\"detailsRow\":\"RoomDetailsPage_detailsRow__3fj0E\",\"row\":\"RoomDetailsPage_row__PCQ4C\",\"divider\":\"RoomDetailsPage_divider__hWVez\",\"semiBold\":\"RoomDetailsPage_semiBold__24ERR\",\"medium\":\"RoomDetailsPage_medium__3Rnxk\",\"critical\":\"RoomDetailsPage_critical__2gPiW\",\"btn\":\"RoomDetailsPage_btn__3tYWx\",\"comments\":\"RoomDetailsPage_comments__1nTSD\",\"comment\":\"RoomDetailsPage_comment__1rwNF\",\"author\":\"RoomDetailsPage_author__tbk-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"PageContainer_pageContainer__iX86t\",\"pageContent\":\"PageContainer_pageContent__1wPf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AssignmentsPage_title__3UMlB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autocomplete\":\"CleanerSelect_autocomplete__2dss4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"CleaningReportTable_good__2fi-5\"};","export const API_KEY = 'zL43mXgXk5xa7YFRBVZscbLnGFaqVh24q5G6fhGjmAv532FAVBRtnuCJpwXWXnhw';\nexport const BASE_URL = 'https://cleaner-app-api.azurewebsites.net/api/';\n\nexport const ROOM_TYPES = Object.freeze({\n  OFFICE: {\n    frequency: 1,\n    cleaningTime: 5,\n    displayName: 'Office'\n  },\n  TOILET: {\n    frequency: 5,\n    cleaningTime: 5,\n    displayName: 'Toilet'\n  },\n  WARD_ROOM: {\n    frequency: 5,\n    cleaningTime: 8,\n    displayName: 'Ward room'\n  },\n  EXAMINATION_ROOM: {\n    frequency: 5,\n    cleaningTime: 6,\n    displayName: 'Examination room'\n  },\n  CORRIDOR: {\n    frequency: 3,\n    cleaningTime: 9,\n    displayName: 'Corridor'\n  },\n  WAITING_ROOM: {\n    frequency: 5,\n    cleaningTime: 10,\n    displayName: 'Waiting room'\n  },\n});","import {API_KEY, BASE_URL} from \"./constants\";\n\nexport const authenticated = () => {\n  return true;\n  //return localStorage.getItem('token') !== null;\n};\n\n\nexport const getRooms = async (hospital, floor, showAssigned) => {\n  const url = 'rooms';\n  let params = hospital ? `?hospital_id=${hospital}` : '';\n  params += floor ? `?floor_id=${floor}` : '';\n  params += showAssigned ? `?assigned_cleaners=1` : '';\n  return doGetRequest(url, params);\n}\n\nexport const getHospitals = async () => {\n  return doGetRequest('hospitals');\n}\n\nexport const startCleaning = async (roomId) => {\n  return doGetRequest(`room/startcleaning?id=${roomId}`);\n}\n\nexport const stopCleaning = async (roomId) => {\n  return doGetRequest(`room/stopcleaning?id=${roomId}`);\n}\n\nexport const getAssignedRooms = async (cleanerId) => {\n  return doGetRequest(`cleaners/rooms?cleaner_id=${cleanerId}`);\n}\n\nexport const getAssignedCleaners = async (roomId) => {\n  return doGetRequest(`cleaners/rooms?room_id=${roomId}`);\n}\n\nexport const assignRoomsToCleaner = async (rooms, cleaner) => {\n  return Promise.all(rooms.map((room) => {\n    return assignRoom(room['_id'], cleaner);\n  }));\n}\n\nexport const assignRoom = async (room, cleaner) => {\n  return doPostRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const unAssignRoom = async (room, cleaner) => {\n  return doDeleteRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const getRoom = async (roomId) => {\n  return doGetRequest(`room?_id=${roomId}`);\n}\n\nexport const getCleaners = async () => {\n  return doGetRequest('cleaners/');\n}\n\nexport const getCleaner = async (cleanerId) => {\n  return doGetRequest(`cleaner?_id=${cleanerId}`);\n}\n\nexport const createCleaner = async (name, shiftStart, shiftEnd) => {\n  return doPostRequest('cleaner/', JSON.stringify({\n    name,\n    'shift_start': shiftStart,\n    'shift_end': shiftEnd\n  }));\n}\n\nexport const getReports = async (roomId, cleanerId) => {\n  let params = roomId ? `?room_id=${roomId}` : '';\n  params += cleanerId ? `?cleaner_id=${cleanerId}` : '';\n  return doGetRequest('reports', params)\n}\n\nexport const deleteCleaner = async (cleanerId) => {\n  return doDeleteRequest('cleaner', JSON.stringify({\n    '_id': cleanerId\n  }));\n}\n\nexport const getReport = async (reportId) => {\n  return doGetRequest(`report?_id=${reportId}`);\n}\n\nexport const getHeatmap = async (reportId, type) => {\n  const requestURL = BASE_URL + `report/heatmap?_id=${reportId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response;\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nexport const editCleaner = async (cleaner) => {\n  return doPutRequest('cleaner/', JSON.stringify({\n    '_id': cleaner['_id'],\n    'name': cleaner.name,\n    'shift_start': cleaner['shift_start'],\n    'shift_end': cleaner['shift_end']\n  }));\n}\n\nconst doGetRequest = async (url, params) => {\n  const requestURL = BASE_URL + url + (params || '');\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPostRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doDeleteRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPutRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}","import PageContainer from './PageContainer';\nexport default PageContainer;\n","import React from 'react';\nimport styles from './PageContainer.module.scss';\nimport PropTypes from 'prop-types';\n\nconst PageContainer = ({ children, style }) => (\n  <div className={styles.pageContainer}>\n    <div className={styles.pageContent} style={style}>{children}</div>\n  </div>\n);\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport styles from \"./DashboardPage.module.scss\";\nimport {Typography} from \"@material-ui/core\";\n\nconst KeyStat = ({value, subtitle, color}) => {\n  return (\n    <div className={styles.stat}>\n      <div className={styles.keyStat}>\n        <Typography variant={\"h4\"} style={{color}}>{value}</Typography>\n      </div>\n      <Typography variant={\"body2\"} className={styles.subtitle}>{subtitle}</Typography>\n    </div>\n  );\n}\n\nexport default KeyStat;","import DashboardPage from './DashboardPage';\nexport default DashboardPage;\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from './DashboardPage.module.scss';\nimport Grid from \"@material-ui/core/Grid\";\nimport KeyStat from \"./KeyStat\";\n\nconst DashboardPage = () => {\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Grid container spacing={6}>\n        <Grid item xs={5}>\n          <Typography variant={\"h5\"} className={styles.semiBold}>Alerts</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Grid container spacing={4}>\n            <Grid item xs>\n              <KeyStat subtitle={\"Rooms cleaned today\"} value={1} color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Average contamination index\"} value={50} color={\"#F2C94C\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Green rooms\"} value={0} color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Red rooms\"} value={4} color={\"#EB5757\"}/>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </PageContainer>\n  )\n}\n\nexport default DashboardPage;","import {Grid, MenuItem, Typography} from \"@material-ui/core\";\nimport styles from \"./ShiftPicker.module.scss\";\nimport {Field} from \"formik\";\nimport {Select} from \"formik-material-ui\";\nimport React from \"react\";\n\n\nconst ShiftPicker = () => {\n  return (\n    <Grid item xs className={styles.row}>\n      <div>\n        <Typography variant={\"body1\"}>Shift start</Typography>\n        <div className={styles.row}>\n          <Field component={Select}\n                 inputProps={{menuprops: {classes: {paper: styles.menu}}}}\n                 name=\"startHour\">\n            {[...Array(24).keys()].map((number) => {\n              const num = number.toString().padStart(2, '0')\n              return <MenuItem key={number} value={num}>{num}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"h6\"}>:</Typography>\n          <Field component={Select}\n                 inputProps={{menuprops: {classes: {paper: styles.menu}}}}\n                 name=\"startMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n      <Typography variant={\"h4\"} style={{margin: '0 16px'}}>-</Typography>\n      <div>\n        <Typography variant={\"body1\"}>Shift end</Typography>\n        <div className={styles.row}>\n          <Field component={Select}\n                 inputProps={{menuprops: {classes: {paper: styles.menu}}}}\n\n                 name=\"endHour\">\n            {[...Array(23).keys()].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"body1\"}>:</Typography>\n          <Field component={Select}\n                 inputProps={{menuprops: {classes: {paper: styles.menu}}}}\n                 name=\"endMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n    </Grid>\n  )\n}\n\nexport default ShiftPicker;","import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AddCircleOutline, VisibilityOutlined} from \"@material-ui/icons\";\nimport {createCleaner, getCleaners} from \"../../utils/api\";\nimport styles from './CleanersPage.module.scss';\nimport * as Yup from \"yup\";\nimport {Formik, Form, Field} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\n\nconst CleanersPage = () => {\n  const [cleaners, setCleaners] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n\n  useEffect(() => {\n    getCleaners()\n      .then((cleaners) => {\n        console.log(cleaners)\n        setCleaners(cleaners);\n        setIsLoaded(true);\n      }, (err) => {\n        console.log(err);\n      })\n  }, [setOpen, isLoaded])\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Cleaners</Typography>\n        <Tooltip title=\"Add cleaner\">\n          <IconButton onClick={() => setOpen(true)}>\n            <AddCircleOutline/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {isLoaded ? <CleanersTable cleaners={cleaners}/> :\n        <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Typography variant={\"h5\"} className={styles.bold} style={{marginTop: 24}}>Unassigned rooms</Typography>\n      <AddCleanerDialog open={open} setOpen={setOpen} setIsLoaded={setIsLoaded} setSnackOpen={setSnackOpen}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          Cleaner created\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required')\n});\n\nconst AddCleanerDialog = ({open, setOpen, setIsLoaded, setSnackOpen}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    startHour: '08',\n    endHour: '16',\n    startMinutes: '00',\n    endMinutes: '00'\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const cleaner = await createCleaner(`${vars.firstName} ${vars.lastName}`,\n      `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`,\n      `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`);\n    console.log(cleaner);\n    setIsLoaded(false);\n    setSubmitting(false);\n    setSnackOpen(true);\n    setOpen(false);\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create a new cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"First name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Last name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Create cleaner\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nconst CleanersTable = ({cleaners}) => {\n  const history = useHistory();\n\n  const viewCleaner = (cleaner) => {\n    const id = cleaner['_id'];\n    history.push({\n      pathname: `/cleaners/${id}`,\n      state: {id}\n    })\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={'small'}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Shift start</TableCell>\n            <TableCell align=\"right\">Shift end</TableCell>\n            <TableCell align=\"right\">Cleaning percent</TableCell>\n            <TableCell align=\"right\">Current location</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {cleaners.map((row) => (\n            <TableRow key={row['_id']}>\n              <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row['shift_start']}</TableCell>\n              <TableCell align=\"right\">{row['shift_end']}</TableCell>\n              <TableCell align=\"right\">{}</TableCell>\n              <TableCell align=\"right\">{}</TableCell>\n              <TableCell align=\"right\">{}</TableCell>\n              <TableCell>\n                <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                  viewCleaner(row)\n                }}><VisibilityOutlined/></IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nexport default CleanersPage;","import CleanersPage from './CleanersPage';\nexport default CleanersPage;\n","import React from 'react';\nimport {AppBar, Typography, Tabs, Toolbar as MaterialToolbar, Tab, IconButton} from \"@material-ui/core\";\nimport {Link, useLocation, matchPath, useHistory} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport styles from './Toolbar.module.scss';\nimport {\n  ArrowBackRounded, AssessmentRounded,\n  BusinessRounded,\n  DashboardRounded,\n  FormatListBulletedRounded,\n  PeopleRounded\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst NavTabs = withStyles({\n  root: {\n    width: '100%',\n    flexGrow: 1\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    marginBottom: '4px',\n    '& > span': {\n      width: '40%',\n      backgroundColor: '#00b0ff',\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n  }\n})((props) => <Tabs {...props} TabIndicatorProps={{children: <span/>}}/>);\n\nconst mountTabValueFactory = (location, tabId) => (route) => !!matchPath(location.pathname, {\n  path: route,\n  exact: false,\n  strict: false,\n}) ? tabId : -1;\n\nconst Toolbar = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const tabId = 'myTabId';\n  const getTabValue = mountTabValueFactory(location, tabId);\n\n  return (\n    <AppBar position={\"static\"}>\n      <MaterialToolbar variant={\"dense\"}>\n        <div className={styles.toolbar}>\n          {location.pathname.split('/').length > 2 ? (\n            <Tooltip title={'Go Back'}>\n              <IconButton onClick={() => {\n                history.goBack()\n              }}>\n                <ArrowBackRounded className={styles.svg}/>\n              </IconButton>\n            </Tooltip>\n          ) : <div style={{width: 40}}/>}\n          <Typography variant={\"h6\"} className={styles.name}>Spotless</Typography>\n        </div>\n        <NavTabs variant={\"fullWidth\"} value={tabId}>\n          <Tab label={<div className={styles.tab}><DashboardRounded fontSize={\"small\"}/> Dashboard</div>}\n               value={getTabValue(\"/dashboard\")} component={Link} to={\"/dashboard\"}\n               disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><FormatListBulletedRounded fontSize={\"small\"}/> Assignments</div>}\n               value={getTabValue(\"/assignments\")} component={Link} to={\"/assignments\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><PeopleRounded fontSize={\"small\"}/> Cleaners</div>}\n               value={getTabValue(\"/cleaners\")} component={Link} to={\"/cleaners\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><BusinessRounded fontSize={\"small\"}/> Rooms</div>}\n               value={getTabValue(\"/rooms\")} component={Link} to={\"/rooms\"} disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><AssessmentRounded fontSize={\"small\"}/> Analysis</div>}\n               value={getTabValue(\"/analysis\")} component={Link} to={\"/analysis\"}\n               disableRipple={true} className={styles.tab}/>\n        </NavTabs>\n      </MaterialToolbar>\n    </AppBar>\n  );\n}\n\nexport default Toolbar;","import Toolbar from './Toolbar';\nexport default Toolbar;","import AnalysisPage from './AnalysisPage';\nexport default AnalysisPage;\n","import React from 'react';\n\nconst AnalysisPage = () => {\n  return (\n    <div>\n      Analysis\n    </div>\n  )\n}\n\nexport default AnalysisPage;","import {ROOM_TYPES} from \"./constants\";\n\nexport const getRoomTypeProp = (room, propName) => {\n  return room['room_type'] !== '<empty>' ? ROOM_TYPES[room['room_type']][propName] : '';\n}","import React, {useEffect, useState} from 'react';\nimport {getHospitals, getRooms} from \"../../utils/api\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport moment from \"moment\";\nimport {VisibilityOutlined} from \"@material-ui/icons\";\nimport {useHistory} from 'react-router-dom';\nimport styles from \"../CleanersPage/CleanersPage.module.scss\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\nconst RoomsPage = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [hospitals, setHospitals] = useState([]);\n  const [hospital, setHospital] = useState('');\n\n  useEffect(() => {\n    getHospitals('hospital0')\n      .then((result) => {\n          console.log(result);\n          setIsLoaded(true);\n          setHospitals(result);\n        },\n        (err) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(err);\n        })\n  }, []);\n\n  const hospitalSelected = (event) => {\n    setHospital(event.target.value);\n    getRooms(event.target.value['_id'])\n      .then((rooms) => {\n          console.log(rooms);\n          setRooms(rooms);\n        },\n        (error) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }\n\n  return (\n    <PageContainer>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Rooms</Typography>\n        {!isLoaded ? <CircularProgress color=\"secondary\"/> :\n          (\n            <FormControl variant={'outlined'} style={{minWidth: '320px', margin: '8px'}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Select hospital</InputLabel>\n              <Select label=\"Select Hospital\" onChange={hospitalSelected} value={hospital}>\n                <MenuItem value={{}}>\n                  <em>None</em>\n                </MenuItem>\n                {\n                  hospitals.map(hosp => (\n                    <MenuItem value={hosp} key={hosp['_id']}>{hosp.name}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          )\n        }\n      </div>\n      {rooms.length > 0 && (\n        <RoomTable rooms={rooms}/>\n      )}\n      {error && <p>ERROR</p>}\n    </PageContainer>\n  )\n}\n\nconst RoomTable = ({rooms}) => {\n  const history = useHistory();\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const getPatient = (patient) => {\n    return patient === \"<empty>\" ? 'No' : 'Yes';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Building</TableCell>\n            <TableCell align=\"right\">Floor</TableCell>\n            <TableCell align=\"right\">Contamination index</TableCell>\n            <TableCell align=\"right\">Has Patient</TableCell>\n            <TableCell align=\"right\">Room type</TableCell>\n            <TableCell align=\"right\">Last cleaned</TableCell>\n            <TableCell>Action</TableCell>\n          </TableRow>\n         </TableHead>\n        <TableBody>\n          {rooms.map((row) => (\n            <TableRow key={row['_id']}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.building}</TableCell>\n              <TableCell align=\"right\">{row.floor}</TableCell>\n              <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n              <TableCell align=\"right\">{getPatient(row.patient)}</TableCell>\n              <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n              <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n              <TableCell>\n                <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                  openRoom(row)\n                }}><VisibilityOutlined/></IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default RoomsPage;","import RoomsPage from './RoomsPage';\nexport default RoomsPage;\n","export function descendingComparator(a, b, orderBy) {\n  if (a[orderBy] === undefined) return 1;\n\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport function handleClick(event, item, selected, setSelected) {\n  const selectedIndex = selected.indexOf(item);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selected, item);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selected.slice(1));\n  } else if (selectedIndex === selected.length - 1) {\n    newSelected = newSelected.concat(selected.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selected.slice(0, selectedIndex),\n      selected.slice(selectedIndex + 1),\n    );\n  }\n\n  setSelected(newSelected);\n}","import CleanerSelect from './CleanerSelect';\nexport default CleanerSelect;","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {getCleaners} from \"../../utils/api\";\nimport styles from \"./CleanerSelect.module.scss\";\n\nconst CleanerSelect = ({onChange, style}) => {\n  const [options, setOptions] = useState([]);\n  const [openSelect, setOpenSelect] = useState(false);\n  const [cleaner, setCleaner] = useState(null);\n  const loading = openSelect && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const clnrs = await getCleaners();\n\n      if (active) {\n        setOptions(clnrs);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  const onSelectChange = (event, newValue) => {\n    setCleaner(newValue);\n    onChange(event, newValue);\n  }\n\n  return (\n    <Autocomplete\n      open={openSelect}\n      onOpen={() => {\n        setOpenSelect(true);\n      }}\n      onClose={() => {\n        setOpenSelect(false);\n      }}\n      className={styles.autocomplete}\n      style={style}\n      getOptionLabel={(option) => option.name || ''}\n      options={options}\n      loading={loading}\n      value={cleaner}\n      onChange={onSelectChange}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Cleaner\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nCleanerSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  style: PropTypes.object\n}\n\nexport default CleanerSelect;","import React, {useState} from \"react\";\nimport {assignRoomsToCleaner} from \"../../utils/api\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\n\nexport const AssignCleanerDialog = ({open, setOpen, selected, setSnackOpen, onClose}) => {\n  const [cleaner, setCleaner] = useState(null);\n\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const handleSubmit = async () => {\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    console.log(cleaner);\n    setSnackOpen(true);\n    handleClose();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}>\n      <DialogTitle id=\"form-dialog-title\">Select a cleaner</DialogTitle>\n      <DialogContent>\n        <CleanerSelect onChange={(event, newValue) => {\n          setCleaner(newValue)\n        }}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleSubmit} disabled={cleaner === ''}>\n          Assign\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport {getRooms} from \"../../utils/api\";\nimport {VisibilityOutlined, FilterList} from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport styles from \"./AssignmentsPage.module.scss\"\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {AssignCleanerDialog} from \"./AssignCleanerDialog\";\nimport Link from \"@material-ui/core/Link\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'has_patient', numeric: false, disablePadding: false, label: 'Has patient'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nfunction EnhancedTableHead(props) {\n  const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{'aria-label': 'select all desserts'}}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, selected, setSelected, setSnackOpen} = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                    style={{fontWeight: 600}}>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={styles.title} variant=\"h6\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n          Assign rooms to cleaner\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Assign to cleaner\">\n          <Button variant={'contained'} color={'secondary'} style={{flexBasis: '164px'}} onClick={() => {\n            setOpen(true);\n          }}>Assign rooms</Button>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" onClick={() => {\n            // TODO implement filters\n          }}>\n            <FilterList/>\n          </IconButton>\n        </Tooltip>\n      )}\n      <AssignCleanerDialog open={open} setOpen={setOpen} selected={selected} onClose={() => setSelected([])}\n                           setSnackOpen={setSnackOpen}/>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function AssignmentsPage() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(25);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    getRooms(null, null, true)\n      .then((rooms) => {\n          console.log(rooms);\n          setRooms(rooms);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getPatient = (patient) => {\n    return patient === \"<empty>\" ? 'No' : 'Yes';\n  }\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  const getCleaner = (room) => {\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 ? cleaners[0] : '-';\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${cleaner['_id']}`,\n                    state: {id: cleaner['_id']}\n                  }}>\n      {cleaner.name}\n    </Link>);\n  }\n\n  return (\n    <PageContainer className={classes.root}>\n      {isLoaded ?\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSnackOpen={setSnackOpen}\n                                setSelected={setSelected}/>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rooms.length}\n              />\n              <TableBody>\n                {stableSort(rooms, getComparator(order, orderBy))\n                  .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row, selected, setSelected)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{'aria-labelledby': labelId}}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.building}</TableCell>\n                        <TableCell align=\"right\">{row.floor}</TableCell>\n                        <TableCell>{getCleaner(row)}</TableCell>\n                        <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                        <TableCell>{getPatient(row.patient)}</TableCell>\n                        <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                        <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton color={\"secondary\"} size={\"small\"}\n                                      onClick={() => {\n                                        openRoom(row)\n                                      }}>\n                            <VisibilityOutlined/>\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rooms.length}\n            rowsPerPage={roomsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          Cleaner assigned\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n","import AssignmentsPage from './AssignmentsPage';\nexport default AssignmentsPage;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport {Divider, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\n\nconst RoomDetailsCard = ({room}) => {\n  return (\n    <Card className={styles.card}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold}>Room details</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <Typography variant={\"body1\"} className={styles.semiBold}>Building {room.building}</Typography>\n        <Typography variant={\"body2\"} className={styles.medium} color=\"textSecondary\">Floor {room.floor}</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>{getRoomTypeProp(room, 'displayName')}</Typography>\n          <Typography\n            variant={\"body2\"}\n            className={styles.semiBold}>\n            Cleaning time: {getRoomTypeProp(room, 'cleaningTime')} min\n          </Typography>\n        </div>\n        <Typography variant={\"body2\"} className={styles.medium}\n                    color=\"textSecondary\">Cleaning {getRoomTypeProp(room, 'frequency')} times / week\n        </Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>Contamination index</Typography>\n          <Typography variant={\"body1\"}\n                      className={[styles.critical, styles.medium].join(' ')}>{room['contamination_index']}</Typography>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nRoomDetailsCard.propTypes = {\n  room: PropTypes.object.isRequired\n}\n\nexport default RoomDetailsCard;","import StatusDot from './StatusDot';\nexport default StatusDot;","import React from 'react';\nimport styles from './StatusDot.module.scss';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PropTypes from \"prop-types\";\n\n\nconst StatusDot = ({variant, size, tooltip}) => {\n  const classes = [styles.dot];\n  classes.push(variant ? styles[variant] : styles.neutral);\n  classes.push(size ? styles[size] : styles.small);\n  return (\n    <Tooltip title={tooltip}>\n      <div className={classes.join(' ')}/>\n    </Tooltip>\n  );\n}\n\nStatusDot.propTypes = {\n  variant: PropTypes.oneOf(['good', 'critical', 'medium', 'neutral']).isRequired,\n  size: PropTypes.oneOf(['tiny', 'small', 'medium']).isRequired,\n  tooltip: PropTypes.string\n}\n\nexport default StatusDot;","import React, {useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport StatusDot from \"../../components/StatusDot\";\nimport PropTypes from 'prop-types';\nimport {Button, IconButton, Typography} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\nimport moment from \"moment\";\nimport {ClearOutlined} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {assignRoom, unAssignRoom} from \"../../utils/api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nconst RoomCleanerCard = ({room, cleaner, setCleaner}) => {\n  const [newCleaner, setNewCleaner] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n\n  const hasCleaner = Object.keys(cleaner).length !== 0;\n  const getColor = () => {\n    if (!hasCleaner) return 'neutral';\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    return isBetween ? 'good' : 'critical';\n  }\n\n  const removeCleanerAssignment = async () => {\n    await unAssignRoom(room['_id'], cleaner['_id']);\n    setCleaner({});\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n  }\n\n  const assignNewCleaner = async () => {\n    await assignRoom(room['_id'], newCleaner['_id']);\n    setCleaner(newCleaner);\n    setNewCleaner({});\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <Card className={styles.card} style={{height: 'min-content'}}>\n      <div className={styles.cardContent}>\n        <div className={styles.row}>\n          <StatusDot variant={getColor()} size={'tiny'} tooltip={'Cleaner name'}/>\n          {hasCleaner ? (\n              <>\n                <Typography style={{marginLeft: 16}} variant={'h6'}\n                            className={styles.semiBold}>{cleaner.name}</Typography>\n                <Tooltip title=\"Remove assignment\">\n                  <IconButton style={{marginLeft: 'auto'}} size={\"small\"} onClick={removeCleanerAssignment}>\n                    <ClearOutlined/>\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n            :\n            <CleanerSelect onChange={(event, newValue) => setNewCleaner(newValue)} style={{marginLeft: 16}}/>\n          }\n        </div>\n        {newCleaner && Object.keys(newCleaner).length !== 0 && (\n          <>\n            <Divider className={styles.divider}/>\n            <div className={styles.row}>\n              <Button onClick={assignNewCleaner} variant={\"contained\"} color={\"secondary\"}\n                      className={styles.btn}>Assign</Button>\n            </div>\n          </>\n        )}\n      </div>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>{snackText}</Alert>\n      </Snackbar>\n    </Card>\n  )\n}\n\nRoomCleanerCard.propTypes = {\n  room: PropTypes.object.isRequired,\n  cleaner: PropTypes.object\n}\n\nexport default RoomCleanerCard;","import React from 'react';\nimport styles from './RoomDetailsPage.module.scss';\nimport {Divider, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    lineHeight: '200%'\n  },\n});\nconst CommentsList = ({reports}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={styles.comments}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold} style={{marginBottom: 16}}>Cleaner comments:</Typography>\n        {reports.length > 0 ? (\n          reports.reduce((result, report) => {\n            const showReport = report.comments !== '';\n            if (showReport) {\n              const time = moment(report['cleaning_time']);\n              result.push(\n                <div key={report['_id']} className={styles.comment}>\n                  <Divider />\n                  <Typography variant={\"h6\"} className={classes.root}>{time.format('D MMM, YYYY')}</Typography>\n                  <Typography variant={\"h6\"} className={[styles.semiBold, styles.author, classes.root].join(' ')}>{report['cleaner_name']}</Typography>\n                  <Typography variant={\"body1\"} className={classes.root}>{report.comments}</Typography>\n                </div>\n              );\n            }\n            return result;\n          }, [])\n        ) :\n        <Typography variant={\"body1\"} className={styles.semiBold}>No comments</Typography>\n        }\n      </div>\n    </Card>\n  );\n}\n\nexport default CommentsList;","import React from \"react\";\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {Check, CloseRounded, VisibilityOutlined} from \"@material-ui/icons\";\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\nimport moment from \"moment\";\nimport styles from './CleaningReportTable.module.scss';\nimport Link from \"@material-ui/core/Link\";\nimport PropTypes from 'prop-types';\n\nconst CleaningReportsTable = ({reports, type}) => {\n  const history = useHistory();\n  const viewReport = (report) => {\n    const id = report['_id'];\n    history.push({\n      pathname: `/reports/${id}`,\n      state: {id}\n    })\n  }\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good}/>) : (<CloseRounded color={\"error\"}/>);\n  }\n\n  const getCleaner = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n      {report['cleaner_name']}\n    </Link>);\n  }\n\n  const getRoom = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/rooms/${report['room_id']}`,\n                    state: {id: report['room_id']}\n                  }}>\n      {report['room_name']}\n    </Link>);\n  }\n  return (\n    <div>\n      <Typography variant={\"h5\"} style={{margin: '16px 0'}}>Past cleaning reports</Typography>\n      {reports.length > 0 ?\n        <TableContainer component={Paper}>\n          <Table size={'small'}>\n            <TableHead>\n              <TableRow>\n                <TableCell>{type === 'room' ? 'Cleaner' : 'Room'}</TableCell>\n                <TableCell align=\"right\">Cleaning time</TableCell>\n                <TableCell>Cleaning successful</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {reports.map((row) => (\n                <TableRow key={row['_id']}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {type === 'room' ? getCleaner(row) : getRoom(row)}\n                  </TableCell>\n                  <TableCell align=\"right\">{moment(row['cleaning_time']).format('DD.MM.YYYY HH:mm')}</TableCell>\n                  <TableCell>{getIcon(row['cleaning_succesful'])}</TableCell>\n                  <TableCell>\n                    <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                      viewReport(row)\n                    }}><VisibilityOutlined/>\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        : <Typography variant={\"h6\"}>No cleaning Reports</Typography>\n      }\n    </div>\n  );\n}\nCleaningReportsTable.propTypes = {\n  reports: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['cleaner', 'room']).isRequired\n\n}\nexport default CleaningReportsTable;","import RoomDetailsPage from './RoomDetailsPage';\nexport default RoomDetailsPage;","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {Button, Typography} from \"@material-ui/core\";\nimport {getAssignedCleaners, getReports, getRoom} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport RoomDetailsCard from \"./RoomDetailsCard\";\nimport RoomCleanerCard from \"./RoomCleanerCard\";\nimport CommentsList from \"./RoomReportComments\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable/CleaningReportsTable\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst RoomDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [roomLoaded, setRoomLoaded] = useState(false);\n  const [room, setRoom] = useState({});\n  const [reports, setReports] = useState([]);\n  const [cleaner, setCleaner] = useState({});\n\n  useEffect(() => {\n    getRoom(params.id)\n      .then((room) => {\n          setRoom(room);\n          setRoomLoaded(true);\n        },\n        (error) => console.log(error));\n    getAssignedCleaners(params.id)\n      .then((cleaners) => {\n        if (cleaners.length >= 1) {\n          setCleaner(cleaners[0]);\n        }\n      }, (error) => console.log(error));\n    getReports(params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id]);\n\n  const navigateToMap = () => {\n    history.push({\n      pathname: `/rooms`,\n      state: {id: params.id, action: 'show'}\n    })\n  }\n\n  return (\n    <PageContainer style={{width: '65%'}}>\n      {roomLoaded ? (\n        <>\n          <div className={styles.titleRow}>\n            <Typography variant={\"h4\"}>Room: {room.name}</Typography>\n            <Button variant={\"text\"} onClick={navigateToMap} size={\"small\"}>Show on map</Button>\n          </div>\n          <div className={styles.content}>\n            <div className={styles.detailsRow}>\n              <RoomDetailsCard room={room}/>\n              <RoomCleanerCard room={room} cleaner={cleaner} setCleaner={setCleaner}/>\n            </div>\n            <CommentsList reports={reports}/>\n            <Typography variant={\"h5\"}>Room map</Typography>\n            <div style={{width: 600, height: 400}}/>\n            <CleaningReportsTable reports={reports} type={'room'}/>\n          </div>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n    </PageContainer>\n  );\n}\n\nexport default RoomDetailsPage;","import CleaningReportsTable from './CleaningReportsTable';\nexport default CleaningReportsTable;","import * as Yup from \"yup\";\nimport {editCleaner} from \"../../utils/api\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport {Field, Form, Formik} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required()\n});\n\nconst EditCleanerDialog = ({cleaner, open, setOpen, onSave}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n  const start = cleaner['shift_start'].split(':');\n  const end = cleaner['shift_end'].split(':');\n\n  const initialValues = {\n    name: cleaner.name,\n    startHour: start.length > 0 ? start[0] : '',\n    endHour: end.length > 0 ? end[0] : '',\n    startMinutes: start.length > 0 ? start[1] : '',\n    endMinutes: end.length > 0 ? end[1] : ''\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const edited = vars;\n    edited['_id'] = cleaner['_id'];\n    edited['shift_start'] = `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`;\n    edited['shift_end'] = `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`;\n    const res = await editCleaner(edited);\n    console.log(res);\n    setSubmitting(false);\n    setOpen(false);\n    onSave();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Edit cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nexport default EditCleanerDialog;\n","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport {getAssignedRooms, getCleaner, getReports, unAssignRoom, deleteCleaner as removeCleaner} from \"../../utils/api\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AccountCircleRounded, Clear, DeleteForever, Edit} from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {getRoomTypeProp} from \"../../utils/utils\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable\";\nimport styles from './CleanerDetailsPage.module.scss';\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport EditCleanerDialog from \"./EditCleanerDialog\";\n\nconst CleanerDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [cleanerLoaded, setCleanerLoaded] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [cleaner, setCleaner] = useState({});\n  const [reports, setReports] = useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [data, getData] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('Cleaned deleted');\n\n  const handleConfirmClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const deleteCleaner = async () => {\n    await removeCleaner(cleaner['_id']);\n    setSnackText('Cleaner Deleted');\n    setSnackOpen(true);\n    history.goBack();\n  }\n\n  const saved = () => {\n    setSnackText('Saved');\n    setSnackOpen(true);\n    getData(true);\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  useEffect(() => {\n    getCleaner(params.id)\n      .then((room) => {\n          console.log(room);\n          setCleaner(room);\n          setCleanerLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        });\n    getReports(null, params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id, data]);\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.row} style={{justifyContent: 'space-between'}}>\n        <Typography variant={\"h5\"} className={styles.semiBold}>Cleaner details</Typography>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          Actions\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => {\n            handleClose();\n            setEditing(true);\n          }}>\n            <ListItemIcon>\n              <Edit fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Edit cleaner\"/>\n          </MenuItem>\n          <MenuItem onClick={() => {\n            setOpen(true);\n            handleClose()\n          }}>\n            <ListItemIcon>\n              <DeleteForever color={\"error\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Delete cleaner\"/>\n          </MenuItem>\n        </Menu>\n      </div>\n      {cleanerLoaded ? (\n        <>\n          <div className={[styles.row, styles.content].join(' ')}>\n            <AccountCircleRounded className={styles.avatar}/>\n            <div>\n              <Typography variant={\"h6\"} className={styles.semiBold}>Cleaner name: {cleaner.name}</Typography>\n              <Typography variant={\"body1\"} color={\"textSecondary\"}>\n                Shift: {cleaner['shift_start']} - {cleaner['shift_end']}\n              </Typography>\n            </div>\n          </div>\n          <AssignmentsTable cleaner={cleaner}/>\n          <CleaningReportsTable reports={reports} type={\"cleaner\"}/>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete cleaner\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the cleaner?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n            handleConfirmClose();\n            deleteCleaner();\n          }} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {cleanerLoaded &&\n      <EditCleanerDialog cleaner={cleaner} open={editing} setOpen={setEditing} onSave={saved}/>}\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nconst AssignmentsTable = ({cleaner}) => {\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    getAssignedRooms(cleaner['_id'])\n      .then((assignments) => {\n        console.log(assignments);\n        setAssignments(assignments);\n        setLoading(false);\n      }, (error) => {\n        console.log(error);\n      })\n  }, [cleaner]);\n\n  const removeAssignment = async (room) => {\n    const response = await unAssignRoom(room['_id'], cleaner['_id']);\n    console.log(response);\n    const newAssignments = [...assignments];\n    newAssignments.splice(assignments.indexOf(room), 1);\n    setAssignments(newAssignments);\n    setOpen(true);\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    loading ? <CircularProgress color=\"secondary\"/> :\n      <TableContainer component={Paper}>\n        <Table size={\"small\"}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Room</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Contamination Index</TableCell>\n              <TableCell align=\"right\">Room type</TableCell>\n              <TableCell align=\"right\">Cleaning Status</TableCell>\n              <TableCell>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {assignments.map((row) => (\n              <TableRow key={row['_id']}>\n                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                <TableCell align=\"right\">{}</TableCell>\n                <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n                <TableCell align=\"right\">{row['is_cleaning'] ? 'Cleaning in progress' : 'Needs cleaning'}</TableCell>\n                <TableCell>\n                  <Tooltip title={\"Remove assignment\"}>\n                    <IconButton size={\"small\"} onClick={() => {\n                      removeAssignment(row);\n                    }}>\n                      <Clear color={\"error\"}/>\n                    </IconButton>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}\n                  anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n          <Alert variant={\"filled\"} severity=\"success\" onClose={handleClose}>\n            Assignment removed\n          </Alert>\n        </Snackbar>\n      </TableContainer>\n  );\n}\n\nexport default CleanerDetailsPage;","import CleanerDetailsPage from './CleanerDetailsPage';\nexport default CleanerDetailsPage;","import ReportPage from './ReportPage';\nexport default ReportPage;\n","import React, {useEffect, useState} from 'react';\nimport {useLocation} from \"react-router-dom\";\nimport {getHeatmap, getReport} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Typography, Select, Grid} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport styles from './ReportPage.module.scss';\nimport {Check, CloseRounded} from \"@material-ui/icons\";\n\nconst ReportPage = () => {\n  const location = useLocation();\n  const {id} = location.state;\n  const [report, setReport] = useState({});\n  const [type, setType] = useState('');\n\n\n  useEffect(() => {\n    getReport(id)\n      .then((report) => {\n        setReport(report);\n      })\n  }, [id]);\n\n  const mapSelected = async (event) => {\n    setType(event.target.value);\n    await getHeatmap(id, event.target.value)\n      .then((res) => {\n        console.log(res);\n      }, (err) => console.log(err));\n  }\n\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good} fontSize={\"large\"}/>) : (<CloseRounded color={\"error\"} fontSize={\"large\"}/>);\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h4\"} className={styles.semiBold}>Cleaning report details</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"}>Room map</Typography>\n            <FormControl variant={'outlined'} style={{minWidth: '320px', marginBottom: 8}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Contamination map type</InputLabel>\n              <Select label=\"Contamination map type\" onChange={mapSelected} value={type}>\n                <MenuItem value=\"clean\">After cleaning</MenuItem>\n                <MenuItem value=\"contamination\">Before cleaning</MenuItem>\n                <MenuItem value=\"Combined\">After cleaning</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div className={styles.map} />\n          <Typography variant={\"h5\"}>Cleaner comments:</Typography>\n          <div className={styles.comments}>\n            <Typography variant={\"body\"} className={styles.comment}>{report.comments}</Typography>\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaner:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['cleaner_name']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning time:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['cleaning_time']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Contamination index:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>75</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning successful:</Typography>\n            <div style={{marginLeft: 4, height: 35}}>{getIcon(report['cleaning_succesful'])}</div>\n          </div>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  )\n}\n\nexport default ReportPage;","import React from 'react';\nimport './App.scss';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport {authenticated as auth} from '../utils/api';\nimport DashboardPage from \"../pages/DashboardPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport CleanersPage from \"../pages/CleanersPage\";\n//import PageContainer from \"../containers/PageContainer\";\nimport Toolbar from \"../components/Toolbar\";\nimport {useLocation} from 'react-router-dom';\nimport AnalysisPage from \"../pages/AnalysisPage\";\nimport RoomsPage from \"../pages/RoomsPage\";\nimport AssignmentsPage from \"../pages/AssignmentsPage\";\nimport RoomDetailsPage from \"../pages/RoomDetailsPage\";\nimport CleanerDetailsPage from \"../pages/CleanerDetailsPage\";\nimport ReportPage from \"../pages/ReportPage\";\n\nfunction App() {\n  const location = useLocation();\n  const login = () => (auth() ? <Redirect to=\"/dashboard\"/> : <LoginPage/>);\n  const dash = () => (!auth() ? <Redirect to=\"/\"/> : <DashboardPage/>);\n  const cleaner = () => (!auth() ? <Redirect to=\"/\"/> : <CleanerDetailsPage/>);\n  const cleaners = () => (!auth() ? <Redirect to=\"/\"/> : <CleanersPage/>);\n  const assignments = () => (!auth() ? <Redirect to=\"/\"/> : <AssignmentsPage/>);\n  const rooms = () => (!auth() ? <Redirect to=\"/\"/> : <RoomsPage/>);\n  const room = () => (!auth() ? <Redirect to=\"/\"/> : <RoomDetailsPage/>);\n  const analysis = () => (!auth() ? <Redirect to=\"/\"/> : <AnalysisPage/>);\n  const report = () => (!auth() ? <Redirect to=\"/\"/> : <ReportPage/>);\n\n  return (\n    <div className=\"App\">\n      <Toolbar/>\n      <Switch location={location}>\n        <Route path={\"/dashboard\"} render={dash}/>\n        <Route path={\"/cleaners/:id\"} render={cleaner}/>\n        <Route path={\"/cleaners\"} render={cleaners}/>\n        <Route path={\"/assignments\"} render={assignments}/>\n        <Route path={\"/rooms/:id\"} render={room}/>\n        <Route path={\"/rooms\"} render={rooms}/>\n        <Route path={\"/analysis\"} render={analysis}/>\n        <Route path={\"/reports/:id\"} render={report}/>\n        <Route path={\"/\"} render={login}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {unstable_createMuiStrictModeTheme as createMuiTheme, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport {blueGrey, lightBlue} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[900],\n    },\n    secondary: lightBlue\n  },\n  typography: {\n    fontFamily: ['Raleway', 'sans-serif']\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={'/spotless'}>\n      <ThemeProvider theme={theme}>\n        <StylesProvider injectFirst>\n          <App/>\n        </StylesProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ReportPage_row__1XU8D\",\"semiBold\":\"ReportPage_semiBold__20bHc\",\"reportInfo\":\"ReportPage_reportInfo__KuWwG\",\"column\":\"ReportPage_column__1fkvo\",\"good\":\"ReportPage_good__IEB1u\",\"map\":\"ReportPage_map__1ruE5\",\"comments\":\"ReportPage_comments__vvAhd\",\"comment\":\"ReportPage_comment__38N5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1Bm9j\",\"name\":\"Toolbar_name__3EvOQ\",\"svg\":\"Toolbar_svg__3XlL9\",\"tab\":\"Toolbar_tab__3uwiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ShiftPicker_menu__1os-v\",\"row\":\"ShiftPicker_row__rUGBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"CleanersPage_headerRow__20bGG\",\"bold\":\"CleanersPage_bold__qIG9F\",\"menu\":\"CleanersPage_menu__1x8Ct\",\"row\":\"CleanersPage_row__2H2UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"CleanerDetailsPage_content__3PEfI\",\"avatar\":\"CleanerDetailsPage_avatar__3KDG8\",\"row\":\"CleanerDetailsPage_row__G0VOc\",\"menu\":\"CleanerDetailsPage_menu__2gyF8\",\"column\":\"CleanerDetailsPage_column__3374X\",\"semiBold\":\"CleanerDetailsPage_semiBold__1F3iu\"};"],"sourceRoot":""}