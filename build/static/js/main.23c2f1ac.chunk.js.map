{"version":3,"sources":["components/StatusDot/StatusDot.module.scss","pages/AssignmentsPage/AssignmentsPage.module.scss","components/RoomSelector/RoomSelector.module.scss","pages/RoomDetailsPage/RoomDetailsPage.module.scss","components/Charts/ReportsPerDay/ReportsPerDay.module.scss","pages/CleanersPage/CleanersPage.module.scss","components/ShiftPicker/ShiftPicker.module.scss","pages/RoomsPage/RoomsPage.module.scss","containers/PageContainer/PageContainer.module.scss","pages/LoginPage/LoginPage.module.scss","components/CleaningReportsTable/CleaningReportTable.module.scss","pages/AdminPage/AdminPage.module.scss","assets/hospital.png","components/CleanerSelect/CleanerSelect.module.scss","pages/ReportPage/ReportPage.module.scss","components/Toolbar/Toolbar.module.scss","assets/heatmap2.png","utils/constants.js","components/StatusDot/index.js","components/StatusDot/StatusDot.js","utils/utils.js","utils/api.js","containers/PageContainer/index.js","containers/PageContainer/PageContainer.js","pages/DashboardPage/KeyStat.js","components/Charts/ReportsPerDay/index.js","components/Charts/ReportsPerDay/ReportsPerDay.js","pages/DashboardPage/index.js","pages/DashboardPage/DashboardPage.js","pages/LoginPage/LoginPage.js","pages/LoginPage/index.js","components/ShiftPicker/ShiftPicker.js","pages/CleanersPage/CleanersPage.js","pages/CleanersPage/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","pages/AnalysisPage/index.js","pages/AnalysisPage/AnalysisPage.js","pages/RoomsPage/RoomsPage.js","pages/RoomsPage/index.js","utils/tableUtils.js","components/CleanerSelect/index.js","components/CleanerSelect/CleanerSelect.js","pages/AssignmentsPage/AssignCleanerDialog.js","pages/AssignmentsPage/TableFilters.js","pages/AssignmentsPage/AssignmentsPage.js","pages/AssignmentsPage/index.js","pages/RoomDetailsPage/RoomDetailsCard.js","pages/RoomDetailsPage/RoomCleanerCard.js","pages/RoomDetailsPage/RoomReportComments.js","components/CleaningReportsTable/CleaningReportsTable.js","pages/RoomDetailsPage/index.js","pages/RoomDetailsPage/RoomDetailsPage.js","components/CleaningReportsTable/index.js","pages/CleanerDetailsPage/EditCleanerDialog.js","components/RoomSelector/RoomSelector.js","components/RoomSelector/index.js","pages/CleanerDetailsPage/CleanerDetailsPage.js","pages/CleanerDetailsPage/index.js","pages/ReportPage/index.js","pages/ReportPage/ReportPage.js","pages/AdminPage/index.js","pages/AdminPage/AdminPage.js","app/App.js","serviceWorker.js","index.js","pages/CleanerDetailsPage/CleanerDetailsPage.module.scss","pages/DashboardPage/DashboardPage.module.scss"],"names":["module","exports","API_KEY","BASE_URL","ROOM_TYPES","Object","freeze","OFFICE","frequency","cleaningTime","displayName","key","TOILET","WARD_ROOM","EXAMINATION_ROOM","CORRIDOR","WAITING_ROOM","StatusDot","variant","size","tooltip","classes","styles","dot","push","neutral","small","Tooltip","title","className","join","getRoomTypeProp","room","propName","getStatus","contamination","getVariant","update_img","arrayBuffer","auxCanvas","canvas","scaler","arr","BigUint64Array","error","bytearray","array","min","max","pix","pix1","minRaw","BigInt","Number","MAX_SAFE_INTEGER","maxRaw","j","length","im_p","i","Uint8Array","convert64to8","red","green","blue","a","b","tableRed","tableGreen","tableBlue","Math","cos","round","pow","sin","atan","Uint8ClampedArray","initColorMaps","redMap","greenMap","blueMap","img","imgArr","h","ImageData","data","byteIdx","imgIdx","grayValue","console","log","ctx","getContext","putImageData","drawImage","style","authenticated","localStorage","getItem","getUser","JSON","parse","getRooms","hospital","floor","showAssigned","params","doGetRequest","getHospitals","getAssignedRooms","cleanerId","getAssignedCleaners","roomId","assignRoomsToCleaner","rooms","cleaner","Promise","all","map","assignRoom","unAssignRooms","unAssignRoom","doPostRequest","stringify","doDeleteRequest","getRoom","getCleaners","getCleaner","createCleaner","name","shiftStart","shiftEnd","getReports","deleteCleaner","getReport","reportId","getHeatmap","type","requestURL","fetch","method","headers","response","ok","json","Error","getRoomHeatmap","editCleaner","doPutRequest","url","message","body","PageContainer","children","top","noToolbar","pageContainer","pageContent","KeyStat","value","subtitle","color","stat","keyStat","Typography","ReportsPerDay","useState","loading","setLoading","reports","setReports","useEffect","then","report","moment","format","counts","forEach","x","keys","date","amount","height","Paper","container","CircularProgress","margin","width","chart","dataKey","strokeDasharray","stroke","strokeWidth","DashboardPage","user","setUser","setRooms","u","result","textAlign","marginBottom","username","Grid","spacing","item","xs","semiBold","marginTop","grid","filter","isSame","contaminations","val","reduce","getContaminationIndex","validationSchema","Yup","required","password","LoginPage","history","useHistory","form","initialValues","onSubmit","vars","setSubmitting","isSuperAdmin","setItem","superAdmin","authenticate","isSubmitting","resetForm","values","component","TextField","autoFocus","id","label","fullWidth","Button","btn","ShiftPicker","row","Select","Array","number","num","toString","padStart","MenuItem","firstName","lastName","AddCleanerDialog","open","setOpen","setIsLoaded","setSnackOpen","handleClose","handleSubmit","startHour","startMinutes","endHour","endMinutes","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","onClick","CleanersTable","cleaners","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","assignedRooms","numCleaned","placement","getCleaningProgress","isBetween","IconButton","pathname","state","viewCleaner","VisibilityOutlined","CleanersPage","setCleaners","isLoaded","React","snackOpen","responses","err","handleSnackClose","event","reason","headerRow","bold","AddCircleOutline","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","NavTabs","withStyles","root","flexGrow","indicator","display","justifyContent","backgroundColor","borderTopLeftRadius","borderTopRightRadius","props","Tabs","TabIndicatorProps","Toolbar","location","useLocation","getTabValue","tabId","route","matchPath","path","exact","strict","mountTabValueFactory","anchorEl","setAnchorEl","AppBar","position","toolbar","split","goBack","ArrowBackRounded","svg","Tab","tab","DashboardRounded","fontSize","Link","to","disableRipple","FormatListBulletedRounded","PeopleRounded","BusinessRounded","AssessmentRounded","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","ListItemIcon","Settings","ListItemText","primary","removeItem","ExitToApp","AnalysisPage","RoomTable","building","patient","openRoom","RoomsPage","setError","hospitals","setHospitals","setHospital","FormControl","minWidth","InputLabel","onChange","target","hosp","src","hospitalImg","alt","descendingComparator","orderBy","undefined","getComparator","order","stableSort","comparator","stabilizedThis","el","index","sort","handleClick","selected","setSelected","selectedIndex","indexOf","newSelected","concat","slice","CleanerSelect","options","setOptions","openSelect","setOpenSelect","setCleaner","active","clnrs","Autocomplete","onOpen","autocomplete","getOptionLabel","option","newValue","renderInput","InputProps","endAdornment","AssignCleanerDialog","setSnackText","selectedWithCleaner","disableBackdropClick","disabled","TableFilters","setBuilding","setFloor","roomType","setRoomType","assigned","setAssigned","filtered","valid","Set","FormControlLabel","control","Checkbox","checked","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","numSelected","rowCount","onRequestSort","padding","indeterminate","inputProps","headCell","sortDirection","TableSortLabel","direction","property","visuallyHidden","useToolbarStyles","makeStyles","theme","paddingLeft","paddingRight","flexDirection","highlight","palette","secondary","main","lighten","light","text","dark","filters","minHeight","EnhancedTableToolbar","getData","showFilters","removeAssignments","clsx","fontWeight","startIcon","Close","critical","flexBasis","marginRight","aria-label","FilterList","useStyles","paper","table","border","clip","overflow","AssignmentsPage","setOrder","setOrderBy","page","setPage","roomsPerPage","setRoomsPerPage","origRooms","setOrigRooms","snackText","newSelecteds","n","isItemSelected","labelId","hover","role","aria-checked","tabIndex","RouterLink","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","RoomDetailsCard","Card","card","cardContent","Divider","divider","medium","RoomCleanerCard","newCleaner","setNewCleaner","hasCleaner","removeCleanerAssignment","assignNewCleaner","getColor","marginLeft","ClearOutlined","lineHeight","CommentsList","comments","time","comment","author","ReportsTableHead","unshift","CleaningReportsTable","reportsPerPage","setReportsPerPage","Check","good","CloseRounded","viewReport","RoomDetailsPage","roomLoaded","setRoomLoaded","setRoom","showMap","setShowMap","errorMsg","setErrorMsg","Date","document","getElementById","catch","titleRow","action","content","detailsRow","EditCleanerDialog","onSave","start","end","edited","res","RoomSelector","assign","maxWidth","AssignmentsTable","assignments","setAssignments","removeAssignment","newAssignments","splice","Clear","CleanerDetailsPage","cleanerLoaded","setCleanerLoaded","editing","setEditing","showRoomSelector","setShowRoomSelector","handleConfirmClose","removeCleaner","Edit","DeleteForever","AccountCircleRounded","avatar","aria-describedby","DialogContentText","ReportPage","setReport","setType","mapSelected","aux","reportInfo","AdminPage","simSpeed","updateSimSpeed","slider","gutterBottom","Slider","getAriaValueText","valueLabelDisplay","step","marks","mark","generateMarks","App","render","auth","window","hostname","match","createMuiTheme","blueGrey","lightBlue","typography","fontFamily","ReactDOM","StrictMode","basename","ThemeProvider","StylesProvider","injectFirst","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23c2f1ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot\":\"StatusDot_dot__1rSYH\",\"good\":\"StatusDot_good__1GIEp\",\"medium\":\"StatusDot_medium__3zBB3\",\"critical\":\"StatusDot_critical__23vOC\",\"neutral\":\"StatusDot_neutral__1H6OR\",\"tiny\":\"StatusDot_tiny__33nQ5\",\"small\":\"StatusDot_small__1yc1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AssignmentsPage_title__3UMlB\",\"critical\":\"AssignmentsPage_critical__3ZemZ\",\"row\":\"AssignmentsPage_row__2lJV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RoomSelector_title__363JP\",\"critical\":\"RoomSelector_critical__a-ztV\",\"row\":\"RoomSelector_row__n9QC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleRow\":\"RoomDetailsPage_titleRow__JoTlm\",\"content\":\"RoomDetailsPage_content__2CxAu\",\"card\":\"RoomDetailsPage_card__2J4HU\",\"cardContent\":\"RoomDetailsPage_cardContent__1soEX\",\"detailsRow\":\"RoomDetailsPage_detailsRow__3fj0E\",\"row\":\"RoomDetailsPage_row__PCQ4C\",\"divider\":\"RoomDetailsPage_divider__hWVez\",\"semiBold\":\"RoomDetailsPage_semiBold__24ERR\",\"medium\":\"RoomDetailsPage_medium__3Rnxk\",\"good\":\"RoomDetailsPage_good__2jSxq\",\"med\":\"RoomDetailsPage_med__T6SFg\",\"critical\":\"RoomDetailsPage_critical__2gPiW\",\"neutral\":\"RoomDetailsPage_neutral__2SrpQ\",\"btn\":\"RoomDetailsPage_btn__3tYWx\",\"map\":\"RoomDetailsPage_map__2yhwI\",\"comments\":\"RoomDetailsPage_comments__1nTSD\",\"comment\":\"RoomDetailsPage_comment__1rwNF\",\"author\":\"RoomDetailsPage_author__tbk-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ReportsPerDay_chart__1nn7U\",\"title\":\"ReportsPerDay_title__aLd0m\",\"container\":\"ReportsPerDay_container__3-OV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"CleanersPage_headerRow__20bGG\",\"bold\":\"CleanersPage_bold__qIG9F\",\"menu\":\"CleanersPage_menu__1x8Ct\",\"row\":\"CleanersPage_row__2H2UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ShiftPicker_menu__1os-v\",\"row\":\"ShiftPicker_row__rUGBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"RoomsPage_headerRow__3ck7N\",\"bold\":\"RoomsPage_bold__39rfR\",\"map\":\"RoomsPage_map__19OrU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"PageContainer_pageContainer__iX86t\",\"pageContent\":\"PageContainer_pageContent__1wPf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginPage_form__38hI6\",\"btn\":\"LoginPage_btn__Q93UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"CleaningReportTable_good__2fi-5\",\"semiBold\":\"CleaningReportTable_semiBold__3M_nh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"AdminPage_slider__15E9C\",\"row\":\"AdminPage_row__2qRHf\"};","module.exports = __webpack_public_path__ + \"static/media/hospital.ea9e1e90.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autocomplete\":\"CleanerSelect_autocomplete__2dss4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ReportPage_row__1XU8D\",\"semiBold\":\"ReportPage_semiBold__20bHc\",\"reportInfo\":\"ReportPage_reportInfo__KuWwG\",\"column\":\"ReportPage_column__1fkvo\",\"good\":\"ReportPage_good__IEB1u\",\"map\":\"ReportPage_map__1ruE5\",\"comments\":\"ReportPage_comments__vvAhd\",\"comment\":\"ReportPage_comment__38N5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1Bm9j\",\"name\":\"Toolbar_name__3EvOQ\",\"svg\":\"Toolbar_svg__3XlL9\",\"tab\":\"Toolbar_tab__3uwiV\"};","module.exports = __webpack_public_path__ + \"static/media/heatmap2.dbb6a747.png\";","export const API_KEY = 'zL43mXgXk5xa7YFRBVZscbLnGFaqVh24q5G6fhGjmAv532FAVBRtnuCJpwXWXnhw';\nexport const BASE_URL = 'https://cleaner-app-api.azurewebsites.net/api/';\n\nexport const ROOM_TYPES = Object.freeze({\n  OFFICE: {\n    frequency: 1,\n    cleaningTime: 5,\n    displayName: 'Office',\n    key: 'OFFICE'\n  },\n  TOILET: {\n    frequency: 5,\n    cleaningTime: 5,\n    displayName: 'Toilet',\n    key: 'TOILET'\n  },\n  WARD_ROOM: {\n    frequency: 5,\n    cleaningTime: 8,\n    displayName: 'Ward room',\n    key: 'WARD_ROOM'\n  },\n  EXAMINATION_ROOM: {\n    frequency: 5,\n    cleaningTime: 6,\n    displayName: 'Examination room',\n    key: 'EXAMINATION_ROOM'\n  },\n  CORRIDOR: {\n    frequency: 3,\n    cleaningTime: 9,\n    displayName: 'Corridor',\n    key: 'CORRIDOR'\n  },\n  WAITING_ROOM: {\n    frequency: 5,\n    cleaningTime: 10,\n    displayName: 'Waiting room',\n    key: 'WAITING_ROOM'\n  },\n});","import StatusDot from './StatusDot';\nexport default StatusDot;","import React from 'react';\nimport styles from './StatusDot.module.scss';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PropTypes from \"prop-types\";\n\n\nconst StatusDot = ({variant, size, tooltip}) => {\n  const classes = [styles.dot];\n  classes.push(variant ? styles[variant] : styles.neutral);\n  classes.push(size ? styles[size] : styles.small);\n  return (\n    <Tooltip title={tooltip}>\n      <div className={classes.join(' ')}/>\n    </Tooltip>\n  );\n}\n\nStatusDot.propTypes = {\n  variant: PropTypes.oneOf(['good', 'critical', 'medium', 'neutral']).isRequired,\n  size: PropTypes.oneOf(['tiny', 'small', 'medium']).isRequired,\n  tooltip: PropTypes.any\n}\n\nexport default StatusDot;","import {ROOM_TYPES} from \"./constants\";\nimport StatusDot from \"../components/StatusDot\";\nimport React from \"react\";\n\nexport const getRoomTypeProp = (room, propName) => {\n  return room['room_type'] !== '<empty>' ? ROOM_TYPES[room['room_type']][propName] : '';\n}\n\nexport const getStatus = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return <StatusDot variant={variant} size={\"tiny\"} tooltip={contamination}/>\n}\n\nexport const getVariant = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return variant;\n}\n\nfunction convert64to8(array, scaler) {\n  let min, max, pix;\n  // eslint-disable-next-line no-undef\n  let minRaw = BigInt(Number.MAX_SAFE_INTEGER);\n  // eslint-disable-next-line no-undef\n  let maxRaw = BigInt(0);\n  for (let j = 0; j < array.length; j++) {\n    pix = array[j]\n    if (pix < minRaw) {\n      minRaw = pix\n    }\n    if (pix > maxRaw) {\n      maxRaw = pix\n    }\n  }\n  // eslint-disable-next-line no-undef\n  max = BigInt(maxRaw) / scaler;\n  // eslint-disable-next-line no-undef\n  min = BigInt(minRaw);\n  let pix1;\n  let im_p = [];\n  if (max <= min) {\n    max = min + 1n\n  }\n  for (let i = 0; i < array.length; i++) {\n    // eslint-disable-next-line no-undef\n    pix1 = (array[i] - min) * 255n / (max - min);\n    if (pix1 > 255n) {\n      pix1 = 255\n    }\n    if (pix1 < 0n) {\n      pix1 = 0n\n    }\n    im_p.push(Number(pix1));\n  }\n  return new Uint8Array(im_p);\n}\n\n// lookup color table to apply to grayscale image\nfunction initColorMaps() {\n  let tableRed = []\n  let tableGreen = []\n  let tableBlue = []\n  let red, green, blue;\n  let a, b;\n  for (let i = 0; i <= 255; i++) {\n    a = i * 0.01236846501;\n    b = Math.cos(a - 1.0)\n    red = Math.round(Math.pow(2.0, Math.sin(a - 1.6)) * 200)\n    green = Math.round(Math.atan(a) * b * 155 + 100.0)\n    blue = Math.round(b * 255)\n    red = Math.min(255, red);\n    green = Math.min(255, green);\n    blue = Math.min(255, blue);\n    red = Math.max(0, red);\n    green = Math.max(0, green);\n    blue = Math.max(0, blue);\n    tableRed.push(red)\n    tableGreen.push(green)\n    tableBlue.push(blue)\n  }\n  return [new Uint8ClampedArray(tableRed), new Uint8ClampedArray(tableGreen), new Uint8ClampedArray(tableBlue)];\n}\n\nexport function update_img(arrayBuffer, auxCanvas, canvas, scaler) {\n  let arr = null;\n  try {\n    // eslint-disable-next-line no-undef\n    arr = new BigUint64Array(arrayBuffer);\n  } catch (error) {\n    throw error;\n  }\n  let bytearray = convert64to8(arr, scaler);\n  let [redMap, greenMap, blueMap] = initColorMaps();\n  let img = null; //ImageData\n  let imgArr = null; //Uint8ClampedArray\n  const h = Math.round(bytearray.length / 72);\n  if (bytearray) {\n    img = new ImageData(72, h); // Note: the actual array is 4 times bigger because has (RGBA) pixels\n    imgArr = img.data;\n    let byteIdx = 0;\n    // color mapped image\n    for (let imgIdx = 0; imgIdx < imgArr.length; imgIdx += 4) {\n      let grayValue = bytearray[byteIdx];\n      imgArr[imgIdx] = redMap[grayValue]; // R value\n      imgArr[imgIdx + 1] = greenMap[grayValue]; // G value\n      imgArr[imgIdx + 2] = blueMap[grayValue]; // B value\n      imgArr[imgIdx + 3] = 255; // Alpha value\n      byteIdx++;\n    }\n  }\n  console.log(img)\n  // Scaling. It seems that with putImageData we cannot scale the canvas directly\n  // auxCanvas has the image and\n  let ctx = canvas.getContext('2d');\n  auxCanvas.getContext(\"2d\").putImageData(img, 0, 0);\n  ctx.drawImage(auxCanvas, 0, 0)\n  // flip Y AND X axis\n  canvas.style = \"transform: scale(1, 1); flex: 0\";\n}\n\n/*function update_scale(){\n  // clear\n  auxCanvas.getContext(\"2d\").clearRect(0,0,auxCanvas.width,auxCanvas.height);\n  ctx.clearRect(0,0,canvas.width,canvas.height);\n  //scale = Number($(\"scale\").value);\n\n  ctx.scale(scale, scale);\n  //console.log(\"new scale: %f\", scale);\n}*/","import {API_KEY, BASE_URL} from \"./constants\";\nimport {getRoomTypeProp} from \"./utils\";\n\nexport const authenticated = () => {\n  return localStorage.getItem('user') !== null;\n};\n\nexport const getUser = () => {\n  if (authenticated()) {\n    return JSON.parse(localStorage.getItem('user'));\n  } else {\n    return false;\n  }\n}\n\nexport const authenticate = (username, password) => {\n  let isSuperAdmin = false;\n  if (username === 'superadmin' && password === 'admin') {\n    isSuperAdmin = true;\n  }\n  localStorage.setItem('user', JSON.stringify({\n    username,\n    superAdmin: isSuperAdmin\n  }));\n  return true;\n}\n\nexport const logout = () => {\n  localStorage.removeItem('user');\n}\n\n\nexport const getRooms = async (hospital, floor, showAssigned) => {\n  const url = 'rooms';\n  let params = hospital ? `?hospital_id=${hospital}` : '';\n  params += floor ? `?floor_id=${floor}` : '';\n  params += showAssigned ? `?assigned_cleaners=1` : '';\n  return doGetRequest(url, params);\n}\n\nexport const getHospitals = async () => {\n  return doGetRequest('hospitals');\n}\n\nexport const startCleaning = async (roomId) => {\n  return doGetRequest(`room/startcleaning?id=${roomId}`);\n}\n\nexport const stopCleaning = async (roomId) => {\n  return doGetRequest(`room/stopcleaning?id=${roomId}`);\n}\n\nexport const getAssignedRooms = async (cleanerId) => {\n  return doGetRequest(`cleaners/rooms?cleaner_id=${cleanerId}`);\n}\n\nexport const getAssignedCleaners = async (roomId) => {\n  return doGetRequest(`cleaners/rooms?room_id=${roomId}`);\n}\n\nexport const assignRoomsToCleaner = async (rooms, cleaner) => {\n  return Promise.all(rooms.map((room) => {\n    return assignRoom(room['_id'], cleaner);\n  }));\n}\n\nexport const unAssignRooms = async (rooms) => {\n  return Promise.all(rooms.map((room) => {\n    return unAssignRoom(room['_id'], room['assigned_cleaners'][0]['_id']);\n  }));\n}\n\nexport const assignRoom = async (room, cleaner) => {\n  return doPostRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const unAssignRoom = async (room, cleaner) => {\n  return doDeleteRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const getRoom = async (roomId) => {\n  return doGetRequest(`room?_id=${roomId}`);\n}\n\nexport const getCleaners = async () => {\n  return doGetRequest('cleaners/');\n}\n\nexport const getCleaner = async (cleanerId) => {\n  return doGetRequest(`cleaner?_id=${cleanerId}`);\n}\n\nexport const createCleaner = async (name, shiftStart, shiftEnd) => {\n  return doPostRequest('cleaner/', JSON.stringify({\n    name,\n    'shift_start': shiftStart,\n    'shift_end': shiftEnd\n  }));\n}\n\nexport const getReports = async (roomId, cleanerId) => {\n  let params = roomId ? `?room_id=${roomId}` : '';\n  params += cleanerId ? `?cleaner_id=${cleanerId}` : '';\n  return doGetRequest('reports', params)\n}\n\nexport const deleteCleaner = async (cleanerId) => {\n  return doDeleteRequest('cleaner', JSON.stringify({\n    '_id': cleanerId\n  }));\n}\n\nexport const getReport = async (reportId) => {\n  return doGetRequest(`report?_id=${reportId}`);\n}\n\nexport const getHeatmap = async (reportId, type) => {\n  const requestURL = BASE_URL + `report/heatmap?_id=${reportId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    console.log(json)\n    throw new Error(json.error);\n  }\n}\n\nexport const getRoomHeatmap = async (roomId, type) => {\n  const requestURL = BASE_URL + `room/heatmap?_id=${roomId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    throw new Error(json.error);\n  }\n}\n\nexport const editCleaner = async (cleaner) => {\n  return doPutRequest('cleaner/', JSON.stringify({\n    '_id': cleaner['_id'],\n    'name': cleaner.name,\n    'shift_start': cleaner['shift_start'],\n    'shift_end': cleaner['shift_end']\n  }));\n}\n\nexport const setSimulation = async (speed) => {\n  return doGetRequest('simulator', speed);\n}\n\nexport const createRoom = async (room) => {\n  return doPostRequest('/room', JSON.stringify({\n    'hospital_id': room['hospital_id'],\n    'name': room.name,\n    'is_simulated': true\n  }));\n}\n\nexport const updateRoom = async (room) => {\n  return doPutRequest('/room', JSON.stringify({\n    '_id': room['_id'],\n    'room_type': getRoomTypeProp(room, 'key'),\n    'building': room.building,\n    'floor': room.floor\n  }))\n}\n\nconst doGetRequest = async (url, params) => {\n  const requestURL = BASE_URL + url + (params || '');\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPostRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doDeleteRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPutRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}","import PageContainer from './PageContainer';\nexport default PageContainer;\n","import React from 'react';\nimport styles from './PageContainer.module.scss';\nimport PropTypes from 'prop-types';\n\nconst PageContainer = ({ children, style, noToolbar }) => {\n  const top = noToolbar ? 0 : '48px';\n  return (\n    <div className={styles.pageContainer} style={{top}}>\n      <div className={styles.pageContent} style={style}>{children}</div>\n    </div>\n  );\n};\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n  noToolbar: PropTypes.bool\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport styles from \"./DashboardPage.module.scss\";\nimport {Typography} from \"@material-ui/core\";\n\nconst KeyStat = ({value, subtitle, color}) => {\n  return (\n    <div className={styles.stat}>\n      <div className={styles.keyStat}>\n        <Typography variant={\"h3\"} style={{color}}>{value}</Typography>\n      </div>\n      <Typography variant={\"body2\"} className={styles.subtitle}>{subtitle}</Typography>\n    </div>\n  );\n}\n\nexport default KeyStat;","import ReportsPerDay from './ReportsPerDay';\nexport default ReportsPerDay;","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport {getReports} from \"../../../utils/api\";\nimport moment from \"moment\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./ReportsPerDay.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\n\nconst ReportsPerDay = () => {\n  const [loading, setLoading] = useState(true);\n  const [reports, setReports] = useState([]);\n\n  useEffect(() => {\n    getReports()\n      .then((reports) => {\n        let data = reports.map((report) => {\n          return moment(report['cleaning_time']).format('DD.MM.YYYY');\n        })\n        const counts = {};\n        data.forEach((x) => {\n          counts[x] = (counts[x] || 0) + 1;\n        });\n        const array = [];\n        Object.keys(counts).forEach((x) => {\n          array.push({\n            date: x,\n            amount: counts[x]\n          });\n        });\n        setReports(array);\n        setLoading(false);\n      });\n  }, []);\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Cleaning events per day</Typography>\n        {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n          <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n            <LineChart data={reports}>\n              <XAxis dataKey=\"date\"/>\n              <YAxis/>\n              <CartesianGrid strokeDasharray=\"3 3\"/>\n              <Tooltip/>\n              <Legend/>\n              <Line type=\"monotone\" dataKey=\"amount\" name=\"Cleaning events\" stroke=\"#8884d8\" strokeWidth={2}/>\n            </LineChart>\n          </ResponsiveContainer>\n        }\n      </Paper>\n    </div>\n  )\n}\n\nReportsPerDay.propTypes = {};\n\nexport default ReportsPerDay;","import DashboardPage from './DashboardPage';\nexport default DashboardPage;\n","import React, {useEffect, useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from './DashboardPage.module.scss';\nimport Grid from \"@material-ui/core/Grid\";\nimport KeyStat from \"./KeyStat\";\nimport {getRooms, getUser} from \"../../utils/api\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport moment from \"moment\";\nimport {getVariant} from \"../../utils/utils\";\nimport ReportsPerDay from \"../../components/Charts/ReportsPerDay\";\n\nconst DashboardPage = () => {\n  const [user, setUser] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n\n    getRooms()\n      .then((result) => {\n        setRooms(result);\n        setLoading(false);\n      })\n  }, []);\n\n  const getCleanedRooms = () => {\n    return rooms.filter((room) => {\n      if (!room['last_cleaned']) {\n         return false;\n      }\n      return moment(room['last_cleaned']).isSame(moment().format('YYYY-MM-DD'));\n    }).length;\n  }\n\n  const getContaminationIndex = () => {\n    const contaminations = [];\n    rooms.forEach((room) => {\n      const val = room['contamination_index'];\n      if (val > 100) {\n        contaminations.push(100);\n      } else if (val < 0) {\n        contaminations.push(0);\n      } else {\n        contaminations.push(val);\n      }\n    })\n    return contaminations.reduce((a, b) => (a + b)) / contaminations.length;\n  }\n\n  const getGreenRooms = () => {\n    return rooms.filter((room) => {\n      return getVariant(room['contamination_index']) === 'good';\n    }).length;\n  }\n\n  const getRedRooms = () => {\n    return rooms.filter((room) => {\n      return getVariant(room['contamination_index']) === 'critical';\n    }).length;\n  }\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h4\"} style={{marginBottom: 16}}>Hello {user && user.username}!</Typography>\n      <Grid container spacing={6}>\n        <Grid item xs={5}>\n          <Typography variant={\"h5\"} className={styles.semiBold}>Alerts</Typography>\n          <Typography variant={\"h6\"} style={{marginTop: 16}} className={styles.semiBold}>No active alerts</Typography>\n        </Grid>\n        <Grid item xs className={styles.grid}>\n          <Grid container spacing={4}>\n            <Grid item xs>\n              <KeyStat subtitle={\"Rooms cleaned today\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getCleanedRooms()} color={\"#F2C94C\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Average contamination index\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getContaminationIndex()}\n                       color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Green rooms\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getGreenRooms()} color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Red rooms\"} value={loading ? <CircularProgress color={\"secondary\"}/> : getRedRooms()}\n                       color={\"#EB5757\"}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <ReportsPerDay />\n    </PageContainer>\n  )\n}\n\nexport default DashboardPage;","import React from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {TextField} from \"formik-material-ui\";\nimport {Formik, Form, Field} from \"formik\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport {authenticate} from \"../../utils/api\";\nimport {useHistory} from 'react-router-dom';\nimport Paper from \"@material-ui/core/Paper\";\nimport styles from './LoginPage.module.scss';\n\n\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n});\n\nconst LoginPage = () => {\n  const history = useHistory();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const handleSubmit = (vars, {setSubmitting}) => {\n    console.log(vars)\n    authenticate(vars.username, vars.password);\n    history.push('/dashboard');\n  }\n\n  return (\n    <PageContainer noToolbar>\n      <Paper variant={\"elevation\"} className={styles.form}>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n          {({isSubmitting, resetForm, values}) => (\n            <Form>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant={\"h4\"}>Login to spotless</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    variant={\"outlined\"}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    variant={\"outlined\"}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button type=\"submit\" color=\"primary\" variant={\"contained\"} className={styles.btn}>Sign in</Button>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    </PageContainer>\n  )\n}\n\nexport default LoginPage;","import LoginPage from './LoginPage';\nexport default LoginPage;\n","import {Grid, MenuItem, Typography} from \"@material-ui/core\";\nimport styles from \"./ShiftPicker.module.scss\";\nimport {Field} from \"formik\";\nimport {Select} from \"formik-material-ui\";\nimport React from \"react\";\n\n\nconst ShiftPicker = () => {\n  return (\n    <Grid item xs className={styles.row}>\n      <div>\n        <Typography variant={\"body1\"}>Shift start</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"startHour\">\n            {[...Array(24).keys()].map((number) => {\n              const num = number.toString().padStart(2, '0')\n              return <MenuItem key={number} value={num}>{num}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"h6\"}>:</Typography>\n          <Field component={Select} name=\"startMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n      <Typography variant={\"h4\"} style={{margin: '0 16px'}}>-</Typography>\n      <div>\n        <Typography variant={\"body1\"}>Shift end</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"endHour\">\n            {[...Array(23).keys()].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"body1\"}>:</Typography>\n          <Field component={Select} name=\"endMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n    </Grid>\n  )\n}\n\nexport default ShiftPicker;","import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AddCircleOutline, VisibilityOutlined} from \"@material-ui/icons\";\nimport {createCleaner, getCleaners, getRooms} from \"../../utils/api\";\nimport styles from './CleanersPage.module.scss';\nimport * as Yup from \"yup\";\nimport {Formik, Form, Field} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\nimport moment from \"moment\";\n\nconst CleanersPage = () => {\n  const [cleaners, setCleaners] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([getCleaners(), getRooms(null, null, true)])\n      .then((responses) => {\n        setCleaners(responses[0]);\n        setRooms(responses[1]);\n        setIsLoaded(true);\n      }, (err) => {\n        console.log(err);\n      });\n  }, [setOpen, isLoaded])\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Cleaners</Typography>\n        <Tooltip title=\"Add cleaner\">\n          <IconButton onClick={() => setOpen(true)}>\n            <AddCircleOutline/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {isLoaded ? <CleanersTable cleaners={cleaners} rooms={rooms}/> :\n        <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Typography variant={\"h5\"} className={styles.bold} style={{marginTop: 24}}>Unassigned rooms</Typography>\n      <AddCleanerDialog open={open} setOpen={setOpen} setIsLoaded={setIsLoaded} setSnackOpen={setSnackOpen}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          Cleaner created\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required')\n});\n\nconst AddCleanerDialog = ({open, setOpen, setIsLoaded, setSnackOpen}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    startHour: '08',\n    endHour: '16',\n    startMinutes: '00',\n    endMinutes: '00'\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const cleaner = await createCleaner(`${vars.firstName} ${vars.lastName}`,\n      `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`,\n      `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`);\n    console.log(cleaner);\n    setIsLoaded(false);\n    setSubmitting(false);\n    setSnackOpen(true);\n    setOpen(false);\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create a new cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"First name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Last name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Create cleaner\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nconst CleanersTable = ({cleaners, rooms}) => {\n  const history = useHistory();\n\n  const viewCleaner = (cleaner) => {\n    const id = cleaner['_id'];\n    history.push({\n      pathname: `/cleaners/${id}`,\n      state: {id}\n    })\n  }\n\n  const getCleaningProgress = (cleaner) => {\n    const assignedRooms = rooms.filter((room) => {\n      return room['assigned_cleaners'].length > 0 && room['assigned_cleaners'][0]['_id'] === cleaner['_id'];\n    });\n    const numCleaned = assignedRooms.filter((room) => {\n      if (!room['last_cleaned']) {\n        return false;\n      }\n      return moment(room['last_cleaned'], 'YYYY-MM-DD').isSame(moment().format('YYYY-MM-DD'));\n    }).length;\n    return (\n      <Tooltip title={`${numCleaned}/${assignedRooms.length}`} placement={\"right\"}>\n        <Typography>{Math.round(((numCleaned / assignedRooms.length) * 100)) || 0} %</Typography>\n      </Tooltip>\n    )\n  }\n\n  const getStatus = (cleaner) => {\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    return isBetween ? '' : 'Unavailable';\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={'small'}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Shift start</TableCell>\n            <TableCell align=\"right\">Shift end</TableCell>\n            <TableCell align=\"right\">Cleaning progress</TableCell>\n            <TableCell align=\"right\">Current location</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {cleaners.map((row) => (\n            <TableRow key={row['_id']}>\n              <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row['shift_start']}</TableCell>\n              <TableCell align=\"right\">{row['shift_end']}</TableCell>\n              <TableCell align=\"right\">{getCleaningProgress(row)}</TableCell>\n              <TableCell align=\"right\">{}</TableCell>\n              <TableCell align=\"right\">{getStatus(row)}</TableCell>\n              <TableCell>\n                <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                  viewCleaner(row)\n                }}><VisibilityOutlined/></IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nexport default CleanersPage;","import CleanersPage from './CleanersPage';\nexport default CleanersPage;\n","import React, {useEffect, useState} from 'react';\nimport {AppBar, Typography, Tabs, Toolbar as MaterialToolbar, Tab, IconButton} from \"@material-ui/core\";\nimport {Link, useLocation, matchPath, useHistory} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport styles from './Toolbar.module.scss';\nimport {\n  ArrowBackRounded, AssessmentRounded,\n  BusinessRounded,\n  DashboardRounded, ExitToApp,\n  FormatListBulletedRounded,\n  PeopleRounded, Settings\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {getUser, logout} from \"../../utils/api\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst NavTabs = withStyles({\n  root: {\n    width: '100%',\n    flexGrow: 1\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    marginBottom: '4px',\n    '& > span': {\n      width: '40%',\n      backgroundColor: '#00b0ff',\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n  }\n})((props) => <Tabs {...props} TabIndicatorProps={{children: <span/>}}/>);\n\nconst mountTabValueFactory = (location, tabId) => (route) => !!matchPath(location.pathname, {\n  path: route,\n  exact: false,\n  strict: false,\n}) ? tabId : -1;\n\nconst Toolbar = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const tabId = 'myTabId';\n  const getTabValue = mountTabValueFactory(location, tabId);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [user, setUser] = useState('');\n\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n  }, []);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position={\"static\"}>\n      <MaterialToolbar variant={\"dense\"}>\n        <div className={styles.toolbar}>\n          {location.pathname.split('/').length > 2 ? (\n            <Tooltip title={'Go Back'}>\n              <IconButton onClick={() => {\n                history.goBack()\n              }}>\n                <ArrowBackRounded className={styles.svg}/>\n              </IconButton>\n            </Tooltip>\n          ) : <div style={{width: 40}}/>}\n          <Typography variant={\"h6\"} className={styles.name}>Spotless</Typography>\n        </div>\n        <NavTabs variant={\"fullWidth\"} value={tabId}>\n          <Tab label={<div className={styles.tab}><DashboardRounded fontSize={\"small\"}/> Dashboard</div>}\n               value={getTabValue(\"/dashboard\")} component={Link} to={\"/dashboard\"}\n               disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><FormatListBulletedRounded fontSize={\"small\"}/> Assignments</div>}\n               value={getTabValue(\"/assignments\")} component={Link} to={\"/assignments\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><PeopleRounded fontSize={\"small\"}/> Cleaners</div>}\n               value={getTabValue(\"/cleaners\")} component={Link} to={\"/cleaners\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><BusinessRounded fontSize={\"small\"}/> Rooms</div>}\n               value={getTabValue(\"/rooms\")} component={Link} to={\"/rooms\"} disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><AssessmentRounded fontSize={\"small\"}/> Analysis</div>}\n               value={getTabValue(\"/analysis\")} component={Link} to={\"/analysis\"}\n               disableRipple={true} className={styles.tab}/>\n        </NavTabs>\n        <Tooltip title={\"Open menu\"}>\n          <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <MenuIcon color={\"secondary\"}/>\n          </IconButton>\n        </Tooltip>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {user.superAdmin &&\n          <MenuItem onClick={() => {\n            handleClose();\n            history.push('/simulator');\n          }}>\n            <ListItemIcon>\n              <Settings fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Simulator\"/>\n          </MenuItem>}\n\n          <MenuItem onClick={() => {\n            handleClose();\n            logout();\n            history.push('/');\n          }}>\n            <ListItemIcon>\n              <ExitToApp color={\"secondary\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Sign out\"/>\n          </MenuItem>\n        </Menu>\n      </MaterialToolbar>\n    </AppBar>\n  );\n}\n\nexport default Toolbar;","import Toolbar from './Toolbar';\nexport default Toolbar;","import AnalysisPage from './AnalysisPage';\nexport default AnalysisPage;\n","import React from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Typography} from \"@material-ui/core\";\n\nconst AnalysisPage = () => {\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h5\"}>Analysis</Typography>\n    </PageContainer>\n  )\n}\n\nexport default AnalysisPage;","import React, {useEffect, useState} from 'react';\nimport {getHospitals, getRooms} from \"../../utils/api\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport moment from \"moment\";\nimport {VisibilityOutlined} from \"@material-ui/icons\";\nimport {useHistory} from 'react-router-dom';\nimport styles from \"./RoomsPage.module.scss\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getRoomTypeProp} from \"../../utils/utils\";\nimport hospitalImg from \"../../assets/hospital.png\";\n\nconst RoomsPage = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [hospitals, setHospitals] = useState([]);\n  const [hospital, setHospital] = useState('');\n\n  useEffect(() => {\n    getHospitals('hospital0')\n      .then((result) => {\n          console.log(result);\n          setIsLoaded(true);\n          setHospitals(result);\n        },\n        (err) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(err);\n        })\n  }, []);\n\n  const hospitalSelected = (event) => {\n    setHospital(event.target.value);\n    getRooms(event.target.value['_id'])\n      .then((rooms) => {\n          console.log(rooms);\n          setRooms(rooms);\n        },\n        (error) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }\n\n  return (\n    <PageContainer>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Rooms</Typography>\n        {!isLoaded ? <CircularProgress color=\"secondary\"/> :\n          (\n            <FormControl variant={'outlined'} style={{minWidth: '320px', margin: '8px'}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Select hospital</InputLabel>\n              <Select label=\"Select Hospital\" onChange={hospitalSelected} value={hospital}>\n                <MenuItem value={{}}>\n                  <em>None</em>\n                </MenuItem>\n                {\n                  hospitals.map(hosp => (\n                    <MenuItem value={hosp} key={hosp['_id']}>{hosp.name}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          )\n        }\n      </div>\n      <img src={hospitalImg} alt=\"hospital\" className={styles.map} />\n      {rooms.length > 0 && (\n        <RoomTable rooms={rooms}/>\n      )}\n      {error && <p>ERROR</p>}\n    </PageContainer>\n  )\n}\n\nconst RoomTable = ({rooms}) => {\n  const history = useHistory();\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const getPatient = (patient) => {\n    return patient === \"<empty>\" ? 'No' : 'Yes';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Building</TableCell>\n            <TableCell align=\"right\">Floor</TableCell>\n            <TableCell align=\"right\">Contamination index</TableCell>\n            <TableCell align=\"right\">Has Patient</TableCell>\n            <TableCell align=\"right\">Room type</TableCell>\n            <TableCell align=\"right\">Last cleaned</TableCell>\n            <TableCell>Action</TableCell>\n          </TableRow>\n         </TableHead>\n        <TableBody>\n          {rooms.map((row) => (\n            <TableRow key={row['_id']}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.building}</TableCell>\n              <TableCell align=\"right\">{row.floor}</TableCell>\n              <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n              <TableCell align=\"right\">{getPatient(row.patient)}</TableCell>\n              <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n              <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n              <TableCell>\n                <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                  openRoom(row)\n                }}><VisibilityOutlined/></IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default RoomsPage;","import RoomsPage from './RoomsPage';\nexport default RoomsPage;\n","export function descendingComparator(a, b, orderBy) {\n  if (a[orderBy] === undefined) return 1;\n\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport function handleClick(event, item, selected, setSelected) {\n  const selectedIndex = selected.indexOf(item);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selected, item);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selected.slice(1));\n  } else if (selectedIndex === selected.length - 1) {\n    newSelected = newSelected.concat(selected.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selected.slice(0, selectedIndex),\n      selected.slice(selectedIndex + 1),\n    );\n  }\n\n  setSelected(newSelected);\n}","import CleanerSelect from './CleanerSelect';\nexport default CleanerSelect;","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {getCleaners} from \"../../utils/api\";\nimport styles from \"./CleanerSelect.module.scss\";\n\nconst CleanerSelect = ({onChange, style}) => {\n  const [options, setOptions] = useState([]);\n  const [openSelect, setOpenSelect] = useState(false);\n  const [cleaner, setCleaner] = useState(null);\n  const loading = openSelect && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const clnrs = await getCleaners();\n\n      if (active) {\n        setOptions(clnrs);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  const onSelectChange = (event, newValue) => {\n    setCleaner(newValue);\n    onChange(event, newValue);\n  }\n\n  return (\n    <Autocomplete\n      open={openSelect}\n      onOpen={() => {\n        setOpenSelect(true);\n      }}\n      onClose={() => {\n        setOpenSelect(false);\n      }}\n      className={styles.autocomplete}\n      style={style}\n      getOptionLabel={(option) => option.name || ''}\n      options={options}\n      loading={loading}\n      value={cleaner}\n      onChange={onSelectChange}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Cleaner\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nCleanerSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  style: PropTypes.object\n}\n\nexport default CleanerSelect;","import React, {useState} from \"react\";\nimport {assignRoomsToCleaner, unAssignRooms} from \"../../utils/api\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\n\nexport const AssignCleanerDialog = ({open, setOpen, selected, setSnackOpen, onClose, setSnackText}) => {\n  const [cleaner, setCleaner] = useState(null);\n\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const handleSubmit = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n    handleClose();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}>\n      <DialogTitle id=\"form-dialog-title\">Select a cleaner</DialogTitle>\n      <DialogContent>\n        <CleanerSelect onChange={(event, newValue) => {\n          setCleaner(newValue)\n        }}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleSubmit} disabled={cleaner === ''}>\n          Assign\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {ROOM_TYPES} from \"../../utils/constants\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst TableFilters = ({rooms, setRooms}) => {\n  const [building, setBuilding] = React.useState('');\n  const [floor, setFloor] = React.useState('');\n  const [roomType, setRoomType] = React.useState('');\n  const [assigned, setAssigned] = React.useState(true);\n\n  const filter = (building, roomType, floor, assigned) => {\n    let filtered = rooms;\n    filtered = filtered.filter((room) => {\n      let valid = true;\n      if (building) {\n        valid = room.building === building;\n      }\n      if (floor) {\n        valid = room.floor === floor && valid;\n      }\n      if (roomType) {\n        valid = room['room_type'] === roomType.key && valid;\n      }\n      if (!assigned) {\n        valid = room['assigned_cleaners'].length === 0 && valid;\n      }\n      return valid;\n    });\n    setRooms(filtered);\n  }\n\n  const getBuildings = () => {\n    return [...new Set(rooms.map(room => {\n      return room.building;\n    }))];\n  };\n\n  const getFloors = () => {\n    return [...new Set(rooms.map(room => {\n      return room.floor;\n    }))];\n  }\n  return (\n    <>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"building\">Building</InputLabel>\n        <Select label=\"Building\" onChange={(event) => {\n          setBuilding(event.target.value);\n          filter(event.target.value, roomType, floor, assigned);\n        }} value={building}>\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          {getBuildings().map(building => (\n            <MenuItem value={building} key={building}>{building}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"floor\">Floor</InputLabel>\n        <Select label=\"Floor\" onChange={(event) => {\n          setFloor(event.target.value);\n          filter(building, roomType, event.target.value, assigned);\n        }} value={floor}>\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          {getFloors().map(floor => (\n            <MenuItem value={floor} key={floor}>{floor}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"room-type\">Room type</InputLabel>\n        <Select label=\"Room type\" onChange={(event) => {\n          setRoomType(event.target.value);\n          filter(building, event.target.value, floor, assigned);\n        }} value={roomType}>\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          {Object.keys(ROOM_TYPES).map(type => (\n            <MenuItem value={ROOM_TYPES[type]}\n                      key={ROOM_TYPES[type].displayName}>{ROOM_TYPES[type].displayName}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControlLabel control={<Checkbox checked={assigned} onChange={(event, checked) => {\n        setAssigned(checked);\n        filter(building, roomType, floor, checked);\n      }}/>} label=\"Show assigned\"/>\n    </>\n  );\n}\n\nexport default TableFilters;","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport {getRooms, unAssignRooms} from \"../../utils/api\";\nimport {VisibilityOutlined, FilterList, Close} from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport styles from \"./AssignmentsPage.module.scss\"\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {AssignCleanerDialog} from \"./AssignCleanerDialog\";\nimport Link from \"@material-ui/core/Link\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport {getRoomTypeProp, getStatus} from \"../../utils/utils\";\nimport TableFilters from \"./TableFilters\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nfunction EnhancedTableHead(props) {\n  const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{'aria-label': 'select all desserts'}}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left',\n    flexDirection: 'column'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  filters: {\n    minHeight: 96\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, selected, setSelected, setSnackOpen, setSnackText, getData, rooms, setRooms } = props;\n  const [open, setOpen] = React.useState(false);\n  const [filter, showFilters] = React.useState(false);\n  const selectedWithCleaner = selected.filter((room) => {\n    return room['assigned_cleaners'].length > 0;\n  });\n\n  const removeAssignments = async () => {\n    await unAssignRooms(selectedWithCleaner);\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n    setSelected([]);\n    getData(true);\n  }\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n        [classes.filters]: filter && numSelected === 0\n      })}\n    >\n      <div className={styles.row}>\n        {numSelected > 0 ? (\n          <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                      style={{fontWeight: 600}}>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n            Assign rooms to cleaner\n          </Typography>\n        )}\n        {numSelected > 0 ? (\n          <>\n            {selectedWithCleaner.length > 0 &&\n            <Tooltip title=\"Remove room assignments\">\n              <Button variant={'contained'} startIcon={<Close/>} className={styles.critical}\n                      style={{flexBasis: '300px', marginRight: 32}} onClick={removeAssignments}>Remove assignments\n              </Button>\n            </Tooltip>\n            }\n            <Tooltip title=\"Assign to cleaner\">\n              <Button variant={'contained'} color={'secondary'} style={{flexBasis: '180px'}} onClick={() => {\n                setOpen(true);\n              }}>Assign rooms</Button>\n            </Tooltip>\n          </>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\" onClick={() => {\n              showFilters(!filter);\n            }}>\n              <FilterList color={filter ? 'secondary' : 'inherit'}/>\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n      {filter && numSelected === 0 &&\n      <div className={styles.row}>\n        <TableFilters rooms={rooms} setRooms={setRooms}/>\n      </div>\n      }\n      <AssignCleanerDialog open={open} setOpen={setOpen} selected={selected} onClose={() => {\n        setSelected([]);\n        getData(true);\n      }} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function AssignmentsPage() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(25);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n  const [data, getData] = React.useState(true);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    if (data) {\n      getRooms(null, null, true)\n        .then((rooms) => {\n            console.log(rooms);\n            setRooms(rooms);\n            setOrigRooms(rooms);\n            setIsLoaded(true);\n            getData(false);\n          },\n          (error) => {\n            setIsLoaded(true);\n            console.log(error);\n          });\n    }\n  }, [data]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  const getCleaner = (room) => {\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (!cleaner) {\n      return '-';\n    }\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${cleaner['_id']}`,\n                    state: {id: cleaner['_id']}\n                  }}>\n      {cleaner.name}\n    </Link>);\n  }\n\n  return (\n    <PageContainer className={classes.root}>\n      {isLoaded ?\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSnackOpen={setSnackOpen}\n                                setSelected={setSelected} setSnackText={setSnackText} getData={getData} rooms={origRooms} setRooms={setRooms}/>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rooms.length}\n              />\n              <TableBody>\n                {stableSort(rooms, getComparator(order, orderBy))\n                  .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row, selected, setSelected)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{'aria-labelledby': labelId}}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.building}</TableCell>\n                        <TableCell align=\"right\">{row.floor}</TableCell>\n                        <TableCell>{getCleaner(row)}</TableCell>\n                        <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                        <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                        <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                        <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton color={\"secondary\"} size={\"small\"}\n                                      onClick={() => {\n                                        openRoom(row)\n                                      }}>\n                            <VisibilityOutlined/>\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rooms.length}\n            rowsPerPage={roomsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n","import AssignmentsPage from './AssignmentsPage';\nexport default AssignmentsPage;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport {Divider, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\n\nconst RoomDetailsCard = ({room}) => {\n\n  const getVariant = (contamination) => {\n    let variant = 'neutral';\n    if (contamination >= 60) {\n      variant = 'critical';\n    } else if (contamination >= 30) {\n      variant = 'med';\n    } else if (contamination < 30) {\n      variant = 'good';\n    }\n    return variant;\n  }\n  return (\n    <Card className={styles.card}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold}>Room details</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <Typography variant={\"body1\"} className={styles.semiBold}>Building {room.building}</Typography>\n        <Typography variant={\"body2\"} className={styles.medium} color=\"textSecondary\">Floor {room.floor}</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>{getRoomTypeProp(room, 'displayName')}</Typography>\n          <Typography\n            variant={\"body2\"}\n            className={styles.semiBold}>\n            Cleaning time: {getRoomTypeProp(room, 'cleaningTime')} min\n          </Typography>\n        </div>\n        <Typography variant={\"body2\"} className={styles.medium}\n                    color=\"textSecondary\">Cleaning {getRoomTypeProp(room, 'frequency')} times / week\n        </Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>Contamination index</Typography>\n          <Typography variant={\"body1\"}\n                      className={[styles[getVariant(room['contamination_index'])], styles.medium].join(' ')}>{room['contamination_index']}</Typography>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nRoomDetailsCard.propTypes = {\n  room: PropTypes.object.isRequired\n}\n\nexport default RoomDetailsCard;","import React, {useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport StatusDot from \"../../components/StatusDot\";\nimport PropTypes from 'prop-types';\nimport {Button, IconButton, Typography} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\nimport moment from \"moment\";\nimport {ClearOutlined} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {assignRoom, unAssignRoom} from \"../../utils/api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\n\nconst RoomCleanerCard = ({room, cleaner, setCleaner}) => {\n  const [newCleaner, setNewCleaner] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n\n  const hasCleaner = Object.keys(cleaner).length !== 0;\n  const getColor = () => {\n    if (!hasCleaner) return 'neutral';\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    return isBetween ? 'good' : 'critical';\n  }\n\n  const removeCleanerAssignment = async () => {\n    await unAssignRoom(room['_id'], cleaner['_id']);\n    setCleaner({});\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n  }\n\n  const assignNewCleaner = async () => {\n    await assignRoom(room['_id'], newCleaner['_id']);\n    setCleaner(newCleaner);\n    setNewCleaner({});\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <Card className={styles.card} style={{height: 'min-content'}}>\n      <div className={styles.cardContent}>\n        <div className={styles.row}>\n          <StatusDot variant={getColor()} size={'tiny'} tooltip={'Cleaner name'}/>\n          {hasCleaner ? (\n              <>\n                <Link component={RouterLink} style={{marginLeft: 16}} color=\"secondary\"\n                      to={{\n                        pathname: `/cleaners/${cleaner['_id']}`,\n                        state: {id: cleaner['_id']}\n                      }}>\n                  <Typography variant={'h6'} className={styles.semiBold}>{cleaner.name}</Typography>\n                </Link>\n                <Tooltip title=\"Remove assignment\">\n                  <IconButton style={{marginLeft: 'auto'}} size={\"small\"} onClick={removeCleanerAssignment}>\n                    <ClearOutlined/>\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n            :\n            <CleanerSelect onChange={(event, newValue) => setNewCleaner(newValue)} style={{marginLeft: 16}}/>\n          }\n        </div>\n        {newCleaner && Object.keys(newCleaner).length !== 0 && (\n          <>\n            <Divider className={styles.divider}/>\n            <div className={styles.row}>\n              <Button onClick={assignNewCleaner} variant={\"contained\"} color={\"secondary\"}\n                      className={styles.btn}>Assign</Button>\n            </div>\n          </>\n        )}\n      </div>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>{snackText}</Alert>\n      </Snackbar>\n    </Card>\n  )\n}\n\nRoomCleanerCard.propTypes = {\n  room: PropTypes.object.isRequired,\n  cleaner: PropTypes.object\n}\n\nexport default RoomCleanerCard;","import React from 'react';\nimport styles from './RoomDetailsPage.module.scss';\nimport {Divider, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    lineHeight: '200%'\n  },\n});\nconst CommentsList = ({reports}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={styles.comments}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold} style={{marginBottom: 16}}>Cleaner comments:</Typography>\n        {reports.length > 0 ? (\n          reports.reduce((result, report) => {\n            const showReport = report.comments !== '';\n            if (showReport) {\n              const time = moment(report['cleaning_time']);\n              result.push(\n                <div key={report['_id']} className={styles.comment}>\n                  <Divider />\n                  <Typography variant={\"h6\"} className={classes.root}>{time.format('D MMM, YYYY')}</Typography>\n                  <Typography variant={\"h6\"} className={[styles.semiBold, styles.author, classes.root].join(' ')}>{report['cleaner_name']}</Typography>\n                  <Typography variant={\"body1\"} className={classes.root}>{report.comments}</Typography>\n                </div>\n              );\n            }\n            return result;\n          }, [])\n        ) :\n        <Typography variant={\"body1\"} className={styles.semiBold}>No comments</Typography>\n        }\n      </div>\n    </Card>\n  );\n}\n\nexport default CommentsList;","import React from \"react\";\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TableHead, TablePagination,\n  TableRow,\n  TableSortLabel,\n  Typography\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {Check, CloseRounded, VisibilityOutlined} from \"@material-ui/icons\";\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\nimport moment from \"moment\";\nimport styles from './CleaningReportTable.module.scss';\nimport Link from \"@material-ui/core/Link\";\nimport PropTypes from 'prop-types';\nimport {getComparator, stableSort} from \"../../utils/tableUtils\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nfunction ReportsTableHead(props) {\n  const {classes, order, orderBy, onRequestSort, type} = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const headCells = [\n    {id: 'cleaning_time', numeric: true, disablePadding: false, label: 'Cleaning time'},\n    {id: 'cleaning_successful', numeric: false, disablePadding: false, label: 'Cleaning successful'},\n    {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n  ];\n  if (type === 'room') {\n    headCells.unshift({id: 'room', numeric: false, disablePadding: false, label: 'Room'});\n  } else {\n    headCells.unshift({id: 'cleaner', numeric: false, disablePadding: false, label: 'Cleaner'});\n  }\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nReportsTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['room', 'cleaner']).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CleaningReportsTable = ({reports, type}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [page, setPage] = React.useState(0);\n  const [reportsPerPage, setReportsPerPage] = React.useState(10);\n  const viewReport = (report) => {\n    const id = report['_id'];\n    history.push({\n      pathname: `/rooms/reports/${id}`,\n      state: {id}\n    })\n  }\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good}/>) : (<CloseRounded color={\"error\"}/>);\n  }\n\n  const getCleaner = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n      {report['cleaner_name']}\n    </Link>);\n  }\n\n  const getRoom = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/rooms/${report['room_id']}`,\n                    state: {id: report['room_id']}\n                  }}>\n      {report['room_name']}\n    </Link>);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setReportsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <Typography variant={\"h5\"} style={{margin: '16px 0'}} className={styles.semiBold}>Past cleaning\n        reports</Typography>\n      {reports.length > 0 ?\n        <Paper className={classes.paper}>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <ReportsTableHead\n                classes={classes}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                type={type}\n              />\n              <TableBody>\n                {stableSort(reports, getComparator(order, orderBy))\n                  .slice(page * reportsPerPage, page * reportsPerPage + reportsPerPage)\n                  .map((row, index) => {\n                    const labelId = `enhanced-table-checkbox-${index}`;\n                    return (\n                      <TableRow\n                        hover\n                        tabIndex={-1}\n                        key={labelId}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell component=\"th\" id={labelId} scope=\"row\">\n                          {type === 'room' ? getCleaner(row) : getRoom(row)}\n                        </TableCell>\n                        <TableCell align=\"right\">{moment(row['cleaning_time']).format('DD.MM.YYYY HH:mm')}</TableCell>\n                        <TableCell>{getIcon(row['cleaning_succesful'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton color={\"secondary\"} size={\"small\"}\n                                      onClick={() => {\n                                        viewReport(row)\n                                      }}>\n                            <VisibilityOutlined/>\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={reports.length}\n            rowsPerPage={reportsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <Typography variant={\"h6\"}>No cleaning Reports</Typography>\n      }\n    </div>\n  );\n}\nCleaningReportsTable.propTypes = {\n  reports: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['cleaner', 'room']).isRequired\n}\nexport default CleaningReportsTable;","import RoomDetailsPage from './RoomDetailsPage';\nexport default RoomDetailsPage;","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {Button, Typography} from \"@material-ui/core\";\nimport {getAssignedCleaners, getReports, getRoom, getRoomHeatmap} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport RoomDetailsCard from \"./RoomDetailsCard\";\nimport RoomCleanerCard from \"./RoomCleanerCard\";\nimport CommentsList from \"./RoomReportComments\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable/CleaningReportsTable\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport heatmap from \"../../assets/heatmap2.png\";\n\nconst RoomDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [roomLoaded, setRoomLoaded] = useState(false);\n  const [room, setRoom] = useState({});\n  const [reports, setReports] = useState([]);\n  const [cleaner, setCleaner] = useState({});\n  const [showMap, setShowMap] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getRoom(params.id)\n      .then((room) => {\n          setRoom(room);\n          setRoomLoaded(true);\n        },\n        (error) => console.log(error));\n    getAssignedCleaners(params.id)\n      .then((cleaners) => {\n        if (cleaners.length >= 1) {\n          setCleaner(cleaners[0]);\n        }\n      }, (error) => console.log(error));\n    getReports(params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id]);\n\n  useEffect(() => {\n    if (showMap) {\n      getRoomHeatmap(params.id, 'contamination')\n        .then((response) => {\n          const aux = document.getElementById('aux');\n          const canvas = document.getElementById('main');\n          // eslint-disable-next-line no-undef\n          update_img(response, aux, canvas, 20n);\n        })\n        .catch((err) => {\n          console.log(err.message)\n          setErrorMsg(err.message);\n          setError(true);\n        })\n    }\n  }, [params.id, showMap])\n  const navigateToMap = () => {\n    history.push({\n      pathname: `/rooms`,\n      state: {id: params.id, action: 'show'}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(false);\n    setShowMap(false);\n  };\n\n  return (\n    <PageContainer style={{width: '65%'}}>\n      {roomLoaded ? (\n        <>\n          <div className={styles.titleRow}>\n            <Typography variant={\"h4\"}>Room: {room.name}</Typography>\n            <Button variant={\"text\"} onClick={navigateToMap} size={\"small\"}>Show on map</Button>\n          </div>\n          <div className={styles.content}>\n            <div className={styles.detailsRow}>\n              <RoomDetailsCard room={room}/>\n              <RoomCleanerCard room={room} cleaner={cleaner} setCleaner={setCleaner}/>\n            </div>\n            <CommentsList reports={reports}/>\n            <div className={styles.row}>\n              <Typography variant={\"h5\"}>Room map</Typography>\n              <Button variant={\"outlined\"} color={\"primary\"} onClick={() => setShowMap(!showMap)}>\n                {showMap ? 'Hide map' : 'Show Map'}\n              </Button>\n            </div>\n            {showMap && (\n              <>\n                <canvas id=\"aux\" style={{display: 'none'}}/>\n                <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n              </>\n            )}\n            <CleaningReportsTable reports={reports} type={'room'}/>\n          </div>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nexport default RoomDetailsPage;","import CleaningReportsTable from './CleaningReportsTable';\nexport default CleaningReportsTable;","import * as Yup from \"yup\";\nimport {editCleaner} from \"../../utils/api\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport {Field, Form, Formik} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required()\n});\n\nconst EditCleanerDialog = ({cleaner, open, setOpen, onSave}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n  const start = cleaner['shift_start'].split(':');\n  const end = cleaner['shift_end'].split(':');\n\n  const initialValues = {\n    name: cleaner.name,\n    startHour: start.length > 0 ? start[0] : '',\n    endHour: end.length > 0 ? end[0] : '',\n    startMinutes: start.length > 0 ? start[1] : '',\n    endMinutes: end.length > 0 ? end[1] : ''\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const edited = vars;\n    edited['_id'] = cleaner['_id'];\n    edited['shift_start'] = `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`;\n    edited['shift_end'] = `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`;\n    const res = await editCleaner(edited);\n    console.log(res);\n    setSubmitting(false);\n    setOpen(false);\n    onSave();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Edit cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nexport default EditCleanerDialog;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {assignRoomsToCleaner, getRooms, unAssignRooms} from \"../../utils/api\";\nimport styles from \"./RoomSelector.module.scss\";\nimport {\n  Button,\n  Checkbox, Dialog, DialogActions, DialogContent,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer, TableHead,\n  TablePagination,\n  TableRow, TableSortLabel, Toolbar, Tooltip, Typography\n} from \"@material-ui/core\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport {getRoomTypeProp, getStatus} from \"../../utils/utils\";\nimport {FilterList, VisibilityOutlined} from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport moment from \"moment\";\nimport {lighten, makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport TableFilters from \"../../pages/AssignmentsPage/TableFilters\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nfunction EnhancedTableHead(props) {\n  const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{'aria-label': 'select all desserts'}}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left',\n    flexDirection: 'column'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  filters: {\n    minHeight: 96\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, rooms, setRooms} = props;\n  const [filter, showFilters] = React.useState(false);\n\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n        [classes.filters]: filter\n      })}\n    >\n      <div className={styles.row}>\n        {numSelected > 0 ? (\n          <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                      style={{fontWeight: 600}}>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n            Assign rooms to cleaner\n          </Typography>\n        )}\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" onClick={() => {\n            showFilters(!filter);\n          }}>\n            <FilterList color={filter ? 'secondary' : 'inherit'}/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {filter &&\n      <div className={styles.row}>\n        <TableFilters rooms={rooms} setRooms={setRooms}/>\n      </div>\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  setRooms: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst RoomSelector = ({cleaner, onClose, open, setOpen, setSnackOpen, setSnackText}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(10);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    getRooms(null, null, true)\n      .then((rooms) => {\n          console.log(rooms);\n          setRooms(rooms);\n          setOrigRooms(rooms);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const getCleaner = (room) => {\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (!cleaner) {\n      return '-';\n    }\n    return cleaner.name;\n  }\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const assign = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Rooms assigned');\n    setSnackOpen(true);\n    onClose();\n    setOpen(false);\n  }\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}\n              maxWidth={\"lg\"}>\n        <DialogContent>\n          {isLoaded ?\n            <Paper className={classes.paper}>\n              <EnhancedTableToolbar numSelected={selected.length} rooms={origRooms} setRooms={setRooms}/>\n              <TableContainer>\n                <Table\n                  className={classes.table}\n                  aria-labelledby=\"tableTitle\"\n                  aria-label=\"enhanced table\"\n                  size={'small'}\n                >\n                  <EnhancedTableHead\n                    classes={classes}\n                    numSelected={selected.length}\n                    order={order}\n                    orderBy={orderBy}\n                    onSelectAllClick={handleSelectAllClick}\n                    onRequestSort={handleRequestSort}\n                    rowCount={rooms.length}\n                  />\n                  <TableBody>\n                    {stableSort(rooms, getComparator(order, orderBy))\n                      .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                      .map((row, index) => {\n                        const isItemSelected = isSelected(row);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                        return (\n                          <TableRow\n                            hover\n                            onClick={(event) => handleClick(event, row, selected, setSelected)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.name}\n                            selected={isItemSelected}\n                            style={{height: '33px'}}\n                          >\n                            <TableCell padding=\"checkbox\">\n                              <Checkbox\n                                checked={isItemSelected}\n                                inputProps={{'aria-labelledby': labelId}}\n                              />\n                            </TableCell>\n                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                              {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.building}</TableCell>\n                            <TableCell align=\"right\">{row.floor}</TableCell>\n                            <TableCell>{getCleaner(row)}</TableCell>\n                            <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                            <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                            <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                            <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                            <TableCell align=\"right\">\n                              <IconButton color={\"secondary\"} size={\"small\"}\n                                          onClick={() => {\n                                            openRoom(row)\n                                          }}>\n                                <VisibilityOutlined/>\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 50]}\n                component=\"div\"\n                count={rooms.length}\n                rowsPerPage={roomsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </Paper>\n            : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={assign} disabled={selected.length === 0} variant={\"contained\"}>\n            Assign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nRoomSelector.propTypes = {\n  cleaner: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired,\n  setSnackText: PropTypes.func.isRequired\n}\n\nexport default RoomSelector;","import RoomSelector from './RoomSelector';\nexport default RoomSelector;","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport {getAssignedRooms, getCleaner, getReports, unAssignRoom, deleteCleaner as removeCleaner} from \"../../utils/api\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AccountCircleRounded, AddCircleOutline, Clear, DeleteForever, Edit} from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {getRoomTypeProp, getStatus} from \"../../utils/utils\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable\";\nimport styles from './CleanerDetailsPage.module.scss';\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport EditCleanerDialog from \"./EditCleanerDialog\";\nimport RoomSelector from \"../../components/RoomSelector\";\n\nconst CleanerDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [cleanerLoaded, setCleanerLoaded] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [cleaner, setCleaner] = useState({});\n  const [reports, setReports] = useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [data, getData] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('Cleaned deleted');\n  const [showRoomSelector, setShowRoomSelector] = useState(false);\n\n  const handleConfirmClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const deleteCleaner = async () => {\n    await removeCleaner(cleaner['_id']);\n    setSnackText('Cleaner Deleted');\n    setSnackOpen(true);\n    history.goBack();\n  }\n\n  const saved = () => {\n    setSnackText('Saved');\n    setSnackOpen(true);\n    getData(true);\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  useEffect(() => {\n    getCleaner(params.id)\n      .then((room) => {\n          console.log(room);\n          setCleaner(room);\n          setCleanerLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        });\n    getReports(null, params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id, data]);\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.row} style={{justifyContent: 'space-between'}}>\n        <Typography variant={\"h5\"} className={styles.semiBold}>Cleaner details</Typography>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant={\"outlined\"}\n                color={\"primary\"}>\n          Actions\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => {\n            handleClose();\n            setEditing(true);\n          }}>\n            <ListItemIcon>\n              <Edit fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Edit cleaner\"/>\n          </MenuItem>\n          <MenuItem onClick={() => {\n            setOpen(true);\n            handleClose()\n          }}>\n            <ListItemIcon>\n              <DeleteForever color={\"error\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Delete cleaner\"/>\n          </MenuItem>\n        </Menu>\n      </div>\n      {cleanerLoaded ? (\n        <>\n          <div className={[styles.row, styles.content].join(' ')}>\n            <AccountCircleRounded className={styles.avatar}/>\n            <div>\n              <Typography variant={\"h6\"} className={styles.semiBold}>Cleaner name: {cleaner.name}</Typography>\n              <Typography variant={\"body1\"} color={\"textSecondary\"}>\n                Shift: {cleaner['shift_start']} - {cleaner['shift_end']}\n              </Typography>\n            </div>\n          </div>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"} className={styles.semiBold}>Assigned Rooms</Typography>\n            <Tooltip title={\"Add assignments\"}>\n              <IconButton onClick={() => {\n                setShowRoomSelector(true);\n              }}>\n                <AddCircleOutline/>\n              </IconButton>\n            </Tooltip>\n          </div>\n          <AssignmentsTable cleaner={cleaner} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n          <CleaningReportsTable reports={reports} type={\"cleaner\"}/>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete cleaner\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the cleaner?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n            handleConfirmClose();\n            deleteCleaner();\n          }} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {cleanerLoaded &&\n      <EditCleanerDialog cleaner={cleaner} open={editing} setOpen={setEditing} onSave={saved}/>}\n      <RoomSelector setSnackText={setSnackText} open={showRoomSelector} setSnackOpen={setSnackOpen}\n                    setOpen={setShowRoomSelector} onClose={() => {\n        getData(true);\n      }} cleaner={cleaner}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nconst AssignmentsTable = ({cleaner, setSnackOpen, setSnackText}) => {\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getAssignedRooms(cleaner['_id'])\n      .then((assignments) => {\n        console.log(assignments);\n        setAssignments(assignments);\n        setLoading(false);\n      }, (error) => {\n        console.log(error);\n      })\n  }, [cleaner]);\n\n  const removeAssignment = async (room) => {\n    const response = await unAssignRoom(room['_id'], cleaner['_id']);\n    console.log(response);\n    const newAssignments = [...assignments];\n    newAssignments.splice(assignments.indexOf(room), 1);\n    setAssignments(newAssignments);\n    setSnackText('Assignment removed');\n    setSnackOpen(true);\n  }\n\n  return (\n    <div style={{margin: '16px 0'}}>\n      {loading ? <CircularProgress color=\"secondary\"/> :\n        (\n          assignments.length > 0 ?\n            <TableContainer component={Paper}>\n              <Table size={\"small\"}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Room</TableCell>\n                    <TableCell align=\"right\">Status</TableCell>\n                    <TableCell align=\"right\">Contamination Index</TableCell>\n                    <TableCell align=\"right\">Room type</TableCell>\n                    <TableCell align=\"right\">Cleaning Status</TableCell>\n                    <TableCell>Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {assignments.map((row) => (\n                    <TableRow key={row['_id']}>\n                      <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                      <TableCell align=\"right\">{getStatus(row['contamination_index'])}</TableCell>\n                      <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                      <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n                      <TableCell\n                        align=\"right\">{row['is_cleaning'] ? 'Cleaning in progress' : 'Needs cleaning'}</TableCell>\n                      <TableCell>\n                        <Tooltip title={\"Remove assignment\"}>\n                          <IconButton size={\"small\"} onClick={() => {\n                            removeAssignment(row);\n                          }}>\n                            <Clear color={\"error\"}/>\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer> : <Typography variant={\"h6\"}>No assigned rooms</Typography>\n        )}\n    </div>\n  );\n}\n\nexport default CleanerDetailsPage;","import CleanerDetailsPage from './CleanerDetailsPage';\nexport default CleanerDetailsPage;","import ReportPage from './ReportPage';\nexport default ReportPage;\n","import React, {useEffect, useState} from 'react';\nimport {useLocation} from \"react-router-dom\";\nimport {getHeatmap, getReport} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Typography, Select, Grid} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport styles from './ReportPage.module.scss';\nimport {Check, CloseRounded} from \"@material-ui/icons\";\nimport {update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\n\nconst ReportPage = () => {\n  const location = useLocation();\n  const {id} = location.state;\n  const [report, setReport] = useState({});\n  const [type, setType] = useState('');\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getReport(id)\n      .then((report) => {\n        setReport(report);\n      })\n  }, [id]);\n\n  const mapSelected = async (event) => {\n    setType(event.target.value);\n    await getHeatmap(id, event.target.value)\n      .then((res) => {\n        const aux = document.getElementById('aux');\n        const canvas = document.getElementById('main');\n        console.log(res)\n        update_img(res, aux, canvas, 1n);\n      }).catch((err) => {\n        console.error(err)\n        setErrorMsg('Could not load map');\n        setError(true);\n      });\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(false);\n  };\n\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good} fontSize={\"large\"}/>) : (\n      <CloseRounded color={\"error\"} fontSize={\"large\"}/>);\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h4\"} className={styles.semiBold}>Cleaning report details</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"}>Room map</Typography>\n            <FormControl variant={'outlined'} style={{minWidth: '320px', marginBottom: 8}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Contamination map type</InputLabel>\n              <Select label=\"Contamination map type\" onChange={mapSelected} value={type}>\n                <MenuItem value=\"clean\">After cleaning</MenuItem>\n                <MenuItem value=\"contamination\">Before cleaning</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            <canvas id=\"aux\" style={{display: 'none'}}/>\n            <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n          </div>\n          <Typography variant={\"h5\"}>Cleaner comments:</Typography>\n          <div className={styles.comments}>\n            <Typography variant={\"body1\"} className={styles.comment}>{report.comments}</Typography>\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaner:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['cleaner_name']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Room:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['room_name']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning time:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{moment(report['cleaning_time']).format('YYYY-MM-DD HH:mm:ss')}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning successful:</Typography>\n            <div style={{marginLeft: 4, height: 35}}>{getIcon(report['cleaning_succesful'])}</div>\n          </div>\n        </Grid>\n      </Grid>\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nexport default ReportPage;","import AdminPage from './AdminPage';\nexport default AdminPage;\n","import React, {useEffect, useState} from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Button, Typography} from \"@material-ui/core\";\nimport styles from \"./AdminPage.module.scss\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst AdminPage = () => {\n  const [simSpeed, setSimSpeed] = useState(10);\n\n  useEffect(() => {\n    //TODO: get simulation speed\n  }, [])\n  const valuetext = (value) => {\n    return `${value}x`;\n  }\n\n  const generateMarks = () => {\n    const mark = [];\n    for (let i = 5; i <= 100; i += 5) {\n      mark.push({\n        value: i,\n        label: i\n      });\n    }\n    mark.unshift({\n      value: 1,\n      label: '1'\n    });\n    return mark;\n  }\n\n  const updateSimSpeed = async () => {\n    //await setSimulation(simSpeed);\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h5\"}>Simulator</Typography>\n      <div className={styles.slider}>\n        <div className={styles.row}>\n          <Typography id=\"discrete-slider\" gutterBottom>\n            Simulation speed\n          </Typography>\n          <Button variant={\"text\"} color={\"primary\"} onClick={updateSimSpeed}>\n            Set\n          </Button>\n        </div>\n        <Slider\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider\"\n          valueLabelDisplay=\"auto\"\n          step={null}\n          min={1}\n          marks={generateMarks()}\n          value={simSpeed}\n        />\n      </div>\n    </PageContainer>\n  )\n}\n\nexport default AdminPage;","import React from 'react';\nimport './App.scss';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport {authenticated as auth, getUser} from '../utils/api';\nimport DashboardPage from \"../pages/DashboardPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport CleanersPage from \"../pages/CleanersPage\";\nimport Toolbar from \"../components/Toolbar\";\nimport {useLocation} from 'react-router-dom';\nimport AnalysisPage from \"../pages/AnalysisPage\";\nimport RoomsPage from \"../pages/RoomsPage\";\nimport AssignmentsPage from \"../pages/AssignmentsPage\";\nimport RoomDetailsPage from \"../pages/RoomDetailsPage\";\nimport CleanerDetailsPage from \"../pages/CleanerDetailsPage\";\nimport ReportPage from \"../pages/ReportPage\";\nimport AdminPage from \"../pages/AdminPage\";\n\nfunction App() {\n  const location = useLocation();\n  const user = getUser();\n  const login = () => (auth() ? <Redirect to=\"/dashboard\"/> : <LoginPage/>);\n  const dash = () => (!auth() ? <Redirect to=\"/\"/> : <DashboardPage/>);\n  const cleaner = () => (!auth() ? <Redirect to=\"/\"/> : <CleanerDetailsPage/>);\n  const cleaners = () => (!auth() ? <Redirect to=\"/\"/> : <CleanersPage/>);\n  const assignments = () => (!auth() ? <Redirect to=\"/\"/> : <AssignmentsPage/>);\n  const rooms = () => (!auth() ? <Redirect to=\"/\"/> : <RoomsPage/>);\n  const room = () => (!auth() ? <Redirect to=\"/\"/> : <RoomDetailsPage/>);\n  const analysis = () => (!auth() ? <Redirect to=\"/\"/> : <AnalysisPage/>);\n  const report = () => (!auth() ? <Redirect to=\"/\"/> : <ReportPage/>);\n  const admin = () => (!auth() || !user.superAdmin ? <Redirect to=\"/\"/> : <AdminPage/>);\n\n  return (\n    <div className=\"App\">\n      {location.pathname !== '/' && <Toolbar/>}\n      <Switch location={location}>\n        <Route path={\"/dashboard\"} render={dash}/>\n        <Route path={\"/cleaners/:id\"} render={cleaner}/>\n        <Route path={\"/cleaners\"} render={cleaners}/>\n        <Route path={\"/assignments\"} render={assignments}/>\n        <Route path={\"/rooms/reports/:id\"} render={report}/>\n        <Route path={\"/rooms/:id\"} render={room}/>\n        <Route path={\"/rooms\"} render={rooms}/>\n        <Route path={\"/analysis\"} render={analysis}/>\n        <Route path={\"/simulator\"} render={admin}/>\n        <Route path={\"/\"} render={login}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {unstable_createMuiStrictModeTheme as createMuiTheme, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport {blueGrey, lightBlue} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[900],\n    },\n    secondary: lightBlue\n  },\n  typography: {\n    fontFamily: ['Raleway', 'sans-serif']\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={'/spotless'}>\n      <ThemeProvider theme={theme}>\n        <StylesProvider injectFirst>\n          <App/>\n        </StylesProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"CleanerDetailsPage_content__3PEfI\",\"avatar\":\"CleanerDetailsPage_avatar__3KDG8\",\"row\":\"CleanerDetailsPage_row__G0VOc\",\"menu\":\"CleanerDetailsPage_menu__2gyF8\",\"column\":\"CleanerDetailsPage_column__3374X\",\"semiBold\":\"CleanerDetailsPage_semiBold__1F3iu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semiBold\":\"DashboardPage_semiBold__1wP56\",\"stat\":\"DashboardPage_stat__1HNGL\",\"keyStat\":\"DashboardPage_keyStat__3TqkO\",\"subtitle\":\"DashboardPage_subtitle__SKIyw\",\"grid\":\"DashboardPage_grid__3i4Zn\"};"],"sourceRoot":""}