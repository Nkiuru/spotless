{"version":3,"sources":["components/StatusDot/StatusDot.module.scss","pages/RoomDetailsPage/RoomDetailsPage.module.scss","components/ShiftPicker/ShiftPicker.module.scss","pages/AssignmentsPage/AssignmentsPage.module.scss","containers/PageContainer/PageContainer.module.scss","pages/LoginPage/LoginPage.module.scss","components/CleaningReportsTable/CleaningReportTable.module.scss","components/CleanerSelect/CleanerSelect.module.scss","utils/constants.js","utils/api.js","containers/PageContainer/index.js","containers/PageContainer/PageContainer.js","pages/DashboardPage/KeyStat.js","pages/DashboardPage/index.js","pages/DashboardPage/DashboardPage.js","pages/LoginPage/LoginPage.js","pages/LoginPage/index.js","components/ShiftPicker/ShiftPicker.js","pages/CleanersPage/CleanersPage.js","pages/CleanersPage/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","pages/AnalysisPage/index.js","pages/AnalysisPage/AnalysisPage.js","components/StatusDot/index.js","components/StatusDot/StatusDot.js","utils/utils.js","pages/RoomsPage/RoomsPage.js","pages/RoomsPage/index.js","utils/tableUtils.js","components/CleanerSelect/index.js","components/CleanerSelect/CleanerSelect.js","pages/AssignmentsPage/AssignCleanerDialog.js","pages/AssignmentsPage/AssignmentsPage.js","pages/AssignmentsPage/index.js","pages/RoomDetailsPage/RoomDetailsCard.js","pages/RoomDetailsPage/RoomCleanerCard.js","pages/RoomDetailsPage/RoomReportComments.js","components/CleaningReportsTable/CleaningReportsTable.js","pages/RoomDetailsPage/index.js","pages/RoomDetailsPage/RoomDetailsPage.js","components/CleaningReportsTable/index.js","pages/CleanerDetailsPage/EditCleanerDialog.js","pages/CleanerDetailsPage/CleanerDetailsPage.js","pages/CleanerDetailsPage/index.js","pages/ReportPage/index.js","pages/ReportPage/ReportPage.js","app/App.js","serviceWorker.js","index.js","pages/ReportPage/ReportPage.module.scss","components/Toolbar/Toolbar.module.scss","pages/CleanerDetailsPage/CleanerDetailsPage.module.scss","pages/DashboardPage/DashboardPage.module.scss","pages/CleanersPage/CleanersPage.module.scss"],"names":["module","exports","API_KEY","BASE_URL","ROOM_TYPES","Object","freeze","OFFICE","frequency","cleaningTime","displayName","TOILET","WARD_ROOM","EXAMINATION_ROOM","CORRIDOR","WAITING_ROOM","authenticated","localStorage","getItem","getRooms","hospital","floor","showAssigned","a","params","doGetRequest","getHospitals","getAssignedRooms","cleanerId","getAssignedCleaners","roomId","assignRoomsToCleaner","rooms","cleaner","Promise","all","map","room","assignRoom","unAssignRooms","unAssignRoom","doPostRequest","JSON","stringify","doDeleteRequest","getRoom","getCleaners","getCleaner","createCleaner","name","shiftStart","shiftEnd","getReports","deleteCleaner","getReport","reportId","getHeatmap","type","requestURL","fetch","method","headers","response","ok","arrayBuffer","json","console","log","Error","error","getRoomHeatmap","editCleaner","doPutRequest","url","message","body","PageContainer","children","style","top","noToolbar","className","styles","pageContainer","pageContent","KeyStat","value","subtitle","color","stat","keyStat","Typography","variant","DashboardPage","useState","user","setUser","useEffect","u","parse","textAlign","marginBottom","username","Grid","container","spacing","item","xs","semiBold","marginTop","validationSchema","Yup","required","password","LoginPage","history","useHistory","Paper","form","initialValues","onSubmit","vars","setSubmitting","isSuperAdmin","setItem","superAdmin","authenticate","push","isSubmitting","resetForm","values","component","TextField","autoFocus","margin","id","label","fullWidth","Button","btn","ShiftPicker","row","Select","Array","keys","number","num","toString","padStart","MenuItem","key","firstName","lastName","AddCleanerDialog","open","setOpen","setIsLoaded","setSnackOpen","handleClose","handleSubmit","startHour","startMinutes","endHour","endMinutes","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","onClick","CleanersTable","cleaners","TableContainer","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","IconButton","pathname","state","viewCleaner","VisibilityOutlined","CleanersPage","setCleaners","isLoaded","React","snackOpen","then","err","handleSnackClose","event","reason","headerRow","bold","Tooltip","title","AddCircleOutline","CircularProgress","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","NavTabs","withStyles","root","width","flexGrow","indicator","display","justifyContent","backgroundColor","borderTopLeftRadius","borderTopRightRadius","props","Tabs","TabIndicatorProps","Toolbar","location","useLocation","getTabValue","tabId","route","matchPath","path","exact","strict","mountTabValueFactory","AppBar","position","toolbar","split","length","goBack","ArrowBackRounded","svg","Tab","tab","DashboardRounded","fontSize","Link","to","disableRipple","FormatListBulletedRounded","PeopleRounded","BusinessRounded","AssessmentRounded","removeItem","ExitToApp","AnalysisPage","StatusDot","tooltip","classes","dot","neutral","small","join","getRoomTypeProp","propName","getStatus","contamination","update_img","auxCanvas","canvas","arr","BigUint64Array","bytearray","array","min","max","pix","pix1","minRaw","BigInt","Number","MAX_SAFE_INTEGER","maxRaw","j","im_p","i","Uint8Array","convert64to8","red","green","blue","b","tableRed","tableGreen","tableBlue","Math","cos","round","pow","sin","atan","Uint8ClampedArray","initColorMaps","redMap","greenMap","blueMap","img","imgArr","h","ImageData","data","byteIdx","imgIdx","grayValue","ctx","getContext","putImageData","drawImage","RoomTable","building","patient","date","moment","format","openRoom","RoomsPage","setError","setRooms","hospitals","setHospitals","setHospital","result","FormControl","minWidth","InputLabel","onChange","target","hosp","descendingComparator","orderBy","undefined","CleanerSelect","options","setOptions","openSelect","setOpenSelect","setCleaner","loading","active","clnrs","Autocomplete","onOpen","autocomplete","getOptionLabel","option","newValue","renderInput","InputProps","endAdornment","AssignCleanerDialog","selected","setSnackText","selectedWithCleaner","filter","disableBackdropClick","disabled","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","direction","property","visuallyHidden","useToolbarStyles","makeStyles","theme","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","primary","dark","EnhancedTableToolbar","setSelected","getData","removeAssignments","clsx","fontWeight","startIcon","Close","critical","flexBasis","marginRight","aria-label","FilterList","useStyles","paper","table","border","clip","height","overflow","AssignmentsPage","setOrder","setOrderBy","page","setPage","roomsPerPage","setRoomsPerPage","snackText","newSelecteds","n","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","RouterLink","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","RoomDetailsCard","Card","card","cardContent","Divider","divider","medium","getVariant","RoomCleanerCard","newCleaner","setNewCleaner","hasCleaner","removeCleanerAssignment","assignNewCleaner","isBetween","getColor","marginLeft","ClearOutlined","lineHeight","CommentsList","reports","comments","reduce","report","time","comment","author","CleaningReportsTable","Check","good","CloseRounded","viewReport","RoomDetailsPage","roomLoaded","setRoomLoaded","setRoom","setReports","showMap","setShowMap","errorMsg","setErrorMsg","Date","aux","document","getElementById","catch","titleRow","action","content","detailsRow","EditCleanerDialog","onSave","start","end","edited","res","AssignmentsTable","assignments","setAssignments","setLoading","removeAssignment","newAssignments","splice","Clear","CleanerDetailsPage","cleanerLoaded","setCleanerLoaded","editing","setEditing","anchorEl","setAnchorEl","handleConfirmClose","removeCleaner","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","ListItemIcon","Edit","ListItemText","DeleteForever","AccountCircleRounded","avatar","aria-describedby","DialogContentText","ReportPage","setReport","setType","mapSelected","flexDirection","reportInfo","App","render","auth","window","hostname","match","createMuiTheme","blueGrey","lightBlue","typography","fontFamily","ReactDOM","StrictMode","basename","ThemeProvider","StylesProvider","injectFirst","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e88b116.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot\":\"StatusDot_dot__1rSYH\",\"good\":\"StatusDot_good__1GIEp\",\"medium\":\"StatusDot_medium__3zBB3\",\"critical\":\"StatusDot_critical__23vOC\",\"neutral\":\"StatusDot_neutral__1H6OR\",\"tiny\":\"StatusDot_tiny__33nQ5\",\"small\":\"StatusDot_small__1yc1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleRow\":\"RoomDetailsPage_titleRow__JoTlm\",\"content\":\"RoomDetailsPage_content__2CxAu\",\"card\":\"RoomDetailsPage_card__2J4HU\",\"cardContent\":\"RoomDetailsPage_cardContent__1soEX\",\"detailsRow\":\"RoomDetailsPage_detailsRow__3fj0E\",\"row\":\"RoomDetailsPage_row__PCQ4C\",\"divider\":\"RoomDetailsPage_divider__hWVez\",\"semiBold\":\"RoomDetailsPage_semiBold__24ERR\",\"medium\":\"RoomDetailsPage_medium__3Rnxk\",\"good\":\"RoomDetailsPage_good__2jSxq\",\"med\":\"RoomDetailsPage_med__T6SFg\",\"critical\":\"RoomDetailsPage_critical__2gPiW\",\"neutral\":\"RoomDetailsPage_neutral__2SrpQ\",\"btn\":\"RoomDetailsPage_btn__3tYWx\",\"map\":\"RoomDetailsPage_map__2yhwI\",\"comments\":\"RoomDetailsPage_comments__1nTSD\",\"comment\":\"RoomDetailsPage_comment__1rwNF\",\"author\":\"RoomDetailsPage_author__tbk-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ShiftPicker_menu__1os-v\",\"row\":\"ShiftPicker_row__rUGBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AssignmentsPage_title__3UMlB\",\"critical\":\"AssignmentsPage_critical__3ZemZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"PageContainer_pageContainer__iX86t\",\"pageContent\":\"PageContainer_pageContent__1wPf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginPage_form__38hI6\",\"btn\":\"LoginPage_btn__Q93UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"CleaningReportTable_good__2fi-5\",\"semiBold\":\"CleaningReportTable_semiBold__3M_nh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autocomplete\":\"CleanerSelect_autocomplete__2dss4\"};","export const API_KEY = 'zL43mXgXk5xa7YFRBVZscbLnGFaqVh24q5G6fhGjmAv532FAVBRtnuCJpwXWXnhw';\nexport const BASE_URL = 'https://cleaner-app-api.azurewebsites.net/api/';\n\nexport const ROOM_TYPES = Object.freeze({\n  OFFICE: {\n    frequency: 1,\n    cleaningTime: 5,\n    displayName: 'Office'\n  },\n  TOILET: {\n    frequency: 5,\n    cleaningTime: 5,\n    displayName: 'Toilet'\n  },\n  WARD_ROOM: {\n    frequency: 5,\n    cleaningTime: 8,\n    displayName: 'Ward room'\n  },\n  EXAMINATION_ROOM: {\n    frequency: 5,\n    cleaningTime: 6,\n    displayName: 'Examination room'\n  },\n  CORRIDOR: {\n    frequency: 3,\n    cleaningTime: 9,\n    displayName: 'Corridor'\n  },\n  WAITING_ROOM: {\n    frequency: 5,\n    cleaningTime: 10,\n    displayName: 'Waiting room'\n  },\n});","import {API_KEY, BASE_URL} from \"./constants\";\n\nexport const authenticated = () => {\n  return localStorage.getItem('user') !== null;\n};\n\nexport const getUser = () => {\n  if (authenticated()) {\n    return JSON.parse(localStorage.getItem('user'));\n  } else {\n    return false;\n  }\n}\n\nexport const authenticate = (username, password) => {\n  let isSuperAdmin = false;\n  if (username === 'superadmin' && password === 'admin') {\n    isSuperAdmin = true;\n  }\n  localStorage.setItem('user', JSON.stringify({\n    username,\n    superAdmin: isSuperAdmin\n  }));\n  return true;\n}\n\nexport const logout = () => {\n  localStorage.removeItem('user');\n}\n\n\nexport const getRooms = async (hospital, floor, showAssigned) => {\n  const url = 'rooms';\n  let params = hospital ? `?hospital_id=${hospital}` : '';\n  params += floor ? `?floor_id=${floor}` : '';\n  params += showAssigned ? `?assigned_cleaners=1` : '';\n  return doGetRequest(url, params);\n}\n\nexport const getHospitals = async () => {\n  return doGetRequest('hospitals');\n}\n\nexport const startCleaning = async (roomId) => {\n  return doGetRequest(`room/startcleaning?id=${roomId}`);\n}\n\nexport const stopCleaning = async (roomId) => {\n  return doGetRequest(`room/stopcleaning?id=${roomId}`);\n}\n\nexport const getAssignedRooms = async (cleanerId) => {\n  return doGetRequest(`cleaners/rooms?cleaner_id=${cleanerId}`);\n}\n\nexport const getAssignedCleaners = async (roomId) => {\n  return doGetRequest(`cleaners/rooms?room_id=${roomId}`);\n}\n\nexport const assignRoomsToCleaner = async (rooms, cleaner) => {\n  return Promise.all(rooms.map((room) => {\n    return assignRoom(room['_id'], cleaner);\n  }));\n}\n\nexport const unAssignRooms = async (rooms) => {\n  return Promise.all(rooms.map((room) => {\n    return unAssignRoom(room['_id'], room['assigned_cleaners'][0]['_id']);\n  }));\n}\n\nexport const assignRoom = async (room, cleaner) => {\n  return doPostRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const unAssignRoom = async (room, cleaner) => {\n  return doDeleteRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const getRoom = async (roomId) => {\n  return doGetRequest(`room?_id=${roomId}`);\n}\n\nexport const getCleaners = async () => {\n  return doGetRequest('cleaners/');\n}\n\nexport const getCleaner = async (cleanerId) => {\n  return doGetRequest(`cleaner?_id=${cleanerId}`);\n}\n\nexport const createCleaner = async (name, shiftStart, shiftEnd) => {\n  return doPostRequest('cleaner/', JSON.stringify({\n    name,\n    'shift_start': shiftStart,\n    'shift_end': shiftEnd\n  }));\n}\n\nexport const getReports = async (roomId, cleanerId) => {\n  let params = roomId ? `?room_id=${roomId}` : '';\n  params += cleanerId ? `?cleaner_id=${cleanerId}` : '';\n  return doGetRequest('reports', params)\n}\n\nexport const deleteCleaner = async (cleanerId) => {\n  return doDeleteRequest('cleaner', JSON.stringify({\n    '_id': cleanerId\n  }));\n}\n\nexport const getReport = async (reportId) => {\n  return doGetRequest(`report?_id=${reportId}`);\n}\n\nexport const getHeatmap = async (reportId, type) => {\n  const requestURL = BASE_URL + `report/heatmap?_id=${reportId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    console.log(json)\n    throw new Error(json.error);\n  }\n}\n\nexport const getRoomHeatmap = async (roomId, type) => {\n  const requestURL = BASE_URL + `room/heatmap?_id=${roomId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    throw new Error(json.error);\n  }\n}\n\nexport const editCleaner = async (cleaner) => {\n  return doPutRequest('cleaner/', JSON.stringify({\n    '_id': cleaner['_id'],\n    'name': cleaner.name,\n    'shift_start': cleaner['shift_start'],\n    'shift_end': cleaner['shift_end']\n  }));\n}\n\nconst doGetRequest = async (url, params) => {\n  const requestURL = BASE_URL + url + (params || '');\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPostRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doDeleteRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPutRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}","import PageContainer from './PageContainer';\nexport default PageContainer;\n","import React from 'react';\nimport styles from './PageContainer.module.scss';\nimport PropTypes from 'prop-types';\n\nconst PageContainer = ({ children, style, noToolbar }) => {\n  const top = noToolbar ? 0 : '48px';\n  return (\n    <div className={styles.pageContainer} style={{top}}>\n      <div className={styles.pageContent} style={style}>{children}</div>\n    </div>\n  );\n};\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n  noToolbar: PropTypes.bool\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport styles from \"./DashboardPage.module.scss\";\nimport {Typography} from \"@material-ui/core\";\n\nconst KeyStat = ({value, subtitle, color}) => {\n  return (\n    <div className={styles.stat}>\n      <div className={styles.keyStat}>\n        <Typography variant={\"h3\"} style={{color}}>{value}</Typography>\n      </div>\n      <Typography variant={\"body2\"} className={styles.subtitle}>{subtitle}</Typography>\n    </div>\n  );\n}\n\nexport default KeyStat;","import DashboardPage from './DashboardPage';\nexport default DashboardPage;\n","import React, {useEffect, useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from './DashboardPage.module.scss';\nimport Grid from \"@material-ui/core/Grid\";\nimport KeyStat from \"./KeyStat\";\nimport {getUser} from \"../../utils/api\";\n\nconst DashboardPage = () => {\n  const[ user, setUser] = useState('');\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n  },[]);\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h4\"} style={{marginBottom: 16}}>Hello {user && user.username}!</Typography>\n      <Grid container spacing={6}>\n        <Grid item xs={5}>\n          <Typography variant={\"h5\"} className={styles.semiBold}>Alerts</Typography>\n          <Typography variant={\"h6\"} style={{marginTop: 16}} className={styles.semiBold}>No active alerts</Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Grid container spacing={4}>\n            <Grid item xs>\n              <KeyStat subtitle={\"Rooms cleaned today\"} value={1} color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Average contamination index\"} value={50} color={\"#F2C94C\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Green rooms\"} value={0} color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item xs>\n              <KeyStat subtitle={\"Red rooms\"} value={4} color={\"#EB5757\"}/>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={4}></Grid>\n      </Grid>\n    </PageContainer>\n  )\n}\n\nexport default DashboardPage;","import React from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {TextField} from \"formik-material-ui\";\nimport {Formik, Form, Field} from \"formik\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport {authenticate} from \"../../utils/api\";\nimport {useHistory} from 'react-router-dom';\nimport Paper from \"@material-ui/core/Paper\";\nimport styles from './LoginPage.module.scss';\n\n\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n});\n\nconst LoginPage = () => {\n  const history = useHistory();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const handleSubmit = (vars, {setSubmitting}) => {\n    console.log(vars)\n    authenticate(vars.username, vars.password);\n    history.push('/dashboard');\n  }\n\n  return (\n    <PageContainer noToolbar>\n      <Paper variant={\"elevation\"} className={styles.form}>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n          {({isSubmitting, resetForm, values}) => (\n            <Form>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant={\"h4\"}>Login to spotless</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    variant={\"outlined\"}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    variant={\"outlined\"}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button type=\"submit\" color=\"primary\" variant={\"contained\"} className={styles.btn}>Sign in</Button>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    </PageContainer>\n  )\n}\n\nexport default LoginPage;","import LoginPage from './LoginPage';\nexport default LoginPage;\n","import {Grid, MenuItem, Typography} from \"@material-ui/core\";\nimport styles from \"./ShiftPicker.module.scss\";\nimport {Field} from \"formik\";\nimport {Select} from \"formik-material-ui\";\nimport React from \"react\";\n\n\nconst ShiftPicker = () => {\n  return (\n    <Grid item xs className={styles.row}>\n      <div>\n        <Typography variant={\"body1\"}>Shift start</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"startHour\">\n            {[...Array(24).keys()].map((number) => {\n              const num = number.toString().padStart(2, '0')\n              return <MenuItem key={number} value={num}>{num}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"h6\"}>:</Typography>\n          <Field component={Select} name=\"startMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n      <Typography variant={\"h4\"} style={{margin: '0 16px'}}>-</Typography>\n      <div>\n        <Typography variant={\"body1\"}>Shift end</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"endHour\">\n            {[...Array(23).keys()].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"body1\"}>:</Typography>\n          <Field component={Select} name=\"endMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n    </Grid>\n  )\n}\n\nexport default ShiftPicker;","import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions,\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AddCircleOutline, VisibilityOutlined} from \"@material-ui/icons\";\nimport {createCleaner, getCleaners} from \"../../utils/api\";\nimport styles from './CleanersPage.module.scss';\nimport * as Yup from \"yup\";\nimport {Formik, Form, Field} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\n\nconst CleanersPage = () => {\n  const [cleaners, setCleaners] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n\n  useEffect(() => {\n    getCleaners()\n      .then((cleaners) => {\n        console.log(cleaners)\n        setCleaners(cleaners);\n        setIsLoaded(true);\n      }, (err) => {\n        console.log(err);\n      })\n  }, [setOpen, isLoaded])\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Cleaners</Typography>\n        <Tooltip title=\"Add cleaner\">\n          <IconButton onClick={() => setOpen(true)}>\n            <AddCircleOutline/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {isLoaded ? <CleanersTable cleaners={cleaners}/> :\n        <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Typography variant={\"h5\"} className={styles.bold} style={{marginTop: 24}}>Unassigned rooms</Typography>\n      <AddCleanerDialog open={open} setOpen={setOpen} setIsLoaded={setIsLoaded} setSnackOpen={setSnackOpen}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          Cleaner created\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required')\n});\n\nconst AddCleanerDialog = ({open, setOpen, setIsLoaded, setSnackOpen}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    startHour: '08',\n    endHour: '16',\n    startMinutes: '00',\n    endMinutes: '00'\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const cleaner = await createCleaner(`${vars.firstName} ${vars.lastName}`,\n      `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`,\n      `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`);\n    console.log(cleaner);\n    setIsLoaded(false);\n    setSubmitting(false);\n    setSnackOpen(true);\n    setOpen(false);\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create a new cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"First name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Last name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Create cleaner\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nconst CleanersTable = ({cleaners}) => {\n  const history = useHistory();\n\n  const viewCleaner = (cleaner) => {\n    const id = cleaner['_id'];\n    history.push({\n      pathname: `/cleaners/${id}`,\n      state: {id}\n    })\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={'small'}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Shift start</TableCell>\n            <TableCell align=\"right\">Shift end</TableCell>\n            <TableCell align=\"right\">Cleaning percent</TableCell>\n            <TableCell align=\"right\">Current location</TableCell>\n            <TableCell align=\"right\">Status</TableCell>\n            <TableCell>Action</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {cleaners.map((row) => (\n            <TableRow key={row['_id']}>\n              <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row['shift_start']}</TableCell>\n              <TableCell align=\"right\">{row['shift_end']}</TableCell>\n              <TableCell align=\"right\">{}</TableCell>\n              <TableCell align=\"right\">{}</TableCell>\n              <TableCell align=\"right\">{}</TableCell>\n              <TableCell>\n                <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                  viewCleaner(row)\n                }}><VisibilityOutlined/></IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nexport default CleanersPage;","import CleanersPage from './CleanersPage';\nexport default CleanersPage;\n","import React from 'react';\nimport {AppBar, Typography, Tabs, Toolbar as MaterialToolbar, Tab, IconButton} from \"@material-ui/core\";\nimport {Link, useLocation, matchPath, useHistory} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport styles from './Toolbar.module.scss';\nimport {\n  ArrowBackRounded, AssessmentRounded,\n  BusinessRounded,\n  DashboardRounded, ExitToApp,\n  FormatListBulletedRounded,\n  PeopleRounded\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {logout} from \"../../utils/api\";\n\nconst NavTabs = withStyles({\n  root: {\n    width: '100%',\n    flexGrow: 1\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    marginBottom: '4px',\n    '& > span': {\n      width: '40%',\n      backgroundColor: '#00b0ff',\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n  }\n})((props) => <Tabs {...props} TabIndicatorProps={{children: <span/>}}/>);\n\nconst mountTabValueFactory = (location, tabId) => (route) => !!matchPath(location.pathname, {\n  path: route,\n  exact: false,\n  strict: false,\n}) ? tabId : -1;\n\nconst Toolbar = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const tabId = 'myTabId';\n  const getTabValue = mountTabValueFactory(location, tabId);\n\n  return (\n    <AppBar position={\"static\"}>\n      <MaterialToolbar variant={\"dense\"}>\n        <div className={styles.toolbar}>\n          {location.pathname.split('/').length > 2 ? (\n            <Tooltip title={'Go Back'}>\n              <IconButton onClick={() => {\n                history.goBack()\n              }}>\n                <ArrowBackRounded className={styles.svg}/>\n              </IconButton>\n            </Tooltip>\n          ) : <div style={{width: 40}}/>}\n          <Typography variant={\"h6\"} className={styles.name}>Spotless</Typography>\n        </div>\n        <NavTabs variant={\"fullWidth\"} value={tabId}>\n          <Tab label={<div className={styles.tab}><DashboardRounded fontSize={\"small\"}/> Dashboard</div>}\n               value={getTabValue(\"/dashboard\")} component={Link} to={\"/dashboard\"}\n               disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><FormatListBulletedRounded fontSize={\"small\"}/> Assignments</div>}\n               value={getTabValue(\"/assignments\")} component={Link} to={\"/assignments\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><PeopleRounded fontSize={\"small\"}/> Cleaners</div>}\n               value={getTabValue(\"/cleaners\")} component={Link} to={\"/cleaners\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><BusinessRounded fontSize={\"small\"}/> Rooms</div>}\n               value={getTabValue(\"/rooms\")} component={Link} to={\"/rooms\"} disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><AssessmentRounded fontSize={\"small\"}/> Analysis</div>}\n               value={getTabValue(\"/analysis\")} component={Link} to={\"/analysis\"}\n               disableRipple={true} className={styles.tab}/>\n        </NavTabs>\n        <Tooltip title={'Sign out'} color={\"secondary\"}>\n          <IconButton onClick={() => {\n            logout();\n            history.push('/');\n          }}>\n            <ExitToApp/>\n          </IconButton>\n        </Tooltip>\n      </MaterialToolbar>\n    </AppBar>\n  );\n}\n\nexport default Toolbar;","import Toolbar from './Toolbar';\nexport default Toolbar;","import AnalysisPage from './AnalysisPage';\nexport default AnalysisPage;\n","import React from 'react';\n\nconst AnalysisPage = () => {\n  return (\n    <div>\n      Analysis\n    </div>\n  )\n}\n\nexport default AnalysisPage;","import StatusDot from './StatusDot';\nexport default StatusDot;","import React from 'react';\nimport styles from './StatusDot.module.scss';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PropTypes from \"prop-types\";\n\n\nconst StatusDot = ({variant, size, tooltip}) => {\n  const classes = [styles.dot];\n  classes.push(variant ? styles[variant] : styles.neutral);\n  classes.push(size ? styles[size] : styles.small);\n  return (\n    <Tooltip title={tooltip}>\n      <div className={classes.join(' ')}/>\n    </Tooltip>\n  );\n}\n\nStatusDot.propTypes = {\n  variant: PropTypes.oneOf(['good', 'critical', 'medium', 'neutral']).isRequired,\n  size: PropTypes.oneOf(['tiny', 'small', 'medium']).isRequired,\n  tooltip: PropTypes.any\n}\n\nexport default StatusDot;","import {ROOM_TYPES} from \"./constants\";\nimport StatusDot from \"../components/StatusDot\";\nimport React from \"react\";\n\nexport const getRoomTypeProp = (room, propName) => {\n  return room['room_type'] !== '<empty>' ? ROOM_TYPES[room['room_type']][propName] : '';\n}\n\nexport const getStatus = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return <StatusDot variant={variant} size={\"tiny\"} tooltip={contamination}/>\n}\n\nfunction convert64to8(array) {\n  let min, max, pix;\n  // eslint-disable-next-line no-undef\n  let minRaw = BigInt(Number.MAX_SAFE_INTEGER);\n  // eslint-disable-next-line no-undef\n  let maxRaw = BigInt(0);\n  for (let j = 0; j < array.length; j++) {\n    pix = array[j]\n    if (pix < minRaw) {\n      minRaw = pix\n    }\n    if (pix > maxRaw) {\n      maxRaw = pix\n    }\n  }\n  // eslint-disable-next-line no-undef\n  max = BigInt(maxRaw)\n  // eslint-disable-next-line no-undef\n  min = BigInt(minRaw)\n  let pix1;\n  let im_p = [];\n  if (max <= min) {\n    max = min + 1n\n  }\n  for (let i = 0; i < array.length; i++) {\n    // eslint-disable-next-line no-undef\n    pix1 = (array[i] - min) * 255n / (max - min);\n    if (pix1 > 255n) {\n      pix1 = 255\n    }\n    if (pix1 < 0n) {\n      pix1 = 0n\n    }\n    im_p.push(Number(pix1));\n  }\n  return new Uint8Array(im_p);\n}\n\n// lookup color table to apply to grayscale image\nfunction initColorMaps() {\n  let tableRed = []\n  let tableGreen = []\n  let tableBlue = []\n  let red, green, blue;\n  let a, b;\n  for (let i = 0; i <= 255; i++) {\n    a = i * 0.01236846501;\n    b = Math.cos(a - 1.0)\n    red = Math.round(Math.pow(2.0, Math.sin(a - 1.6)) * 200)\n    green = Math.round(Math.atan(a) * b * 155 + 100.0)\n    blue = Math.round(b * 255)\n    red = Math.min(255, red);\n    green = Math.min(255, green);\n    blue = Math.min(255, blue);\n    red = Math.max(0, red);\n    green = Math.max(0, green);\n    blue = Math.max(0, blue);\n    tableRed.push(red)\n    tableGreen.push(green)\n    tableBlue.push(blue)\n  }\n  return [new Uint8ClampedArray(tableRed), new Uint8ClampedArray(tableGreen), new Uint8ClampedArray(tableBlue)];\n}\n\nexport function update_img(arrayBuffer, auxCanvas, canvas) {\n  let arr = null;\n  try {\n    // eslint-disable-next-line no-undef\n    arr = new BigUint64Array(arrayBuffer);\n  } catch (error) {\n    throw error;\n  }\n  let bytearray = convert64to8(arr);\n  let [redMap, greenMap, blueMap] = initColorMaps();\n  let img = null; //ImageData\n  let imgArr = null; //Uint8ClampedArray\n  const h = bytearray.length / 72;\n  if (bytearray) {\n    img = new ImageData(72, h); // Note: the actual array is 4 times bigger because has (RGBA) pixels\n    imgArr = img.data;\n    let byteIdx = 0;\n\n    if (true) { // color mapped image\n      for (let imgIdx = 0; imgIdx < imgArr.length; imgIdx += 4) {\n        let grayValue = bytearray[byteIdx];\n        imgArr[imgIdx] = redMap[grayValue]; // R value\n        imgArr[imgIdx + 1] = greenMap[grayValue]; // G value\n        imgArr[imgIdx + 2] = blueMap[grayValue]; // B value\n        imgArr[imgIdx + 3] = 255; // Alpha value\n        byteIdx++;\n      }\n    } else { // Normal grayscale image\n      for (let imgIdx = 0; imgIdx < imgArr.length; imgIdx += 4) {\n        let grayValue = bytearray[byteIdx];\n        imgArr[imgIdx] = grayValue; // R value\n        imgArr[imgIdx + 1] = grayValue; // G value\n        imgArr[imgIdx + 2] = grayValue; // B value\n        imgArr[imgIdx + 3] = 255; // Alpha value\n        byteIdx++;\n      }\n    }\n  }\n  console.log(img)\n  // Scaling. It seems that with putImageData we cannot scale the canvas directly\n  // auxCanvas has the image and\n  let ctx = canvas.getContext('2d');\n  auxCanvas.getContext(\"2d\").putImageData(img, 0, 0);\n  ctx.drawImage(auxCanvas, 0, 0)\n  // flip Y AND X axis\n  canvas.style = \"transform: scale(1, 1); flex: 0\";\n}\n\n/*function update_scale(){\n  // clear\n  auxCanvas.getContext(\"2d\").clearRect(0,0,auxCanvas.width,auxCanvas.height);\n  ctx.clearRect(0,0,canvas.width,canvas.height);\n  //scale = Number($(\"scale\").value);\n\n  ctx.scale(scale, scale);\n  //console.log(\"new scale: %f\", scale);\n}*/","import React, {useEffect, useState} from 'react';\nimport {getHospitals, getRooms} from \"../../utils/api\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport moment from \"moment\";\nimport {VisibilityOutlined} from \"@material-ui/icons\";\nimport {useHistory} from 'react-router-dom';\nimport styles from \"../CleanersPage/CleanersPage.module.scss\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\nconst RoomsPage = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [hospitals, setHospitals] = useState([]);\n  const [hospital, setHospital] = useState('');\n\n  useEffect(() => {\n    getHospitals('hospital0')\n      .then((result) => {\n          console.log(result);\n          setIsLoaded(true);\n          setHospitals(result);\n        },\n        (err) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(err);\n        })\n  }, []);\n\n  const hospitalSelected = (event) => {\n    setHospital(event.target.value);\n    getRooms(event.target.value['_id'])\n      .then((rooms) => {\n          console.log(rooms);\n          setRooms(rooms);\n        },\n        (error) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }\n\n  return (\n    <PageContainer>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Rooms</Typography>\n        {!isLoaded ? <CircularProgress color=\"secondary\"/> :\n          (\n            <FormControl variant={'outlined'} style={{minWidth: '320px', margin: '8px'}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Select hospital</InputLabel>\n              <Select label=\"Select Hospital\" onChange={hospitalSelected} value={hospital}>\n                <MenuItem value={{}}>\n                  <em>None</em>\n                </MenuItem>\n                {\n                  hospitals.map(hosp => (\n                    <MenuItem value={hosp} key={hosp['_id']}>{hosp.name}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          )\n        }\n      </div>\n      {rooms.length > 0 && (\n        <RoomTable rooms={rooms}/>\n      )}\n      {error && <p>ERROR</p>}\n    </PageContainer>\n  )\n}\n\nconst RoomTable = ({rooms}) => {\n  const history = useHistory();\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const getPatient = (patient) => {\n    return patient === \"<empty>\" ? 'No' : 'Yes';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Building</TableCell>\n            <TableCell align=\"right\">Floor</TableCell>\n            <TableCell align=\"right\">Contamination index</TableCell>\n            <TableCell align=\"right\">Has Patient</TableCell>\n            <TableCell align=\"right\">Room type</TableCell>\n            <TableCell align=\"right\">Last cleaned</TableCell>\n            <TableCell>Action</TableCell>\n          </TableRow>\n         </TableHead>\n        <TableBody>\n          {rooms.map((row) => (\n            <TableRow key={row['_id']}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.building}</TableCell>\n              <TableCell align=\"right\">{row.floor}</TableCell>\n              <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n              <TableCell align=\"right\">{getPatient(row.patient)}</TableCell>\n              <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n              <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n              <TableCell>\n                <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                  openRoom(row)\n                }}><VisibilityOutlined/></IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default RoomsPage;","import RoomsPage from './RoomsPage';\nexport default RoomsPage;\n","export function descendingComparator(a, b, orderBy) {\n  if (a[orderBy] === undefined) return 1;\n\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport function handleClick(event, item, selected, setSelected) {\n  const selectedIndex = selected.indexOf(item);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selected, item);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selected.slice(1));\n  } else if (selectedIndex === selected.length - 1) {\n    newSelected = newSelected.concat(selected.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selected.slice(0, selectedIndex),\n      selected.slice(selectedIndex + 1),\n    );\n  }\n\n  setSelected(newSelected);\n}","import CleanerSelect from './CleanerSelect';\nexport default CleanerSelect;","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {getCleaners} from \"../../utils/api\";\nimport styles from \"./CleanerSelect.module.scss\";\n\nconst CleanerSelect = ({onChange, style}) => {\n  const [options, setOptions] = useState([]);\n  const [openSelect, setOpenSelect] = useState(false);\n  const [cleaner, setCleaner] = useState(null);\n  const loading = openSelect && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const clnrs = await getCleaners();\n\n      if (active) {\n        setOptions(clnrs);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  const onSelectChange = (event, newValue) => {\n    setCleaner(newValue);\n    onChange(event, newValue);\n  }\n\n  return (\n    <Autocomplete\n      open={openSelect}\n      onOpen={() => {\n        setOpenSelect(true);\n      }}\n      onClose={() => {\n        setOpenSelect(false);\n      }}\n      className={styles.autocomplete}\n      style={style}\n      getOptionLabel={(option) => option.name || ''}\n      options={options}\n      loading={loading}\n      value={cleaner}\n      onChange={onSelectChange}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Cleaner\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nCleanerSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  style: PropTypes.object\n}\n\nexport default CleanerSelect;","import React, {useState} from \"react\";\nimport {assignRoomsToCleaner, unAssignRooms} from \"../../utils/api\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\n\nexport const AssignCleanerDialog = ({open, setOpen, selected, setSnackOpen, onClose, setSnackText}) => {\n  const [cleaner, setCleaner] = useState(null);\n\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const handleSubmit = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n    handleClose();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}>\n      <DialogTitle id=\"form-dialog-title\">Select a cleaner</DialogTitle>\n      <DialogContent>\n        <CleanerSelect onChange={(event, newValue) => {\n          setCleaner(newValue)\n        }}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleSubmit} disabled={cleaner === ''}>\n          Assign\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport {getRooms, unAssignRooms} from \"../../utils/api\";\nimport {VisibilityOutlined, FilterList, Close} from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport styles from \"./AssignmentsPage.module.scss\"\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {AssignCleanerDialog} from \"./AssignCleanerDialog\";\nimport Link from \"@material-ui/core/Link\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport {getRoomTypeProp, getStatus} from \"../../utils/utils\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nfunction EnhancedTableHead(props) {\n  const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{'aria-label': 'select all desserts'}}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, selected, setSelected, setSnackOpen, setSnackText, getData} = props;\n  const [open, setOpen] = React.useState(false);\n  const selectedWithCleaner = selected.filter((room) => {\n    return room['assigned_cleaners'].length > 0;\n  });\n\n  const removeAssignments = async () => {\n    await unAssignRooms(selectedWithCleaner);\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n    setSelected([]);\n    getData(true);\n  }\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                    style={{fontWeight: 600}}>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n          Assign rooms to cleaner\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <>\n          {selectedWithCleaner.length > 0 &&\n          <Tooltip title=\"Remove room assignments\">\n            <Button variant={'contained'} startIcon={<Close/>} className={styles.critical}\n                    style={{flexBasis: '300px', marginRight: 32}} onClick={removeAssignments}>Remove assignments\n            </Button>\n          </Tooltip>\n          }\n          <Tooltip title=\"Assign to cleaner\">\n            <Button variant={'contained'} color={'secondary'} style={{flexBasis: '180px'}} onClick={() => {\n              setOpen(true);\n            }}>Assign rooms</Button>\n          </Tooltip>\n        </>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" onClick={() => {\n            // TODO implement filters\n          }}>\n            <FilterList/>\n          </IconButton>\n        </Tooltip>\n      )}\n      <AssignCleanerDialog open={open} setOpen={setOpen} selected={selected} onClose={() => {\n        setSelected([]);\n        getData(true);\n      }} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function AssignmentsPage() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(25);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n  const [data, getData] = React.useState(true);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    if (data) {\n      getRooms(null, null, true)\n        .then((rooms) => {\n            console.log(rooms);\n            setRooms(rooms);\n            setIsLoaded(true);\n            getData(false);\n          },\n          (error) => {\n            setIsLoaded(true);\n            console.log(error);\n          });\n    }\n  }, [data]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  const getCleaner = (room) => {\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (!cleaner) {\n      return '-';\n    }\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${cleaner['_id']}`,\n                    state: {id: cleaner['_id']}\n                  }}>\n      {cleaner.name}\n    </Link>);\n  }\n\n  return (\n    <PageContainer className={classes.root}>\n      {isLoaded ?\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSnackOpen={setSnackOpen}\n                                setSelected={setSelected} setSnackText={setSnackText} getData={getData}/>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rooms.length}\n              />\n              <TableBody>\n                {stableSort(rooms, getComparator(order, orderBy))\n                  .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row, selected, setSelected)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{'aria-labelledby': labelId}}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.building}</TableCell>\n                        <TableCell align=\"right\">{row.floor}</TableCell>\n                        <TableCell>{getCleaner(row)}</TableCell>\n                        <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                        <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                        <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                        <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton color={\"secondary\"} size={\"small\"}\n                                      onClick={() => {\n                                        openRoom(row)\n                                      }}>\n                            <VisibilityOutlined/>\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rooms.length}\n            rowsPerPage={roomsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n","import AssignmentsPage from './AssignmentsPage';\nexport default AssignmentsPage;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport {Divider, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\n\nconst RoomDetailsCard = ({room}) => {\n\n  const getVariant = (contamination) => {\n    let variant = 'neutral';\n    if (contamination >= 60) {\n      variant = 'critical';\n    } else if (contamination >= 30) {\n      variant = 'med';\n    } else if (contamination < 30) {\n      variant = 'good';\n    }\n    return variant;\n  }\n  return (\n    <Card className={styles.card}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold}>Room details</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <Typography variant={\"body1\"} className={styles.semiBold}>Building {room.building}</Typography>\n        <Typography variant={\"body2\"} className={styles.medium} color=\"textSecondary\">Floor {room.floor}</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>{getRoomTypeProp(room, 'displayName')}</Typography>\n          <Typography\n            variant={\"body2\"}\n            className={styles.semiBold}>\n            Cleaning time: {getRoomTypeProp(room, 'cleaningTime')} min\n          </Typography>\n        </div>\n        <Typography variant={\"body2\"} className={styles.medium}\n                    color=\"textSecondary\">Cleaning {getRoomTypeProp(room, 'frequency')} times / week\n        </Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>Contamination index</Typography>\n          <Typography variant={\"body1\"}\n                      className={[styles[getVariant(room['contamination_index'])], styles.medium].join(' ')}>{room['contamination_index']}</Typography>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nRoomDetailsCard.propTypes = {\n  room: PropTypes.object.isRequired\n}\n\nexport default RoomDetailsCard;","import React, {useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport StatusDot from \"../../components/StatusDot\";\nimport PropTypes from 'prop-types';\nimport {Button, IconButton, Typography} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\nimport moment from \"moment\";\nimport {ClearOutlined} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {assignRoom, unAssignRoom} from \"../../utils/api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\n\nconst RoomCleanerCard = ({room, cleaner, setCleaner}) => {\n  const [newCleaner, setNewCleaner] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n\n  const hasCleaner = Object.keys(cleaner).length !== 0;\n  const getColor = () => {\n    if (!hasCleaner) return 'neutral';\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    return isBetween ? 'good' : 'critical';\n  }\n\n  const removeCleanerAssignment = async () => {\n    await unAssignRoom(room['_id'], cleaner['_id']);\n    setCleaner({});\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n  }\n\n  const assignNewCleaner = async () => {\n    await assignRoom(room['_id'], newCleaner['_id']);\n    setCleaner(newCleaner);\n    setNewCleaner({});\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <Card className={styles.card} style={{height: 'min-content'}}>\n      <div className={styles.cardContent}>\n        <div className={styles.row}>\n          <StatusDot variant={getColor()} size={'tiny'} tooltip={'Cleaner name'}/>\n          {hasCleaner ? (\n              <>\n                <Link component={RouterLink} style={{marginLeft: 16}} color=\"secondary\"\n                      to={{\n                        pathname: `/cleaners/${cleaner['_id']}`,\n                        state: {id: cleaner['_id']}\n                      }}>\n                  <Typography variant={'h6'} className={styles.semiBold}>{cleaner.name}</Typography>\n                </Link>\n                <Tooltip title=\"Remove assignment\">\n                  <IconButton style={{marginLeft: 'auto'}} size={\"small\"} onClick={removeCleanerAssignment}>\n                    <ClearOutlined/>\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n            :\n            <CleanerSelect onChange={(event, newValue) => setNewCleaner(newValue)} style={{marginLeft: 16}}/>\n          }\n        </div>\n        {newCleaner && Object.keys(newCleaner).length !== 0 && (\n          <>\n            <Divider className={styles.divider}/>\n            <div className={styles.row}>\n              <Button onClick={assignNewCleaner} variant={\"contained\"} color={\"secondary\"}\n                      className={styles.btn}>Assign</Button>\n            </div>\n          </>\n        )}\n      </div>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>{snackText}</Alert>\n      </Snackbar>\n    </Card>\n  )\n}\n\nRoomCleanerCard.propTypes = {\n  room: PropTypes.object.isRequired,\n  cleaner: PropTypes.object\n}\n\nexport default RoomCleanerCard;","import React from 'react';\nimport styles from './RoomDetailsPage.module.scss';\nimport {Divider, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    lineHeight: '200%'\n  },\n});\nconst CommentsList = ({reports}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={styles.comments}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold} style={{marginBottom: 16}}>Cleaner comments:</Typography>\n        {reports.length > 0 ? (\n          reports.reduce((result, report) => {\n            const showReport = report.comments !== '';\n            if (showReport) {\n              const time = moment(report['cleaning_time']);\n              result.push(\n                <div key={report['_id']} className={styles.comment}>\n                  <Divider />\n                  <Typography variant={\"h6\"} className={classes.root}>{time.format('D MMM, YYYY')}</Typography>\n                  <Typography variant={\"h6\"} className={[styles.semiBold, styles.author, classes.root].join(' ')}>{report['cleaner_name']}</Typography>\n                  <Typography variant={\"body1\"} className={classes.root}>{report.comments}</Typography>\n                </div>\n              );\n            }\n            return result;\n          }, [])\n        ) :\n        <Typography variant={\"body1\"} className={styles.semiBold}>No comments</Typography>\n        }\n      </div>\n    </Card>\n  );\n}\n\nexport default CommentsList;","import React from \"react\";\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {Check, CloseRounded, VisibilityOutlined} from \"@material-ui/icons\";\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\nimport moment from \"moment\";\nimport styles from './CleaningReportTable.module.scss';\nimport Link from \"@material-ui/core/Link\";\nimport PropTypes from 'prop-types';\n\nconst CleaningReportsTable = ({reports, type}) => {\n  const history = useHistory();\n  const viewReport = (report) => {\n    const id = report['_id'];\n    history.push({\n      pathname: `/rooms/reports/${id}`,\n      state: {id}\n    })\n  }\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good}/>) : (<CloseRounded color={\"error\"}/>);\n  }\n\n  const getCleaner = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n      {report['cleaner_name']}\n    </Link>);\n  }\n\n  const getRoom = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/rooms/${report['room_id']}`,\n                    state: {id: report['room_id']}\n                  }}>\n      {report['room_name']}\n    </Link>);\n  }\n  return (\n    <div>\n      <Typography variant={\"h5\"} style={{margin: '16px 0'}} className={styles.semiBold}>Past cleaning reports</Typography>\n      {reports.length > 0 ?\n        <TableContainer component={Paper}>\n          <Table size={'small'}>\n            <TableHead>\n              <TableRow>\n                <TableCell>{type === 'room' ? 'Cleaner' : 'Room'}</TableCell>\n                <TableCell align=\"right\">Cleaning time</TableCell>\n                <TableCell>Cleaning successful</TableCell>\n                <TableCell>Action</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {reports.map((row) => (\n                <TableRow key={row['_id']}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {type === 'room' ? getCleaner(row) : getRoom(row)}\n                  </TableCell>\n                  <TableCell align=\"right\">{moment(row['cleaning_time']).format('DD.MM.YYYY HH:mm')}</TableCell>\n                  <TableCell>{getIcon(row['cleaning_succesful'])}</TableCell>\n                  <TableCell>\n                    <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                      viewReport(row)\n                    }}><VisibilityOutlined/>\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        : <Typography variant={\"h6\"}>No cleaning Reports</Typography>\n      }\n    </div>\n  );\n}\nCleaningReportsTable.propTypes = {\n  reports: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['cleaner', 'room']).isRequired\n\n}\nexport default CleaningReportsTable;","import RoomDetailsPage from './RoomDetailsPage';\nexport default RoomDetailsPage;","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {Button, Typography} from \"@material-ui/core\";\nimport {getAssignedCleaners, getReports, getRoom, getRoomHeatmap} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport RoomDetailsCard from \"./RoomDetailsCard\";\nimport RoomCleanerCard from \"./RoomCleanerCard\";\nimport CommentsList from \"./RoomReportComments\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable/CleaningReportsTable\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst RoomDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [roomLoaded, setRoomLoaded] = useState(false);\n  const [room, setRoom] = useState({});\n  const [reports, setReports] = useState([]);\n  const [cleaner, setCleaner] = useState({});\n  const [showMap, setShowMap] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getRoom(params.id)\n      .then((room) => {\n          setRoom(room);\n          setRoomLoaded(true);\n        },\n        (error) => console.log(error));\n    getAssignedCleaners(params.id)\n      .then((cleaners) => {\n        if (cleaners.length >= 1) {\n          setCleaner(cleaners[0]);\n        }\n      }, (error) => console.log(error));\n    getReports(params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id]);\n\n  useEffect(() => {\n    if (showMap) {\n      getRoomHeatmap(params.id, 'contamination')\n        .then((response) => {\n          const aux = document.getElementById('aux');\n          const canvas = document.getElementById('main');\n          // eslint-disable-next-line no-undef\n          const arr = new BigUint64Array(response);\n          update_img(arr, aux, canvas);\n        })\n        .catch((err) => {\n          console.log(err.message)\n          setErrorMsg(err.message);\n          setError(true);\n        })\n    }\n  }, [params.id, showMap])\n  const navigateToMap = () => {\n    history.push({\n      pathname: `/rooms`,\n      state: {id: params.id, action: 'show'}\n    })\n  }\n\n  return (\n    <PageContainer style={{width: '65%'}}>\n      {roomLoaded ? (\n        <>\n          <div className={styles.titleRow}>\n            <Typography variant={\"h4\"}>Room: {room.name}</Typography>\n            <Button variant={\"text\"} onClick={navigateToMap} size={\"small\"}>Show on map</Button>\n          </div>\n          <div className={styles.content}>\n            <div className={styles.detailsRow}>\n              <RoomDetailsCard room={room}/>\n              <RoomCleanerCard room={room} cleaner={cleaner} setCleaner={setCleaner}/>\n            </div>\n            <CommentsList reports={reports}/>\n            <div className={styles.row}>\n              <Typography variant={\"h5\"}>Room map</Typography>\n              <Button variant={\"outlined\"} color={\"primary\"} onClick={() => setShowMap(!showMap)}>\n                {showMap ? 'Hide map' : 'Show Map'}\n              </Button>\n            </div>\n            {showMap && (\n              <>\n                <canvas id=\"aux\" style={{display: 'none'}}/>\n                <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n              </>\n            )}\n            <CleaningReportsTable reports={reports} type={'room'}/>\n          </div>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Snackbar open={error} autoHideDuration={6000} onClose={() => setError(false)}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nexport default RoomDetailsPage;","import CleaningReportsTable from './CleaningReportsTable';\nexport default CleaningReportsTable;","import * as Yup from \"yup\";\nimport {editCleaner} from \"../../utils/api\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport {Field, Form, Formik} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required()\n});\n\nconst EditCleanerDialog = ({cleaner, open, setOpen, onSave}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n  const start = cleaner['shift_start'].split(':');\n  const end = cleaner['shift_end'].split(':');\n\n  const initialValues = {\n    name: cleaner.name,\n    startHour: start.length > 0 ? start[0] : '',\n    endHour: end.length > 0 ? end[0] : '',\n    startMinutes: start.length > 0 ? start[1] : '',\n    endMinutes: end.length > 0 ? end[1] : ''\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const edited = vars;\n    edited['_id'] = cleaner['_id'];\n    edited['shift_start'] = `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`;\n    edited['shift_end'] = `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`;\n    const res = await editCleaner(edited);\n    console.log(res);\n    setSubmitting(false);\n    setOpen(false);\n    onSave();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Edit cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nexport default EditCleanerDialog;\n","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport {getAssignedRooms, getCleaner, getReports, unAssignRoom, deleteCleaner as removeCleaner} from \"../../utils/api\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AccountCircleRounded, Clear, DeleteForever, Edit} from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {getRoomTypeProp, getStatus} from \"../../utils/utils\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable\";\nimport styles from './CleanerDetailsPage.module.scss';\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport EditCleanerDialog from \"./EditCleanerDialog\";\n\nconst CleanerDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [cleanerLoaded, setCleanerLoaded] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [cleaner, setCleaner] = useState({});\n  const [reports, setReports] = useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [data, getData] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('Cleaned deleted');\n\n  const handleConfirmClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const deleteCleaner = async () => {\n    await removeCleaner(cleaner['_id']);\n    setSnackText('Cleaner Deleted');\n    setSnackOpen(true);\n    history.goBack();\n  }\n\n  const saved = () => {\n    setSnackText('Saved');\n    setSnackOpen(true);\n    getData(true);\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  useEffect(() => {\n    getCleaner(params.id)\n      .then((room) => {\n          console.log(room);\n          setCleaner(room);\n          setCleanerLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        });\n    getReports(null, params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id, data]);\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.row} style={{justifyContent: 'space-between'}}>\n        <Typography variant={\"h5\"} className={styles.semiBold}>Cleaner details</Typography>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant={\"outlined\"}\n                color={\"primary\"}>\n          Actions\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => {\n            handleClose();\n            setEditing(true);\n          }}>\n            <ListItemIcon>\n              <Edit fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Edit cleaner\"/>\n          </MenuItem>\n          <MenuItem onClick={() => {\n            setOpen(true);\n            handleClose()\n          }}>\n            <ListItemIcon>\n              <DeleteForever color={\"error\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Delete cleaner\"/>\n          </MenuItem>\n        </Menu>\n      </div>\n      {cleanerLoaded ? (\n        <>\n          <div className={[styles.row, styles.content].join(' ')}>\n            <AccountCircleRounded className={styles.avatar}/>\n            <div>\n              <Typography variant={\"h6\"} className={styles.semiBold}>Cleaner name: {cleaner.name}</Typography>\n              <Typography variant={\"body1\"} color={\"textSecondary\"}>\n                Shift: {cleaner['shift_start']} - {cleaner['shift_end']}\n              </Typography>\n            </div>\n          </div>\n          <Typography variant={\"h5\"} className={styles.semiBold}>Assigned Rooms</Typography>\n          <AssignmentsTable cleaner={cleaner} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n          <CleaningReportsTable reports={reports} type={\"cleaner\"}/>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete cleaner\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the cleaner?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n            handleConfirmClose();\n            deleteCleaner();\n          }} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {cleanerLoaded &&\n      <EditCleanerDialog cleaner={cleaner} open={editing} setOpen={setEditing} onSave={saved}/>}\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nconst AssignmentsTable = ({cleaner, setSnackOpen, setSnackText}) => {\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getAssignedRooms(cleaner['_id'])\n      .then((assignments) => {\n        console.log(assignments);\n        setAssignments(assignments);\n        setLoading(false);\n      }, (error) => {\n        console.log(error);\n      })\n  }, [cleaner]);\n\n  const removeAssignment = async (room) => {\n    const response = await unAssignRoom(room['_id'], cleaner['_id']);\n    console.log(response);\n    const newAssignments = [...assignments];\n    newAssignments.splice(assignments.indexOf(room), 1);\n    setAssignments(newAssignments);\n    setSnackText('Assignment removed');\n    setSnackOpen(true);\n  }\n\n  return (\n    <div style={{margin: '16px 0'}}>\n      {loading ? <CircularProgress color=\"secondary\"/> :\n        (\n          assignments.length > 0 ?\n            <TableContainer component={Paper}>\n              <Table size={\"small\"}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Room</TableCell>\n                    <TableCell align=\"right\">Status</TableCell>\n                    <TableCell align=\"right\">Contamination Index</TableCell>\n                    <TableCell align=\"right\">Room type</TableCell>\n                    <TableCell align=\"right\">Cleaning Status</TableCell>\n                    <TableCell>Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {assignments.map((row) => (\n                    <TableRow key={row['_id']}>\n                      <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                      <TableCell align=\"right\">{getStatus(row['contamination_index'])}</TableCell>\n                      <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                      <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n                      <TableCell\n                        align=\"right\">{row['is_cleaning'] ? 'Cleaning in progress' : 'Needs cleaning'}</TableCell>\n                      <TableCell>\n                        <Tooltip title={\"Remove assignment\"}>\n                          <IconButton size={\"small\"} onClick={() => {\n                            removeAssignment(row);\n                          }}>\n                            <Clear color={\"error\"}/>\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer> : <Typography variant={\"h6\"}>No assigned rooms</Typography>\n        )}\n    </div>\n  );\n}\n\nexport default CleanerDetailsPage;","import CleanerDetailsPage from './CleanerDetailsPage';\nexport default CleanerDetailsPage;","import ReportPage from './ReportPage';\nexport default ReportPage;\n","import React, {useEffect, useState} from 'react';\nimport {useLocation} from \"react-router-dom\";\nimport {getHeatmap, getReport} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Typography, Select, Grid} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport styles from './ReportPage.module.scss';\nimport {Check, CloseRounded} from \"@material-ui/icons\";\nimport {update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst ReportPage = () => {\n  const location = useLocation();\n  const {id} = location.state;\n  const [report, setReport] = useState({});\n  const [type, setType] = useState('');\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getReport(id)\n      .then((report) => {\n        setReport(report);\n      })\n  }, [id]);\n\n  const mapSelected = async (event) => {\n    setType(event.target.value);\n    await getHeatmap(id, event.target.value)\n      .then((res) => {\n        const aux = document.getElementById('aux');\n        const canvas = document.getElementById('main');\n        update_img(res, aux, canvas);\n      }).catch((err) => {\n        console.error(err)\n        setErrorMsg('Could not load map');\n        setError(true);\n      });\n  }\n\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good} fontSize={\"large\"}/>) : (\n      <CloseRounded color={\"error\"} fontSize={\"large\"}/>);\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h4\"} className={styles.semiBold}>Cleaning report details</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"}>Room map</Typography>\n            <FormControl variant={'outlined'} style={{minWidth: '320px', marginBottom: 8}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Contamination map type</InputLabel>\n              <Select label=\"Contamination map type\" onChange={mapSelected} value={type}>\n                <MenuItem value=\"clean\">After cleaning</MenuItem>\n                <MenuItem value=\"contamination\">Before cleaning</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            <canvas id=\"aux\" style={{display: 'none'}}/>\n            <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n          </div>\n          <Typography variant={\"h5\"}>Cleaner comments:</Typography>\n          <div className={styles.comments}>\n            <Typography variant={\"body1\"} className={styles.comment}>{report.comments}</Typography>\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaner:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['cleaner_name']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning time:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['cleaning_time']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Contamination index:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>75</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning successful:</Typography>\n            <div style={{marginLeft: 4, height: 35}}>{getIcon(report['cleaning_succesful'])}</div>\n          </div>\n        </Grid>\n      </Grid>\n      <Snackbar open={error} autoHideDuration={6000} onClose={() => setError(false)}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nexport default ReportPage;","import React from 'react';\nimport './App.scss';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport {authenticated as auth} from '../utils/api';\nimport DashboardPage from \"../pages/DashboardPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport CleanersPage from \"../pages/CleanersPage\";\n//import PageContainer from \"../containers/PageContainer\";\nimport Toolbar from \"../components/Toolbar\";\nimport {useLocation} from 'react-router-dom';\nimport AnalysisPage from \"../pages/AnalysisPage\";\nimport RoomsPage from \"../pages/RoomsPage\";\nimport AssignmentsPage from \"../pages/AssignmentsPage\";\nimport RoomDetailsPage from \"../pages/RoomDetailsPage\";\nimport CleanerDetailsPage from \"../pages/CleanerDetailsPage\";\nimport ReportPage from \"../pages/ReportPage\";\n\nfunction App() {\n  const location = useLocation();\n  const login = () => (auth() ? <Redirect to=\"/dashboard\"/> : <LoginPage/>);\n  const dash = () => (!auth() ? <Redirect to=\"/\"/> : <DashboardPage/>);\n  const cleaner = () => (!auth() ? <Redirect to=\"/\"/> : <CleanerDetailsPage/>);\n  const cleaners = () => (!auth() ? <Redirect to=\"/\"/> : <CleanersPage/>);\n  const assignments = () => (!auth() ? <Redirect to=\"/\"/> : <AssignmentsPage/>);\n  const rooms = () => (!auth() ? <Redirect to=\"/\"/> : <RoomsPage/>);\n  const room = () => (!auth() ? <Redirect to=\"/\"/> : <RoomDetailsPage/>);\n  const analysis = () => (!auth() ? <Redirect to=\"/\"/> : <AnalysisPage/>);\n  const report = () => (!auth() ? <Redirect to=\"/\"/> : <ReportPage/>);\n\n  return (\n    <div className=\"App\">\n      {location.pathname !== '/' && <Toolbar/>}\n      <Switch location={location}>\n        <Route path={\"/dashboard\"} render={dash}/>\n        <Route path={\"/cleaners/:id\"} render={cleaner}/>\n        <Route path={\"/cleaners\"} render={cleaners}/>\n        <Route path={\"/assignments\"} render={assignments}/>\n        <Route path={\"/rooms/reports/:id\"} render={report}/>\n        <Route path={\"/rooms/:id\"} render={room}/>\n        <Route path={\"/rooms\"} render={rooms}/>\n        <Route path={\"/analysis\"} render={analysis}/>\n        <Route path={\"/\"} render={login}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {unstable_createMuiStrictModeTheme as createMuiTheme, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport {blueGrey, lightBlue} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[900],\n    },\n    secondary: lightBlue\n  },\n  typography: {\n    fontFamily: ['Raleway', 'sans-serif']\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={'/spotless'}>\n      <ThemeProvider theme={theme}>\n        <StylesProvider injectFirst>\n          <App/>\n        </StylesProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ReportPage_row__1XU8D\",\"semiBold\":\"ReportPage_semiBold__20bHc\",\"reportInfo\":\"ReportPage_reportInfo__KuWwG\",\"column\":\"ReportPage_column__1fkvo\",\"good\":\"ReportPage_good__IEB1u\",\"map\":\"ReportPage_map__1ruE5\",\"comments\":\"ReportPage_comments__vvAhd\",\"comment\":\"ReportPage_comment__38N5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1Bm9j\",\"name\":\"Toolbar_name__3EvOQ\",\"svg\":\"Toolbar_svg__3XlL9\",\"tab\":\"Toolbar_tab__3uwiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"CleanerDetailsPage_content__3PEfI\",\"avatar\":\"CleanerDetailsPage_avatar__3KDG8\",\"row\":\"CleanerDetailsPage_row__G0VOc\",\"menu\":\"CleanerDetailsPage_menu__2gyF8\",\"column\":\"CleanerDetailsPage_column__3374X\",\"semiBold\":\"CleanerDetailsPage_semiBold__1F3iu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semiBold\":\"DashboardPage_semiBold__1wP56\",\"stat\":\"DashboardPage_stat__1HNGL\",\"keyStat\":\"DashboardPage_keyStat__3TqkO\",\"subtitle\":\"DashboardPage_subtitle__SKIyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"CleanersPage_headerRow__20bGG\",\"bold\":\"CleanersPage_bold__qIG9F\",\"menu\":\"CleanersPage_menu__1x8Ct\",\"row\":\"CleanersPage_row__2H2UE\"};"],"sourceRoot":""}