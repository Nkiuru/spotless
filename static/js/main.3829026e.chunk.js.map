{"version":3,"sources":["pages/RoomsPage/RoomsPage.module.scss","pages/AdminPage/AdminPage.module.scss","components/StatusDot/StatusDot.module.scss","pages/AssignmentsPage/AssignmentsPage.module.scss","components/Charts/ReportsPerDay/ReportsPerDay.module.scss","pages/LoginPage/LoginPage.module.scss","components/Charts/CleaningsByCleaner/CleaningsByCleaner.module.scss","components/Charts/ContaminationIndexOverTime/ContaminationIndexOverTime.module.scss","components/Charts/CleaningDuration/CleaningDuration.module.scss","components/Charts/ActivityGraph/ActivityGraph.module.scss","components/RoomSelector/RoomSelector.module.scss","pages/RoomDetailsPage/RoomDetailsPage.module.scss","components/ShiftPicker/ShiftPicker.module.scss","containers/PageContainer/PageContainer.module.scss","pages/CleanersPage/CleanersPage.module.scss","components/CleaningReportsTable/CleaningReportTable.module.scss","assets/heatmap2.png","pages/ReportPage/ReportPage.module.scss","assets/web_logo.png","assets/logo.png","assets/hospital.png","components/CleanerSelect/CleanerSelect.module.scss","pages/DashboardPage/DashboardPage.module.scss","components/Toolbar/Toolbar.module.scss","utils/constants.js","utils/api.js","containers/PageContainer/index.js","containers/PageContainer/PageContainer.js","pages/DashboardPage/KeyStat.js","components/StatusDot/index.js","components/StatusDot/StatusDot.js","utils/utils.js","components/Charts/ReportsPerDay/index.js","components/Charts/ReportsPerDay/ReportsPerDay.js","pages/DashboardPage/Alerts.js","pages/DashboardPage/index.js","pages/DashboardPage/DashboardPage.js","pages/LoginPage/LoginPage.js","pages/LoginPage/index.js","components/ShiftPicker/ShiftPicker.js","components/RoomSelector/EnhancedTableHead.js","utils/tableUtils.js","pages/CleanersPage/CleanersPage.js","pages/CleanersPage/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","components/Charts/CleaningsByCleaner/index.js","components/Charts/CleaningsByCleaner/CleaningsByCleaner.js","components/Charts/ContaminationIndexOverTime/index.js","components/Charts/ContaminationIndexOverTime/ContaminationIndexOverTime.js","components/Charts/CleaningDuration/index.js","components/Charts/CleaningDuration/CleaningDuration.js","pages/AnalysisPage/index.js","pages/AnalysisPage/AnalysisPage.js","pages/RoomsPage/RoomsMap.js","pages/AssignmentsPage/TableFilters.js","pages/RoomsPage/index.js","pages/RoomsPage/RoomsPage.js","components/CleanerSelect/index.js","components/CleanerSelect/CleanerSelect.js","pages/AssignmentsPage/AssignCleanerDialog.js","pages/AssignmentsPage/AssignmentsPage.js","pages/AssignmentsPage/index.js","pages/RoomDetailsPage/RoomDetailsCard.js","pages/RoomDetailsPage/RoomCleanerCard.js","pages/RoomDetailsPage/RoomReportComments.js","components/CleaningReportsTable/CleaningReportsTable.js","components/Charts/ActivityGraph/ActivityGraph.js","components/Charts/ActivityGraph/index.js","pages/RoomDetailsPage/index.js","pages/RoomDetailsPage/RoomDetailsPage.js","components/CleaningReportsTable/index.js","pages/CleanerDetailsPage/EditCleanerDialog.js","components/RoomSelector/RoomSelector.js","components/RoomSelector/index.js","pages/CleanerDetailsPage/CleanerDetailsPage.js","pages/CleanerDetailsPage/index.js","pages/ReportPage/index.js","pages/ReportPage/ReportPage.js","components/CircularProgressWithLabel/index.js","components/CircularProgressWithLabel/CircularProgressWithLabel.js","pages/AdminPage/index.js","pages/AdminPage/AdminPage.js","app/App.js","serviceWorker.js","index.js","pages/CleanerDetailsPage/CleanerDetailsPage.module.scss"],"names":["module","exports","API_KEY","BASE_URL","ROOM_TYPES","Object","freeze","OFFICE","frequency","cleaningTime","displayName","key","TOILET","WARD_ROOM","EXAMINATION_ROOM","CORRIDOR","WAITING_ROOM","HOSPITAL_MAP","name","areas","shape","coords","GLOBAL_HOSPITAL","localStorage","getItem","GLOBAL_HOSPITAL_NAME","authenticated","getUser","JSON","parse","addParam","property","params","parameter","newParams","length","getRooms","hospital","floor","showAssigned","a","doGetRequest","getHospitals","getAssignedRooms","cleanerId","getAssignedCleaners","roomId","assignRoomsToCleaner","rooms","cleaner","Promise","all","map","room","assignRoom","unAssignRooms","unAssignRoom","doPostRequest","stringify","doDeleteRequest","getRoom","getCleaners","getCleaner","createCleaner","shiftStart","shiftEnd","getReports","deleteCleaner","getReport","reportId","getHeatmap","type","requestURL","fetch","method","headers","response","ok","arrayBuffer","json","console","log","Error","error","getRoomHeatmap","editCleaner","doPutRequest","getSimulatorSettings","setSimulation","speed","resetSimulation","getFloorplan","id","blob","statusText","url","message","body","PageContainer","children","style","top","noToolbar","className","styles","pageContainer","pageContent","KeyStat","value","subtitle","color","stat","keyStat","Typography","variant","StatusDot","size","tooltip","classes","dot","push","neutral","small","Tooltip","title","join","getRoomTypeProp","propName","getStatus","contamination","getVariant","getVariantColor","mergeCleaners","status","cleaners","update_img","auxCanvas","canvas","scaler","clean","overlay","arr","BigUint64Array","bytearray","array","min","max","pix","pix1","minRaw","BigInt","Number","MAX_SAFE_INTEGER","maxRaw","j","im_p","i","Uint8Array","convert64to8","red","green","blue","b","tableRed","tableGreen","tableBlue","Math","cos","round","pow","sin","atan","Uint8ClampedArray","initColorMaps","redMap","greenMap","blueMap","img","imgArr","h","ImageData","data","byteIdx","imgIdx","grayValue","ctx","getContext","putImageData","drawImage","ReportsPerDay","reports","loading","report","moment","format","counts","forEach","x","formattedReports","keys","date","amount","height","Paper","container","CircularProgress","margin","width","chart","textAlign","dataKey","strokeDasharray","stroke","strokeWidth","Alerts","history","useHistory","today","filtered","filter","overview","isSame","alerts","alert","onClick","pathname","state","Grid","direction","alignItems","justify","item","semiBold","lineHeight","comments","ArrowForward","fontSize","marginTop","DashboardPage","useState","user","setUser","setRooms","setReports","setLoading","hospitals","setHospitals","setHospital","hospitalSet","setHospitalSet","fetchData","setFetchData","useEffect","u","then","result","getContaminationIndex","contaminations","val","reduce","display","flexDirection","username","IconButton","Refresh","FormControl","minWidth","InputLabel","Select","label","onChange","event","target","setItem","removeItem","setGlobalHospital","find","setGlobalHospitalName","MenuItem","hosp","spacing","xs","grid","getCleanedRooms","validationSchema","Yup","required","password","LoginPage","content","src","logo","alt","form","initialValues","onSubmit","vars","setSubmitting","isSuperAdmin","superAdmin","authenticate","isSubmitting","resetForm","values","component","TextField","autoFocus","fullWidth","Button","btn","ShiftPicker","row","Array","number","num","toString","padStart","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","numeric","disablePadding","sortDirection","TableSortLabel","active","disabled","sort","visuallyHidden","descendingComparator","undefined","toUpperCase","getComparator","stableSort","comparator","stabilizedThis","el","index","handleClick","selected","setSelected","selectedIndex","indexOf","newSelected","concat","slice","firstName","lastName","AddCleanerDialog","open","setOpen","setIsLoaded","setSnackOpen","handleClose","handleSubmit","startHour","startMinutes","endHour","endMinutes","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","useStyles","makeStyles","theme","border","clip","overflow","position","CleanersTable","React","setOrder","setOrderBy","page","setPage","cleanersPerPage","setCleanersPerPage","TableContainer","Table","TableBody","labelId","hover","tabIndex","scope","assignedRooms","numCleaned","placement","getCleaningProgress","isBetween","viewCleaner","VisibilityOutlined","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","CleanersPage","setCleaners","isLoaded","snackOpen","responses","err","handleSnackClose","reason","headerRow","bold","AddCircleOutline","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","NavTabs","withStyles","root","flexGrow","indicator","justifyContent","backgroundColor","marginBottom","borderTopLeftRadius","borderTopRightRadius","Tabs","TabIndicatorProps","AboutDialog","handleConfirmClose","aria-describedby","DialogContentText","href","Toolbar","location","useLocation","getTabValue","tabId","route","matchPath","path","exact","strict","mountTabValueFactory","anchorEl","setAnchorEl","AppBar","toolbar","split","goBack","ArrowBackRounded","svg","Icon","Tab","tab","DashboardRounded","Link","to","disableRipple","FormatListBulletedRounded","PeopleRounded","BusinessRounded","AssessmentRounded","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","ListItemIcon","Settings","ListItemText","primary","Info","ExitToApp","CleaningsByCleaner","fill","ContaminationIndexOverTime","acc","CleaningDuration","und","estimated","unit","AnalysisPage","initMap","area","hex","exec","r","g","hexToRgb","preFillColor","RoomsMap","hovering","setHovering","setRoom","hoverStyle","setHoverStyle","setMap","ignored","forceUpdate","window","innerWidth","hospitalImg","fillColor","imgWidth","onMouseEnter","pageY","left","pageX","onMouseLeave","roomInfo","toFixed","TableFilters","initialBuilding","initialFloor","hideAll","hideAssigned","building","setBuilding","setFloor","roomType","setRoomType","assigned","setAssigned","filters","setFilters","valid","Set","FormControlLabel","control","RoomsPage","setError","origRooms","setOrigRooms","CleanerSelect","options","setOptions","openSelect","setOpenSelect","setCleaner","clnrs","Autocomplete","onOpen","autocomplete","getOptionLabel","option","newValue","renderInput","InputProps","endAdornment","AssignCleanerDialog","setSnackText","selectedWithCleaner","disableBackdropClick","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","dark","minHeight","button","EnhancedTableToolbar","getData","showFilters","removeAssignments","clsx","fontWeight","startIcon","Close","critical","flexBasis","marginRight","FilterList","paper","table","AssignmentsPage","roomsPerPage","setRoomsPerPage","snackText","aria-label","newSelecteds","n","isItemSelected","role","aria-checked","RouterLink","openRoom","RoomDetailsCard","Card","card","cardContent","Divider","divider","medium","RoomCleanerCard","newCleaner","setNewCleaner","hasCleaner","removeCleanerAssignment","assignNewCleaner","getColor","marginLeft","ClearOutlined","CommentsList","time","comment","author","ReportsTableHead","unshift","CleaningReportsTable","reportsPerPage","setReportsPerPage","Check","good","CloseRounded","viewReport","pad","CustomizedAxisTick","this","y","payload","transform","dy","textAnchor","PureComponent","ActivityGraph","activity","lastCleaned","formattedData","start","valueOf","Date","LTTB","point","getHours","getMinutes","offset","tick","RoomDetailsPage","useParams","roomLoaded","setRoomLoaded","image","setImage","showMap","setShowMap","showActivity","setShowActivity","errorMsg","setErrorMsg","URL","createObjectURL","catch","aux","document","getElementById","offsetWidth","titleRow","action","detailsRow","disableActivity","EditCleanerDialog","onSave","end","edited","res","RoomSelector","assign","maxWidth","AssignmentsTable","assignments","setAssignments","removeAssignment","newAssignments","splice","getCleaningStatus","Clear","CleanerDetailsPage","cleanerLoaded","setCleanerLoaded","editing","setEditing","showRoomSelector","setShowRoomSelector","removeCleaner","Edit","DeleteForever","AccountCircleRounded","avatar","ReportPage","setReport","setType","showContImg","setShowContImg","showCleanImg","setShowCleanImg","mapSelected","combined","heatmap","reportInfo","getOverview","utc","CircularProgressWithLabel","Box","bottom","right","AdminPage","simSpeed","setSimSpeed","progress","setProgress","generating","setGenerating","settings","generate","setTimeout","slider","gutterBottom","flex","Slider","getAriaValueText","valueLabelDisplay","step","marks","mark","generateMarks","Input","onBlur","InputAdornment","float","App","render","auth","hostname","match","createMuiTheme","blueGrey","lightBlue","typography","fontFamily","ReactDOM","StrictMode","basename","ThemeProvider","StylesProvider","injectFirst","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3829026e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"RoomsPage_headerRow__3ck7N\",\"bold\":\"RoomsPage_bold__39rfR\",\"map\":\"RoomsPage_map__19OrU\",\"area\":\"RoomsPage_area__2kJln\",\"roomInfo\":\"RoomsPage_roomInfo__2IEIj\",\"filters\":\"RoomsPage_filters__BmR-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"AdminPage_slider__15E9C\",\"row\":\"AdminPage_row__2qRHf\",\"divider\":\"AdminPage_divider__3uIH_\",\"semiBold\":\"AdminPage_semiBold__EaJqb\",\"medium\":\"AdminPage_medium__2aq8Q\",\"card\":\"AdminPage_card__3NaLL\",\"cardContent\":\"AdminPage_cardContent__1_5WT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot\":\"StatusDot_dot__1rSYH\",\"good\":\"StatusDot_good__1GIEp\",\"medium\":\"StatusDot_medium__3zBB3\",\"critical\":\"StatusDot_critical__23vOC\",\"neutral\":\"StatusDot_neutral__1H6OR\",\"tiny\":\"StatusDot_tiny__33nQ5\",\"small\":\"StatusDot_small__1yc1L\",\"large\":\"StatusDot_large__jMuJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AssignmentsPage_title__3UMlB\",\"critical\":\"AssignmentsPage_critical__3ZemZ\",\"row\":\"AssignmentsPage_row__2lJV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ReportsPerDay_chart__1nn7U\",\"title\":\"ReportsPerDay_title__aLd0m\",\"container\":\"ReportsPerDay_container__3-OV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginPage_form__38hI6\",\"btn\":\"LoginPage_btn__Q93UE\",\"content\":\"LoginPage_content__3F07h\",\"img\":\"LoginPage_img__HnDXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"CleaningsByCleaner_chart__3aloT\",\"title\":\"CleaningsByCleaner_title__2Z5X5\",\"container\":\"CleaningsByCleaner_container__2ovud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ContaminationIndexOverTime_chart__-hDF2\",\"title\":\"ContaminationIndexOverTime_title__2xIiR\",\"container\":\"ContaminationIndexOverTime_container__vcMdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"CleaningDuration_chart__3_7JM\",\"title\":\"CleaningDuration_title__XmVrf\",\"container\":\"CleaningDuration_container__2fTKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ActivityGraph_chart__1OtGx\",\"title\":\"ActivityGraph_title__2ww9S\",\"container\":\"ActivityGraph_container__14QgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RoomSelector_title__363JP\",\"critical\":\"RoomSelector_critical__a-ztV\",\"row\":\"RoomSelector_row__n9QC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleRow\":\"RoomDetailsPage_titleRow__JoTlm\",\"content\":\"RoomDetailsPage_content__2CxAu\",\"card\":\"RoomDetailsPage_card__2J4HU\",\"cardContent\":\"RoomDetailsPage_cardContent__1soEX\",\"detailsRow\":\"RoomDetailsPage_detailsRow__3fj0E\",\"row\":\"RoomDetailsPage_row__PCQ4C\",\"divider\":\"RoomDetailsPage_divider__hWVez\",\"semiBold\":\"RoomDetailsPage_semiBold__24ERR\",\"medium\":\"RoomDetailsPage_medium__3Rnxk\",\"good\":\"RoomDetailsPage_good__2jSxq\",\"med\":\"RoomDetailsPage_med__T6SFg\",\"critical\":\"RoomDetailsPage_critical__2gPiW\",\"neutral\":\"RoomDetailsPage_neutral__2SrpQ\",\"btn\":\"RoomDetailsPage_btn__3tYWx\",\"comments\":\"RoomDetailsPage_comments__1nTSD\",\"comment\":\"RoomDetailsPage_comment__1rwNF\",\"author\":\"RoomDetailsPage_author__tbk-d\",\"container\":\"RoomDetailsPage_container__2fZtP\",\"map\":\"RoomDetailsPage_map__2yhwI\",\"overlay\":\"RoomDetailsPage_overlay__1x7-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ShiftPicker_menu__1os-v\",\"row\":\"ShiftPicker_row__rUGBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"PageContainer_pageContainer__iX86t\",\"pageContent\":\"PageContainer_pageContent__1wPf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"CleanersPage_headerRow__20bGG\",\"bold\":\"CleanersPage_bold__qIG9F\",\"menu\":\"CleanersPage_menu__1x8Ct\",\"row\":\"CleanersPage_row__2H2UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"CleaningReportTable_good__2fi-5\",\"semiBold\":\"CleaningReportTable_semiBold__3M_nh\"};","module.exports = __webpack_public_path__ + \"static/media/heatmap2.dbb6a747.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ReportPage_row__1XU8D\",\"semiBold\":\"ReportPage_semiBold__20bHc\",\"reportInfo\":\"ReportPage_reportInfo__KuWwG\",\"column\":\"ReportPage_column__1fkvo\",\"good\":\"ReportPage_good__IEB1u\",\"medium\":\"ReportPage_medium__1jIMT\",\"critical\":\"ReportPage_critical___2FfG\",\"container\":\"ReportPage_container__rVF_Z\",\"map\":\"ReportPage_map__1ruE5\",\"overlay\":\"ReportPage_overlay__3SQk1\",\"comments\":\"ReportPage_comments__vvAhd\",\"comment\":\"ReportPage_comment__38N5l\"};","module.exports = __webpack_public_path__ + \"static/media/web_logo.11335064.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.75e400ae.png\";","module.exports = __webpack_public_path__ + \"static/media/hospital.ea9e1e90.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autocomplete\":\"CleanerSelect_autocomplete__2dss4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semiBold\":\"DashboardPage_semiBold__1wP56\",\"stat\":\"DashboardPage_stat__1HNGL\",\"keyStat\":\"DashboardPage_keyStat__3TqkO\",\"subtitle\":\"DashboardPage_subtitle__SKIyw\",\"grid\":\"DashboardPage_grid__3i4Zn\",\"alerts\":\"DashboardPage_alerts__1Vbju\",\"alert\":\"DashboardPage_alert__3qisR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1Bm9j\",\"name\":\"Toolbar_name__3EvOQ\",\"svg\":\"Toolbar_svg__3XlL9\",\"tab\":\"Toolbar_tab__3uwiV\",\"logo\":\"Toolbar_logo__2iJuv\"};","export const API_KEY = 'zL43mXgXk5xa7YFRBVZscbLnGFaqVh24q5G6fhGjmAv532FAVBRtnuCJpwXWXnhw';\nexport const BASE_URL = 'https://cleaner-app-api.azurewebsites.net/api/';\n\nexport const UNCLEANED = 'Uncleaned due to some reason';\n\nexport const ROOM_TYPES = Object.freeze({\n  OFFICE: {\n    frequency: 1,\n    cleaningTime: 5,\n    displayName: 'Office',\n    key: 'OFFICE'\n  },\n  TOILET: {\n    frequency: 5,\n    cleaningTime: 5,\n    displayName: 'Toilet',\n    key: 'TOILET'\n  },\n  WARD_ROOM: {\n    frequency: 5,\n    cleaningTime: 8,\n    displayName: 'Ward room',\n    key: 'WARD_ROOM'\n  },\n  EXAMINATION_ROOM: {\n    frequency: 5,\n    cleaningTime: 6,\n    displayName: 'Examination room',\n    key: 'EXAMINATION_ROOM'\n  },\n  CORRIDOR: {\n    frequency: 3,\n    cleaningTime: 9,\n    displayName: 'Corridor',\n    key: 'CORRIDOR'\n  },\n  WAITING_ROOM: {\n    frequency: 5,\n    cleaningTime: 10,\n    displayName: 'Waiting room',\n    key: 'WAITING_ROOM'\n  },\n});\n\nexport const HOSPITAL_MAP = Object.freeze({\n  name: \"hospital map\",\n  areas: [\n    {\n      shape: \"rect\",\n      coords: [132, 25, 193, 144],\n    },\n    {\n      shape: \"rect\",\n      coords: [62, 27, 126, 144],\n    },\n    {\n      shape: \"rect\",\n      coords: [9, 48, 57, 160],\n    },\n    {\n      shape: \"rect\",\n      coords: [9, 165, 79, 254],\n    },\n    {\n      shape: \"poly\",\n      coords: [368, 27, 368, 113, 316, 113, 316, 27, 369, 27],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        310,\n        112,\n        288,\n        112,\n        287,\n        160,\n        253,\n        160,\n        253,\n        74,\n        201,\n        74,\n        200,\n        26,\n        311,\n        26,\n        312,\n        112,\n        310,\n        111,\n      ],\n    },\n    {\n      shape: \"rect\",\n      coords: [291, 116, 369, 160],\n    },\n    {\n      shape: \"rect\",\n      coords: [374, 27, 429, 144],\n    },\n    {\n      shape: \"rect\",\n      coords: [433, 27, 488, 145],\n    },\n    {\n      shape: \"rect\",\n      coords: [494, 27, 548, 145],\n    },\n    {\n      shape: \"rect\",\n      coords: [554, 26, 608, 145],\n    },\n    {\n      shape: \"rect\",\n      coords: [373, 149, 641, 211],\n    },\n    {\n      shape: \"rect\",\n      coords: [596, 216, 639, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [522, 216, 558, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [476, 215, 517, 306],\n    },\n    {\n      shape: \"rect\",\n      coords: [418, 215, 472, 306],\n    },\n    {\n      shape: \"rect\",\n      coords: [365, 215, 414, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [293, 216, 360, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [259, 214, 289, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [174, 258, 255, 305],\n    },\n    {\n      shape: \"rect\",\n      coords: [175, 215, 255, 255],\n    },\n    {\n      shape: \"rect\",\n      coords: [85, 215, 172, 256],\n    },\n    {\n      shape: \"rect\",\n      coords: [85, 259, 171, 307],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        368,\n        164,\n        368,\n        211,\n        85,\n        210,\n        84,\n        149,\n        184,\n        148,\n        184,\n        164,\n        368,\n        164,\n        368,\n        163,\n      ],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        84,\n        370,\n        193,\n        371,\n        194,\n        356,\n        258,\n        357,\n        257,\n        310,\n        83,\n        310,\n        83,\n        370,\n      ],\n    },\n    {\n      shape: \"rect\",\n      coords: [9, 262, 79, 358],\n    },\n    {\n      shape: \"rect\",\n      coords: [262, 311, 369, 358],\n    },\n    {\n      shape: \"rect\",\n      coords: [373, 310, 608, 372],\n    },\n    {\n      shape: \"rect\",\n      coords: [551, 378, 610, 494],\n    },\n    {\n      shape: \"rect\",\n      coords: [492, 377, 550, 494],\n    },\n    {\n      shape: \"rect\",\n      coords: [432, 377, 487, 494],\n    },\n    {\n      shape: \"rect\",\n      coords: [374, 376, 428, 494],\n    },\n    {\n      shape: \"rect\",\n      coords: [290, 362, 369, 405],\n    },\n    {\n      shape: \"rect\",\n      coords: [13, 363, 57, 474],\n    },\n    {\n      shape: \"rect\",\n      coords: [61, 376, 129, 492],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        368,\n        494,\n        368,\n        409,\n        285,\n        409,\n        286,\n        362,\n        261,\n        362,\n        262,\n        494,\n        368,\n        494,\n      ],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        133,\n        376,\n        133,\n        494,\n        194,\n        494,\n        194,\n        441,\n        247,\n        442,\n        249,\n        397,\n        195,\n        396,\n        195,\n        376,\n        133,\n        377,\n      ],\n    },\n  ],\n});","import {API_KEY, BASE_URL} from \"./constants\";\n\nexport let GLOBAL_HOSPITAL = localStorage.getItem('hospital') || false;\nexport let GLOBAL_HOSPITAL_NAME = localStorage.getItem('hospital_name') || false;\n\n\nexport const authenticated = () => {\n  return localStorage.getItem('user') !== null;\n};\n\nexport const getUser = () => {\n  if (authenticated()) {\n    return JSON.parse(localStorage.getItem('user'));\n  } else {\n    return false;\n  }\n}\n\nexport const authenticate = (username, password) => {\n  let isSuperAdmin = false;\n  if (username === 'superadmin' && password === 'admin') {\n    isSuperAdmin = true;\n  }\n  localStorage.setItem('user', JSON.stringify({\n    username,\n    superAdmin: isSuperAdmin\n  }));\n  return true;\n}\n\nexport const setGlobalHospital = (hospital) => {\n  if (hospital) {\n    localStorage.setItem('hospital', hospital);\n  } else {\n    localStorage.removeItem('hospital');\n  }\n  GLOBAL_HOSPITAL = hospital;\n}\n\nexport const setGlobalHospitalName = (hospital) => {\n  if (hospital) {\n    localStorage.setItem('hospital_name', hospital);\n  } else {\n    localStorage.removeItem('hospital_name');\n  }\n  GLOBAL_HOSPITAL_NAME = hospital;\n}\n\nexport const logout = () => {\n  localStorage.removeItem('user');\n}\n\nconst addParam = (property, params, parameter) => {\n  let newParams = params;\n  if (params.length > 0 && parameter) {\n    newParams += `&${property}=${parameter}`;\n  } else if (parameter) {\n    newParams += `?${property}=${parameter}`;\n  }\n  return newParams;\n}\n\n\nexport const getRooms = async (hospital, floor, showAssigned) => {\n  const url = 'rooms';\n  hospital = hospital || GLOBAL_HOSPITAL;\n  let params = addParam('hospital_id', '', hospital);\n  params = addParam('floor', params, floor);\n  showAssigned = showAssigned ? 1 : 0;\n  params = addParam('assigned_cleaners', params, showAssigned);\n  return doGetRequest(url, params);\n}\n\nexport const getHospitals = async () => {\n  return doGetRequest('hospitals');\n}\n\nexport const startCleaning = async (roomId) => {\n  return doGetRequest(`room/startcleaning?id=${roomId}`);\n}\n\nexport const stopCleaning = async (roomId) => {\n  return doGetRequest(`room/stopcleaning?id=${roomId}`);\n}\n\nexport const getAssignedRooms = async (cleanerId) => {\n  return doGetRequest(`cleaners/rooms?cleaner_id=${cleanerId}`);\n}\n\nexport const getAssignedCleaners = async (roomId) => {\n  return doGetRequest(`cleaners/rooms?room_id=${roomId}`);\n}\n\nexport const assignRoomsToCleaner = async (rooms, cleaner) => {\n  return Promise.all(rooms.map((room) => {\n    return assignRoom(room['_id'], cleaner);\n  }));\n}\n\nexport const unAssignRooms = async (rooms) => {\n  return Promise.all(rooms.map((room) => {\n    return unAssignRoom(room['_id'], room['assigned_cleaners'][0]['_id']);\n  }));\n}\n\nexport const assignRoom = async (room, cleaner) => {\n  return doPostRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const unAssignRoom = async (room, cleaner) => {\n  return doDeleteRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const getRoom = async (roomId) => {\n  return doGetRequest(`room?_id=${roomId}`);\n}\n\nexport const getCleaners = async () => {\n  return doGetRequest('cleaners/');\n}\n\nexport const getCleaner = async (cleanerId) => {\n  return doGetRequest(`cleaner?_id=${cleanerId}`);\n}\n\nexport const createCleaner = async (name, shiftStart, shiftEnd) => {\n  return doPostRequest('cleaner/', JSON.stringify({\n    name,\n    'shift_start': shiftStart,\n    'shift_end': shiftEnd\n  }));\n}\n\nexport const getReports = async (roomId, cleanerId, hospital) => {\n  hospital = hospital || GLOBAL_HOSPITAL_NAME;\n  let params = addParam('room_id', '', roomId);\n  params = addParam('cleaner_id', params, cleanerId);\n  params = addParam('hospital_name', params, hospital);\n  return doGetRequest('reports', params)\n}\n\nexport const deleteCleaner = async (cleanerId) => {\n  return doDeleteRequest('cleaner', JSON.stringify({\n    '_id': cleanerId\n  }));\n}\n\nexport const getReport = async (reportId) => {\n  return doGetRequest(`report?_id=${reportId}`);\n}\n\nexport const getHeatmap = async (reportId, type) => {\n  const requestURL = BASE_URL + `report/heatmap?_id=${reportId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    console.log(json)\n    throw new Error(json.error);\n  }\n}\n\nexport const getRoomHeatmap = async (roomId, type) => {\n  const requestURL = BASE_URL + `room/heatmap?_id=${roomId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    throw new Error(json.error);\n  }\n}\n\nexport const editCleaner = async (cleaner) => {\n  return doPutRequest('cleaner/', JSON.stringify({\n    '_id': cleaner['_id'],\n    'name': cleaner.name,\n    'shift_start': cleaner['shift_start'],\n    'shift_end': cleaner['shift_end']\n  }));\n}\n\nexport const getSimulatorSettings = async () => {\n  return doGetRequest('simulator/settings');\n}\n\nexport const setSimulation = async (speed) => {\n  console.log(speed)\n  return doPutRequest('simulator/settings', JSON.stringify({'simulator_speed': speed}));\n}\n\nexport const resetSimulation = async () => {\n  return doGetRequest('simulator/clear');\n}\n\nexport const createRoom = async (hospital, name, type, building, floor) => {\n  return doPostRequest('/room', JSON.stringify({\n    'hospital_id': hospital,\n    'name': name,\n    'is_simulated': true,\n    'room_type': type,\n    'building': building,\n    'floor': floor\n  }));\n}\n\nexport const getFloorplan = async (id) => {\n  const response = await fetch(`${BASE_URL}room/floorplan?_id=${id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'image/png',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.blob();\n  } else {\n    throw new Error(response.statusText);\n  }\n}\n\nconst doGetRequest = async (url, params) => {\n  const requestURL = BASE_URL + url + (params || '');\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPostRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doDeleteRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPutRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}","import PageContainer from './PageContainer';\nexport default PageContainer;\n","import React from 'react';\nimport styles from './PageContainer.module.scss';\nimport PropTypes from 'prop-types';\n\nconst PageContainer = ({ children, style, noToolbar }) => {\n  const top = noToolbar ? 0 : '48px';\n  return (\n    <div className={styles.pageContainer} style={{top}}>\n      <div className={styles.pageContent} style={style}>{children}</div>\n    </div>\n  );\n};\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n  noToolbar: PropTypes.bool\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport styles from \"./DashboardPage.module.scss\";\nimport {Typography} from \"@material-ui/core\";\n\nconst KeyStat = ({value, subtitle, color}) => {\n  return (\n    <div className={styles.stat}>\n      <div className={styles.keyStat}>\n        <Typography variant={\"h3\"} style={{color}}>{value}</Typography>\n      </div>\n      <Typography variant={\"body2\"} className={styles.subtitle}>{subtitle}</Typography>\n    </div>\n  );\n}\n\nexport default KeyStat;","import StatusDot from './StatusDot';\nexport default StatusDot;","import React from 'react';\nimport styles from './StatusDot.module.scss';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PropTypes from \"prop-types\";\n\n\nconst StatusDot = ({variant, size, tooltip}) => {\n  const classes = [styles.dot];\n  classes.push(variant ? styles[variant] : styles.neutral);\n  classes.push(size ? styles[size] : styles.small);\n  return (\n    <Tooltip title={tooltip}>\n      <div className={classes.join(' ')}/>\n    </Tooltip>\n  );\n}\n\nStatusDot.propTypes = {\n  variant: PropTypes.oneOf(['good', 'critical', 'medium', 'neutral']).isRequired,\n  size: PropTypes.oneOf(['tiny', 'small', 'large']).isRequired,\n  tooltip: PropTypes.any\n}\n\nexport default StatusDot;","import {ROOM_TYPES} from \"./constants\";\nimport StatusDot from \"../components/StatusDot\";\nimport React from \"react\";\n\nexport const getRoomTypeProp = (room, propName) => {\n  return room['room_type'] !== '<empty>' ? ROOM_TYPES[room['room_type']][propName] : '';\n}\n\nexport const getStatus = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return <StatusDot variant={variant} size={\"tiny\"} tooltip={contamination}/>\n}\n\nexport const getVariant = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return variant;\n}\n\nexport const getVariantColor = (contamination) => {\n  let variant = '#CFD3DA';\n  if (contamination >= 60) {\n    variant = '#EB5757';\n  } else if (contamination >= 30) {\n    variant = '#F2C94C';\n  } else if (contamination < 30) {\n    variant = '#27AE60';\n  }\n  return variant;\n}\n\nexport const mergeCleaners = (rooms) => {\n  return rooms.map((room) => {\n    room.status = room['contamination_index'];\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (cleaner) {\n      room.cleaner = cleaner;\n      room['cleaner_name'] = cleaner.name;\n    } else {\n      room['cleaner_name'] = '-';\n    }\n    return room;\n  });\n}\n\nfunction convert64to8(array, scaler) {\n  let min, max, pix;\n  // eslint-disable-next-line no-undef\n  let minRaw = BigInt(Number.MAX_SAFE_INTEGER);\n  // eslint-disable-next-line no-undef\n  let maxRaw = BigInt(0);\n  for (let j = 0; j < array.length; j++) {\n    pix = array[j]\n    if (pix < minRaw) {\n      minRaw = pix\n    }\n    if (pix > maxRaw) {\n      maxRaw = pix\n    }\n  }\n  // eslint-disable-next-line no-undef\n  max = BigInt(maxRaw) / scaler;\n  // eslint-disable-next-line no-undef\n  min = BigInt(minRaw);\n  let pix1;\n  let im_p = [];\n  if (max <= min) {\n    max = min + 1n\n  }\n  for (let i = 0; i < array.length; i++) {\n    // eslint-disable-next-line no-undef\n    pix1 = (array[i] - min) * 255n / (max - min);\n    if (pix1 > 255n) {\n      pix1 = 255\n    }\n    if (pix1 < 0n) {\n      pix1 = 0n\n    }\n    im_p.push(Number(pix1));\n  }\n  return new Uint8Array(im_p);\n}\n\n// lookup color table to apply to grayscale image\nfunction initColorMaps() {\n  let tableRed = []\n  let tableGreen = []\n  let tableBlue = []\n  let red, green, blue;\n  let a, b;\n  for (let i = 0; i <= 255; i++) {\n    a = i * 0.01236846501;\n    b = Math.cos(a - 1.0)\n    red = Math.round(Math.pow(2.0, Math.sin(a - 1.6)) * 200)\n    green = Math.round(Math.atan(a) * b * 155 + 100.0)\n    blue = Math.round(b * 255)\n    red = Math.min(255, red);\n    green = Math.min(255, green);\n    blue = Math.min(255, blue);\n    red = Math.max(0, red);\n    green = Math.max(0, green);\n    blue = Math.max(0, blue);\n    tableRed.push(red)\n    tableGreen.push(green)\n    tableBlue.push(blue)\n  }\n  return [new Uint8ClampedArray(tableRed), new Uint8ClampedArray(tableGreen), new Uint8ClampedArray(tableBlue)];\n}\n\nexport function update_img(arrayBuffer, auxCanvas, canvas, scaler, clean, overlay) {\n  let arr = null;\n  try {\n    // eslint-disable-next-line no-undef\n    arr = new BigUint64Array(arrayBuffer);\n  } catch (error) {\n    throw error;\n  }\n  let bytearray = convert64to8(arr, scaler);\n  let [redMap, greenMap, blueMap] = initColorMaps();\n  let img = null; //ImageData\n  let imgArr = null; //Uint8ClampedArray\n  const h = Math.round(bytearray.length / 72);\n  if (bytearray) {\n    img = new ImageData(72, h); // Note: the actual array is 4 times bigger because has (RGBA) pixels\n    imgArr = img.data;\n    let byteIdx = 0;\n    // color mapped image\n    for (let imgIdx = 0; imgIdx < imgArr.length; imgIdx += 4) {\n      let grayValue = bytearray[byteIdx];\n      imgArr[imgIdx] = redMap[grayValue]; // R value\n      imgArr[imgIdx + 1] = greenMap[grayValue]; // G value\n      imgArr[imgIdx + 2] = blueMap[grayValue]; // B value\n      imgArr[imgIdx + 3] = overlay ? 0 : 255; // Alpha value\n      if (imgArr[imgIdx] !== redMap[0] && imgArr[imgIdx + 1] !== greenMap[0] && imgArr[imgIdx + 2] !== blueMap[0] && clean) {\n        imgArr[imgIdx] = 0; // R value\n        imgArr[imgIdx + 1] = greenMap[grayValue] // G value\n        imgArr[imgIdx + 2] = 0; // B value\n        imgArr[imgIdx + 3] = 200; // Alpha value\n      }\n\n      byteIdx++;\n    }\n  }\n  // Scaling. It seems that with putImageData we cannot scale the canvas directly\n  // auxCanvas has the image and\n  let ctx = canvas.getContext('2d');\n  auxCanvas.getContext(\"2d\").putImageData(img, 0, 0);\n  ctx.drawImage(auxCanvas, 0, 0)\n  // flip Y AND X axis\n  canvas.style = \"transform: scale(1, 1); flex: 1\";\n}\n\nexport function hexToRgb(hex) {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}","import ReportsPerDay from './ReportsPerDay';\nexport default ReportsPerDay;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport moment from \"moment\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./ReportsPerDay.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\n\nconst ReportsPerDay = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return moment(report['cleaning_time']).format('DD.MM.YYYY');\n  })\n  const counts = {};\n  data.forEach((x) => {\n    counts[x] = (counts[x] || 0) + 1;\n  });\n  const formattedReports = [];\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      date: x,\n      amount: counts[x]\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Cleaning events per day</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning events</Typography>\n                :\n                <LineChart data={formattedReports}>\n                  <XAxis dataKey=\"date\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Line type=\"monotone\" dataKey=\"amount\" name=\"Cleaning events\" stroke=\"#8884d8\" strokeWidth={2}/>\n                </LineChart>\n              }\n\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nReportsPerDay.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default ReportsPerDay;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DashboardPage.module.scss\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {UNCLEANED} from \"../../utils/constants\";\nimport {ArrowForward} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useHistory} from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst Alerts = ({reports, loading}) => {\n  const history = useHistory();\n  const today = moment();\n  const filtered = reports.filter((report) => {\n    return report.overview === UNCLEANED && today.isSame(report['cleaning_time'], 'date');\n  });\n\n  const openReport = (id) => {\n    history.push({\n      pathname: `/rooms/reports/${id}`,\n      state: {id}\n    })\n  }\n  return (\n    <div className={styles.alerts}>\n      {loading ? <CircularProgress size={20} style={{margin: 'auto'}}/> :\n        <>\n          {filtered.map((report) => (\n            <div key={report['_id']} className={styles.alert} onClick={() => {\n              openReport(report['_id']);\n            }}>\n              <Grid container direction={\"row\"} alignItems={\"center\"} justify={\"space-between\"}>\n                <Grid item>\n                  <Typography variant={\"h6\"} className={styles.semiBold}>{report['room_name']},\n                    Floor {report.floor}</Typography>\n                  <Typography variant={\"body2\"} className={styles.semiBold} style={{lineHeight: '24px'}}\n                              color=\"textSecondary\">{report['cleaner_name']}: {report.comments}</Typography>\n                </Grid>\n                <Grid item>\n                  <ArrowForward color={\"action\"} style={{fontSize: '1.75rem'}}/>\n                </Grid>\n              </Grid>\n            </div>\n          ))}\n          {filtered.length === 0 &&\n          <Typography variant={\"h6\"} style={{marginTop: 16}} className={styles.semiBold}>No recent alerts</Typography>\n          }\n        </>\n      }\n    </div>\n  );\n}\n\nAlerts.propTypes = {\n  reports: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default Alerts;","import DashboardPage from './DashboardPage';\nexport default DashboardPage;\n","import React, {useEffect, useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from './DashboardPage.module.scss';\nimport Grid from \"@material-ui/core/Grid\";\nimport KeyStat from \"./KeyStat\";\nimport {\n  getHospitals,\n  getReports,\n  getRooms,\n  getUser,\n  GLOBAL_HOSPITAL,\n  setGlobalHospital,\n  setGlobalHospitalName\n} from \"../../utils/api\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport moment from \"moment\";\nimport {getVariant, getVariantColor} from \"../../utils/utils\";\nimport ReportsPerDay from \"../../components/Charts/ReportsPerDay\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Alerts from \"./Alerts\";\nimport {IconButton, Tooltip} from \"@material-ui/core\";\nimport {Refresh} from \"@material-ui/icons\";\n\nconst DashboardPage = () => {\n  const [user, setUser] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [hospitals, setHospitals] = useState([]);\n  const [hospital, setHospital] = useState(GLOBAL_HOSPITAL);\n  const [hospitalSet, setHospitalSet] = useState(false);\n  const [fetchData, setFetchData] = useState(false);\n\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n    setLoading(true);\n    Promise.all([getRooms(), getReports()])\n      .then((result) => {\n        setRooms(result[0]);\n        setReports(result[1]);\n        setLoading(false);\n      });\n    if (!hospitalSet) {\n      getHospitals()\n        .then((result) => {\n          setHospitals(result);\n        });\n    }\n  }, [hospitalSet, hospital, fetchData]);\n\n  const hospitalSelected = (event) => {\n    setHospital(event.target.value);\n    setGlobalHospital(event.target.value);\n    const hospital = hospitals.find((x) => x['_id'] === event.target.value);\n    setGlobalHospitalName(hospital ? hospital.name : false);\n    setHospitalSet(!hospitalSet);\n  }\n\n  const getCleanedRooms = () => {\n    const today = moment();\n    return rooms.filter((room) => {\n      if (!room['last_cleaned']) {\n        return false;\n      }\n      return moment(room['last_cleaned']).isSame(today, 'date');\n    }).length;\n  }\n\n  const getContaminationIndex = () => {\n    const contaminations = [];\n    rooms.forEach((room) => {\n      const val = room['contamination_index'];\n      if (val > 150) {\n        contaminations.push(150);\n      } else if (val < 0) {\n        contaminations.push(0);\n      } else {\n        contaminations.push(val);\n      }\n    });\n    return Math.round((contaminations.reduce((a, b) => (a + b)) / contaminations.length));\n  }\n\n  const getGreenRooms = () => {\n    return rooms.filter((room) => {\n      return getVariant(room['contamination_index']) === 'good';\n    }).length;\n  }\n\n  const getRedRooms = () => {\n    return rooms.filter((room) => {\n      return getVariant(room['contamination_index']) === 'critical';\n    }).length;\n  }\n\n  const getColor = () => {\n    return getVariantColor(getContaminationIndex());\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Grid container direction={\"row\"} justify={\"space-between\"} alignItems={\"center\"}>\n        <Grid item style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n          <Typography variant={\"h4\"}>Hello {user && user.username}!</Typography>\n          <Tooltip title={\"Refresh\"}>\n            <IconButton onClick={() => {\n              setFetchData(!fetchData);\n            }}>\n              <Refresh/>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <FormControl variant={'outlined'} style={{minWidth: '320px', margin: '8px'}}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Select hospital</InputLabel>\n            <Select label=\"Select Hospital\" onChange={hospitalSelected} value={hospital}>\n              <MenuItem value={false}>\n                <em>All</em>\n              </MenuItem>\n              {\n                hospitals.map(hosp => (\n                  <MenuItem value={hosp['_id']} key={hosp['_id']}>{hosp.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Grid container spacing={6}>\n        <Grid item xs={5}>\n          <Typography variant={\"h5\"} className={styles.semiBold}>Alerts</Typography>\n          <Alerts reports={reports} loading={loading}/>\n        </Grid>\n        <Grid item xs className={styles.grid} style={{marginTop: 48}}>\n          <Grid container spacing={4} justify={\"space-between\"}>\n            <Grid item>\n              <KeyStat subtitle={\"Rooms cleaned today\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getCleanedRooms()} color={\"#F2C94C\"}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Average contamination index\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getContaminationIndex() + '%'}\n                       color={!loading && getColor()}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Green rooms\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getGreenRooms()} color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Red rooms\"} value={loading ? <CircularProgress color={\"secondary\"}/> : getRedRooms()}\n                       color={\"#EB5757\"}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <ReportsPerDay loading={loading} reports={reports}/>\n    </PageContainer>\n  )\n}\n\nexport default DashboardPage;","import React from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {TextField} from \"formik-material-ui\";\nimport {Formik, Form, Field} from \"formik\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport {authenticate} from \"../../utils/api\";\nimport {useHistory} from 'react-router-dom';\nimport Paper from \"@material-ui/core/Paper\";\nimport styles from './LoginPage.module.scss';\nimport logo from \"../../assets/web_logo.png\";\n\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n});\n\nconst LoginPage = () => {\n  const history = useHistory();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const handleSubmit = (vars, {setSubmitting}) => {\n    console.log(vars)\n    authenticate(vars.username, vars.password);\n    history.push('/dashboard');\n  }\n\n  return (\n    <PageContainer noToolbar>\n      <Grid container direction={\"row\"} spacing={2} className={styles.content}>\n        <Grid item xs={12}>\n          <img src={logo} alt=\"LeviTeZer\" className={styles.img}/>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper variant={\"elevation\"} className={styles.form}>\n            <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n              {({isSubmitting, resetForm, values}) => (\n                <Form>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      <Typography variant={\"h4\"}>Login to Spotless</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Field\n                        component={TextField}\n                        autoFocus\n                        variant={\"outlined\"}\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Username\"\n                        type=\"text\"\n                        name=\"username\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Field\n                        component={TextField}\n                        variant={\"outlined\"}\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Password\"\n                        type=\"password\"\n                        name=\"password\"\n                        fullWidth\n                      />\n                    </Grid>\n                  </Grid>\n                  <Button type=\"submit\" color=\"primary\" variant={\"contained\"} className={styles.btn}>Sign in</Button>\n                </Form>\n              )}\n            </Formik>\n          </Paper>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  )\n}\n\nexport default LoginPage;","import LoginPage from './LoginPage';\nexport default LoginPage;\n","import {Grid, MenuItem, Typography} from \"@material-ui/core\";\nimport styles from \"./ShiftPicker.module.scss\";\nimport {Field} from \"formik\";\nimport {Select} from \"formik-material-ui\";\nimport React from \"react\";\n\n\nconst ShiftPicker = () => {\n  return (\n    <Grid item xs className={styles.row}>\n      <div>\n        <Typography variant={\"body1\"}>Shift start</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"startHour\">\n            {[...Array(24).keys()].map((number) => {\n              const num = number.toString().padStart(2, '0')\n              return <MenuItem key={number} value={num}>{num}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"h6\"}>:</Typography>\n          <Field component={Select} name=\"startMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n      <Typography variant={\"h4\"} style={{margin: '0 16px'}}>-</Typography>\n      <div>\n        <Typography variant={\"body1\"}>Shift end</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"endHour\">\n            {[...Array(23).keys()].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"body1\"}>:</Typography>\n          <Field component={Select} name=\"endMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n    </Grid>\n  )\n}\n\nexport default ShiftPicker;","import {Checkbox, TableCell, TableHead, TableRow, TableSortLabel} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction EnhancedTableHead(props) {\n  const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, type} = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {type && type !== 'noSelection' &&\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{'aria-label': 'select all desserts'}}\n          />\n        </TableCell>\n        }\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              disabled={headCell.sort === false}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number,\n  headCells: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['noSelection', 'selection'])\n};\n\nexport default EnhancedTableHead;\n","export function descendingComparator(a, b, orderBy) {\n  if (typeof a[orderBy] === 'string' && typeof b[orderBy] === 'string') {\n    if (a[orderBy] === undefined) return 1;\n    if (b[orderBy].toUpperCase() < a[orderBy].toUpperCase()) {\n      return -1;\n    }\n    if (b[orderBy].toUpperCase() > a[orderBy].toUpperCase()) {\n      return 1;\n    }\n    return 0;\n  } else {\n    if (a[orderBy] === undefined) return 1;\n\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport function handleClick(event, item, selected, setSelected) {\n  const selectedIndex = selected.indexOf(item);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selected, item);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selected.slice(1));\n  } else if (selectedIndex === selected.length - 1) {\n    newSelected = newSelected.concat(selected.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selected.slice(0, selectedIndex),\n      selected.slice(selectedIndex + 1),\n    );\n  }\n\n  setSelected(newSelected);\n}","import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TableRow,\n  Typography,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions, TablePagination,\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AddCircleOutline, VisibilityOutlined} from \"@material-ui/icons\";\nimport {createCleaner, getCleaners, getRooms} from \"../../utils/api\";\nimport styles from './CleanersPage.module.scss';\nimport * as Yup from \"yup\";\nimport {Formik, Form, Field} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\nimport moment from \"moment\";\nimport EnhancedTableHead from \"../../components/RoomSelector/EnhancedTableHead\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {getComparator, stableSort} from \"../../utils/tableUtils\";\n\nconst CleanersPage = () => {\n  const [cleaners, setCleaners] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([getCleaners(), getRooms(null, null, true)])\n      .then((responses) => {\n        setCleaners(responses[0]);\n        setRooms(responses[1]);\n        setIsLoaded(true);\n      }, (err) => {\n        console.log(err);\n      });\n  }, [setOpen, isLoaded])\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Cleaners</Typography>\n        <Tooltip title=\"Add cleaner\">\n          <IconButton onClick={() => setOpen(true)}>\n            <AddCircleOutline/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {isLoaded ? <CleanersTable cleaners={cleaners} rooms={rooms}/> :\n        <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <AddCleanerDialog open={open} setOpen={setOpen} setIsLoaded={setIsLoaded} setSnackOpen={setSnackOpen}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          Cleaner created\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required')\n});\n\nconst AddCleanerDialog = ({open, setOpen, setIsLoaded, setSnackOpen}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    startHour: '08',\n    endHour: '16',\n    startMinutes: '00',\n    endMinutes: '00'\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const cleaner = await createCleaner(`${vars.firstName} ${vars.lastName}`,\n      `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`,\n      `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`);\n    console.log(cleaner);\n    setIsLoaded(false);\n    setSubmitting(false);\n    setSnackOpen(true);\n    setOpen(false);\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create a new cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"First name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Last name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Create cleaner\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CleanersTable = ({cleaners, rooms}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [page, setPage] = React.useState(0);\n  const [cleanersPerPage, setCleanersPerPage] = React.useState(15);\n\n  const viewCleaner = (cleaner) => {\n    const id = cleaner['_id'];\n    history.push({\n      pathname: `/cleaners/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setCleanersPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getCleaningProgress = (cleaner) => {\n    const assignedRooms = rooms.filter((room) => {\n      return room['assigned_cleaners'].length > 0 && room['assigned_cleaners'][0]['_id'] === cleaner['_id'];\n    });\n    const today = moment();\n    const numCleaned = assignedRooms.filter((room) => {\n      if (!room['last_cleaned']) {\n        return false;\n      }\n      return moment(room['last_cleaned']).isSame(today, 'date');\n    }).length;\n    cleaner['cleaning_progress'] = (Math.round(((numCleaned / assignedRooms.length) * 100)) || 0) + '%';\n    return (\n      <Tooltip title={`${numCleaned}/${assignedRooms.length}`} placement={\"right\"}>\n        <Typography>{cleaner['cleaning_progress']}</Typography>\n      </Tooltip>\n    )\n  }\n\n  const getStatus = (cleaner) => {\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    cleaner.status = isBetween ? '' : 'Unavailable';\n    return cleaner.status;\n  }\n  const headCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name'},\n    {id: 'shift_start', numeric: true, disablePadding: false, label: 'Shift start'},\n    {id: 'shift_end', numeric: true, disablePadding: false, label: 'Shift end'},\n    {id: 'cleaning_progress', numeric: true, disablePadding: false, label: 'Cleaning progress'},\n    {id: 'current_location', numeric: true, disablePadding: false, label: 'Current location'},\n    {id: 'status', numeric: true, disablePadding: false, label: 'Status'},\n    {id: 'action', numeric: false, disablePadding: false, label: '', sort: false},\n  ];\n  return (\n    <Paper>\n      <TableContainer>\n        <Table size={'small'}>\n          <EnhancedTableHead classes={classes} onRequestSort={handleRequestSort} order={order} orderBy={orderBy}\n                             headCells={headCells}/>\n          <TableBody>\n            {stableSort(cleaners, getComparator(order, orderBy))\n              .slice(page * cleanersPerPage, page * cleanersPerPage + cleanersPerPage)\n              .map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    tabIndex={-1}\n                    key={labelId}\n                    style={{height: '33px'}}\n                  >\n                    <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                    <TableCell align=\"right\">{row['shift_start']}</TableCell>\n                    <TableCell align=\"right\">{row['shift_end']}</TableCell>\n                    <TableCell align=\"right\">{getCleaningProgress(row)}</TableCell>\n                    <TableCell align=\"right\">{}</TableCell>\n                    <TableCell align=\"right\">{getStatus(row)}</TableCell>\n                    <TableCell align=\"right\">\n                      <Tooltip title={\"View cleaner\"}>\n                        <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                          viewCleaner(row)\n                        }}><VisibilityOutlined/></IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 15, 25, 50]}\n        component=\"div\"\n        count={cleaners.length}\n        rowsPerPage={cleanersPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\n\nexport default CleanersPage;","import CleanersPage from './CleanersPage';\nexport default CleanersPage;\n","import React, {useEffect, useState} from 'react';\nimport {AppBar, Typography, Tabs, Toolbar as MaterialToolbar, Tab, IconButton, Icon} from \"@material-ui/core\";\nimport {Link, useLocation, matchPath, useHistory} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport styles from './Toolbar.module.scss';\nimport {\n  ArrowBackRounded, AssessmentRounded,\n  BusinessRounded,\n  DashboardRounded, ExitToApp,\n  FormatListBulletedRounded, Info,\n  PeopleRounded, Settings\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {getUser, logout} from \"../../utils/api\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport logo from \"../../assets/logo.png\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport PageContainer from \"../../containers/PageContainer\";\n\nconst NavTabs = withStyles({\n  root: {\n    width: '100%',\n    flexGrow: 1\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    marginBottom: '4px',\n    '& > span': {\n      width: '40%',\n      backgroundColor: '#00b0ff',\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n  }\n})((props) => <Tabs {...props} TabIndicatorProps={{children: <span/>}}/>);\n\nconst mountTabValueFactory = (location, tabId) => (route) => !!matchPath(location.pathname, {\n  path: route,\n  exact: false,\n  strict: false,\n}) ? tabId : -1;\n\nconst Toolbar = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const tabId = 'myTabId';\n  const getTabValue = mountTabValueFactory(location, tabId);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [user, setUser] = useState('');\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n  }, []);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position={\"static\"}>\n      <MaterialToolbar variant={\"dense\"}>\n        <div className={styles.toolbar}>\n          {location.pathname.split('/').length > 2 ? (\n            <Tooltip title={'Go Back'}>\n              <IconButton onClick={() => {\n                history.goBack()\n              }}>\n                <ArrowBackRounded className={styles.svg}/>\n              </IconButton>\n            </Tooltip>\n          ) : <div style={{width: 40}}/>}\n          <Typography variant={\"h6\"} className={styles.name}\n                      style={{display: \"flex\", flexDirection: 'row', width: '100%'}}>\n            <Icon style={{width: 36}}><img src={logo} alt=\"logo\" className={styles.logo}/></Icon>\n            Spotless\n          </Typography>\n        </div>\n        <NavTabs variant={\"fullWidth\"} value={tabId}>\n          <Tab label={<div className={styles.tab}><DashboardRounded fontSize={\"small\"}/> Dashboard</div>}\n               value={getTabValue(\"/dashboard\")} component={Link} to={\"/dashboard\"}\n               disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><FormatListBulletedRounded fontSize={\"small\"}/> Assignments</div>}\n               value={getTabValue(\"/assignments\")} component={Link} to={\"/assignments\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><PeopleRounded fontSize={\"small\"}/> Cleaners</div>}\n               value={getTabValue(\"/cleaners\")} component={Link} to={\"/cleaners\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><BusinessRounded fontSize={\"small\"}/> Rooms</div>}\n               value={getTabValue(\"/rooms\")} component={Link} to={\"/rooms\"} disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><AssessmentRounded fontSize={\"small\"}/> Analysis</div>}\n               value={getTabValue(\"/analysis\")} component={Link} to={\"/analysis\"}\n               disableRipple={true} className={styles.tab}/>\n        </NavTabs>\n        <Tooltip title={\"Open menu\"}>\n          <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <MenuIcon color={\"secondary\"}/>\n          </IconButton>\n        </Tooltip>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {user.superAdmin &&\n          <MenuItem onClick={() => {\n            handleClose();\n            history.push('/simulator');\n          }}>\n            <ListItemIcon>\n              <Settings fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Simulator\"/>\n          </MenuItem>}\n          <MenuItem onClick={() => {\n            setOpen(true);\n            handleClose();\n          }}>\n            <ListItemIcon>\n              <Info fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"About\"/>\n          </MenuItem>\n          <MenuItem onClick={() => {\n            handleClose();\n            logout();\n            history.push('/');\n          }}>\n            <ListItemIcon>\n              <ExitToApp color={\"secondary\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Sign out\"/>\n          </MenuItem>\n\n        </Menu>\n        <AboutDialog open={open} setOpen={setOpen}/>\n      </MaterialToolbar>\n    </AppBar>\n  );\n}\n\nconst AboutDialog = ({open, setOpen}) => {\n\n  const handleConfirmClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleConfirmClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{\"About the app\"}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\" color=\"textPrimary\">\n          <p>\n            The LeViteZer hospital room cleaning optimization solution aims to reduce hospital infection risk by\n            optimizing the hospital room cleaning. The contamination of the rooms is tracked real time and the cleaning\n            prioritized based on need.\n          </p>\n\n          <p>\n            Realtime data of space usage is visualized in the Cleaner application. On top of a room layout the most used\n            areas are visualized to provide the cleaner with simple and intuitive information on areas that need the\n            most attention. The application also track the cleaning event to make sure all areas has been cleaned and\n            then automatically generate a report with minimal interaction by cleaner. The guiding line on the design has\n            been to keep it simple, provide only useful information and assist on making the cleaning report.\n          </p>\n\n          <p>\n            The Management application supports efficient resource management and planning in case of changes in\n            staffing or reallocation of time and resources. Furthermore, It displays data from the hospital in real time\n            and offers tools to verify & track cleaning efficiency. The application also presents detailed information\n            about rooms and their generated cleaning reports.\n          </p>\n\n          <p>\n            Spotless is working name for the applications. The status of the applications is for demonstration purpose\n            and for this purpose there is also a simple hospital contamination simulator as we currently only have few\n            locations equipped with the sensors. LeViteZer supports the use of the demonstrator. Comments and\n            improvement proposals are most welcome\n            <address>\n              <a href=\"mailto:kim.janson@levitezer.com\">kim.janson@levitezer.com</a>\n            </address>\n          </p>\n\n          <p>\n            The Spotless management and cleaners applications have been developed in Metropolia University of Applied\n            Sciences, innovation project supervised and supported by LeViteZer and in co-operation with Sodexo.\n          </p>\n\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => {\n          handleConfirmClose();\n        }} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default Toolbar;","import Toolbar from './Toolbar';\nexport default Toolbar;","import CleaningsByCleaner from './CleaningsByCleaner';\nexport default CleaningsByCleaner;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Bar, BarChart\n} from 'recharts';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./CleaningsByCleaner.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\n\nconst CleaningsByCleaner = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return report['cleaner_name'];\n  })\n  const counts = {};\n  data.forEach((x) => {\n    counts[x] = (counts[x] || 0) + 1;\n  });\n  const formattedReports = [];\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      cleaner: x,\n      amount: counts[x]\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Cleanings per cleaner</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning events</Typography>\n                :\n                <BarChart data={formattedReports}>\n                  <XAxis dataKey=\"cleaner\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Bar dataKey=\"amount\" name=\"Cleaning events\" fill=\"#8884d8\"/>\n                </BarChart>\n              }\n\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nCleaningsByCleaner.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default CleaningsByCleaner;","import ContaminationIndexOverTime from './ContaminationIndexOverTime';\nexport default ContaminationIndexOverTime;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line\n} from 'recharts';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./ContaminationIndexOverTime.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\nimport moment from \"moment\";\n\nconst getContaminationIndex = (val) => {\n  if (val > 150) {\n    return 150;\n  } else if (val < 0) {\n    return 0;\n  } else {\n    return val;\n  }\n}\n\nconst ContaminationIndexOverTime = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return moment(report['cleaning_time']).format('DD.MM.YYYY');\n  });\n  const counts = {};\n  data.forEach((x) => {\n    const date = moment(x, 'DD.MM.YYYY');\n    counts[x] = reports.filter((report) => {\n      return moment(report['cleaning_time']).isSame(date, 'date');\n    });\n  });\n\n  const formattedReports = [];\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      date: x,\n      contamination: Math.round(counts[x].reduce((acc, report) => {\n        return acc + getContaminationIndex(report['contamination_index']);\n      }, 0) / counts[x].length)\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Contamination index (before cleaning) over time</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning\n                  events</Typography>\n                :\n                <LineChart data={formattedReports}>\n                  <XAxis dataKey=\"date\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Line type=\"monotone\" dataKey=\"contamination\" name=\"Contamination index\" stroke=\"#8884d8\"\n                        strokeWidth={2}/>\n                </LineChart>\n              }\n\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nContaminationIndexOverTime.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default ContaminationIndexOverTime;","import CleaningDuration from './CleaningDuration';\nexport default CleaningDuration;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar\n} from 'recharts';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./CleaningDuration.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\nimport {ROOM_TYPES} from \"../../../utils/constants\";\n\nconst CleaningDuration = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return report.room && report.room['room_type'];\n  })\n  const counts = {};\n  data.forEach((x) => {\n    counts[x] = reports.filter((report) => {\n      if (typeof x === 'undefined') {\n        return x === report.room;\n      } else {\n        if (!report.room) {\n          return false;\n        }\n        return x === report.room['room_type'];\n      }\n    });\n  });\n  const formattedReports = [];\n  const und = counts['undefined'];\n  if (und) {\n    formattedReports.push({\n      type: 'No type',\n      amount: Math.round(und.reduce((acc, report) => {\n        return acc + report['cleaning_duration_seconds'];\n      }, 0) / und.length),\n      estimated: 0\n    });\n    delete counts['undefined'];\n  }\n\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      type: ROOM_TYPES[x].displayName,\n      amount: Math.round(counts[x].reduce((acc, report) => {\n        return acc + report['cleaning_duration_seconds'];\n      }, 0) / counts[x].length),\n      estimated: ROOM_TYPES[x].cleaningTime * 60\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Cleaning duration by room type</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning\n                  events</Typography>\n                :\n                <BarChart data={formattedReports}>\n                  <XAxis dataKey=\"type\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Bar dataKey=\"amount\" name=\"Actual time\" fill=\"#8884d8\" unit=\" seconds\"/>\n                  <Bar dataKey=\"estimated\" name=\"Estimated time\" fill=\"#82ca9d\" unit=\" seconds\"/>\n                </BarChart>\n              }\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nCleaningDuration.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default CleaningDuration;","import AnalysisPage from './AnalysisPage';\nexport default AnalysisPage;\n","import React, {useEffect, useState} from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport CleaningsByCleaner from \"../../components/Charts/CleaningsByCleaner\";\nimport {getReports, getRooms} from \"../../utils/api\";\nimport ContaminationIndexOverTime from \"../../components/Charts/ContaminationIndexOverTime\";\nimport CleaningDuration from \"../../components/Charts/CleaningDuration\";\n\nconst AnalysisPage = () => {\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(() => {\n    Promise.all([getRooms(), getReports()])\n      .then((result) => {\n        result[1].forEach((report) => {\n          report.room = result[0].find((room) => {\n            return room['_id'] === report['room_id'];\n          });\n        })\n        setRooms(result[0]);\n        setReports(result[1]);\n        setLoading(false);\n      });\n  }, []);\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h5\"} style={{marginBottom: 16}}>Analysis</Typography>\n      <Grid container spacing={4} style={{marginBottom: 16}}>\n        <Grid item xs={12}>\n          <ContaminationIndexOverTime reports={reports} loading={loading}/>\n        </Grid>\n        <Grid item xs={6}>\n          <CleaningsByCleaner reports={reports} loading={loading}/>\n        </Grid>\n        <Grid item xs={6}>\n          <CleaningDuration reports={reports} loading={loading}/>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  )\n}\n\nexport default AnalysisPage;","import React, {useEffect, useState} from \"react\";\nimport hospitalImg from \"../../assets/hospital.png\";\nimport styles from \"./RoomsPage.module.scss\";\nimport ImageMapper from 'react-image-mapper';\nimport {HOSPITAL_MAP} from \"../../utils/constants\";\nimport {useHistory} from \"react-router-dom\";\nimport {getRoomTypeProp, getVariantColor, hexToRgb} from \"../../utils/utils\";\nimport {Typography} from \"@material-ui/core\";\n\nconst initMap = (rooms) => {\n  let map = {};\n  map = JSON.parse(JSON.stringify(HOSPITAL_MAP));\n  rooms.forEach((room, index) => {\n    const area = map.areas[index];\n    if (!area) {\n      return;\n    }\n    const color = hexToRgb(getVariantColor(room['contamination_index']));\n    area.preFillColor = `rgba(${color.r}, ${color.g}, ${color.b}, 0.5)`\n    area['_id'] = room['_id'];\n    area.room = room;\n  });\n  return map;\n}\n\nconst RoomsMap = ({rooms}) => {\n  const history = useHistory();\n  const [hovering, setHovering] = useState(false);\n  const [room, setRoom] = useState({});\n  const [hoverStyle, setHoverStyle] = useState({});\n  const [map, setMap] = useState({});\n  const [ignored, forceUpdate] = useState(642);\n\n  useEffect(() => {\n    setMap(initMap(rooms));\n    forceUpdate(i => i === 642 ? 643 : 642);\n  }, [rooms, setMap])\n\n  const click = (area, num, event) => {\n    const id = area['_id'];\n    if (!id) {\n      return;\n    }\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const enter = (area, index, event) => {\n    if (area.room) {\n      const style = {\n        top: event.pageY,\n        left: event.pageX\n      }\n      setHovering(true);\n      setRoom(area.room);\n      setHoverStyle(style);\n    }\n  }\n\n  const width = window.innerWidth / 2.1;\n\n  return (\n    <>\n      {Object.keys(map).length !== 0 &&\n      <div className={styles.map}>\n        <ImageMapper src={hospitalImg}\n                     map={map}\n                     fillColor={'rgba(0,0,0, 0.2)'}\n                     onClick={click}\n                     width={width}\n                     imgWidth={ignored}\n                     onMouseEnter={enter}\n                     onMouseLeave={() => {\n                       setHovering(false);\n                       setRoom({});\n                       setHoverStyle({});\n                     }}\n        />\n      </div>\n      }\n      {hovering &&\n      <div id=\"info\" className={styles.roomInfo} style={hoverStyle}>\n        <Typography variant={\"h6\"} className={styles.bold}>Room: {room.name}</Typography>\n        <Typography variant={\"body1\"}>{getRoomTypeProp(room, 'displayName')}</Typography>\n        <Typography variant={\"body1\"} color={\"textSecondary\"}>Contamination Index: <span\n          style={{color: getVariantColor(room['contamination_index'])}}>{room['contamination_index'].toFixed(1)}</span>\n        </Typography>\n      </div>\n      }\n    </>\n  )\n}\n\nexport default RoomsMap;","import React, {useEffect} from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {ROOM_TYPES} from \"../../utils/constants\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport PropTypes from \"prop-types\";\n\nconst TableFilters = ({rooms, setRooms, initialBuilding, initialFloor, hideAll, hideAssigned}) => {\n  const [building, setBuilding] = React.useState(initialBuilding || '');\n  const [floor, setFloor] = React.useState(initialFloor || '');\n  const [roomType, setRoomType] = React.useState('');\n  const [assigned, setAssigned] = React.useState(true);\n  const [filters, setFilters] = React.useState(true);\n\n  useEffect(() => {\n    if (filters) {\n      let filtered = rooms;\n      filtered = filtered.filter((room) => {\n        let valid = true;\n        if (building) {\n          valid = room.building === building;\n        }\n        if (floor) {\n          valid = room.floor === floor && valid;\n        }\n        if (roomType) {\n          valid = room['room_type'] === roomType.key && valid;\n        }\n        if (!hideAssigned && !assigned) {\n          valid = room['assigned_cleaners'].length === 0 && valid;\n        }\n        return valid;\n      });\n      setRooms(filtered);\n      setFilters(false);\n    }\n  }, [assigned, building, floor, roomType, filters, rooms, setRooms, hideAssigned])\n  const getBuildings = () => {\n    return [...new Set(rooms.map(room => {\n      return room.building;\n    }))].sort();\n  };\n\n  const getFloors = () => {\n    return [...new Set(rooms.map(room => {\n      return room.floor;\n    }))].sort();\n  }\n  return (\n    <>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"building\">Building</InputLabel>\n        <Select label=\"Building\" onChange={(event) => {\n          setBuilding(event.target.value);\n          setFilters(true);\n        }} value={building}>\n          {!hideAll &&\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>}\n          {getBuildings().map(building => (\n            <MenuItem value={building} key={building}>{building}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"floor\">Floor</InputLabel>\n        <Select label=\"Floor\" onChange={(event) => {\n          setFloor(event.target.value);\n          setFilters(true);\n        }} value={floor}>\n          {!hideAll &&\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          }\n          {getFloors().map(floor => (\n            <MenuItem value={floor} key={floor}>{floor}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"room-type\">Room type</InputLabel>\n        <Select label=\"Room type\" onChange={(event) => {\n          setRoomType(event.target.value);\n          setFilters(true);\n        }} value={roomType}>\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          {Object.keys(ROOM_TYPES).map(type => (\n            <MenuItem value={ROOM_TYPES[type]}\n                      key={ROOM_TYPES[type].displayName}>{ROOM_TYPES[type].displayName}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      {!hideAssigned &&\n      <FormControlLabel control={<Checkbox checked={assigned} onChange={(event, checked) => {\n        setAssigned(checked);\n        setFilters(true);\n      }}/>} label=\"Show assigned\"/>}\n    </>\n  );\n}\n\nTableFilters.propTypes = {\n  rooms: PropTypes.array.isRequired,\n  setRooms: PropTypes.func.isRequired,\n  initialBuilding: PropTypes.string,\n  initialFloor: PropTypes.string,\n  hideAll: PropTypes.bool,\n  hideAssigned: PropTypes.bool\n}\n\nexport default TableFilters;","import RoomsPage from './RoomsPage';\nexport default RoomsPage;\n","import React, {useEffect, useState} from 'react';\nimport {getRooms} from \"../../utils/api\";\nimport {Typography} from \"@material-ui/core\";\nimport styles from \"./RoomsPage.module.scss\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport RoomsMap from \"./RoomsMap\";\nimport TableFilters from \"../AssignmentsPage/TableFilters\";\n\nconst RoomsPage = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n\n  useEffect(() => {\n    getRooms()\n      .then((rooms) => {\n          setRooms(rooms);\n          setOrigRooms(rooms);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }, []);\n\n  return (\n    <PageContainer>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Rooms</Typography>\n        {isLoaded &&\n        <div className={styles.filters}>\n          <TableFilters rooms={origRooms} setRooms={setRooms} hideAll={true} hideAssigned={true} initialBuilding={rooms[0] && rooms[0].building} initialFloor={rooms[0] && rooms[0].floor}/>\n        </div>\n        }\n      </div>\n      {isLoaded &&\n      <RoomsMap rooms={rooms}/>\n      }\n      {error && <p>ERROR</p>}\n    </PageContainer>\n  )\n}\n\nexport default RoomsPage;","import CleanerSelect from './CleanerSelect';\nexport default CleanerSelect;","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {getCleaners} from \"../../utils/api\";\nimport styles from \"./CleanerSelect.module.scss\";\n\nconst CleanerSelect = ({onChange, style}) => {\n  const [options, setOptions] = useState([]);\n  const [openSelect, setOpenSelect] = useState(false);\n  const [cleaner, setCleaner] = useState(null);\n  const loading = openSelect && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const clnrs = await getCleaners();\n\n      if (active) {\n        setOptions(clnrs);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  const onSelectChange = (event, newValue) => {\n    setCleaner(newValue);\n    onChange(event, newValue);\n  }\n\n  return (\n    <Autocomplete\n      open={openSelect}\n      onOpen={() => {\n        setOpenSelect(true);\n      }}\n      onClose={() => {\n        setOpenSelect(false);\n      }}\n      className={styles.autocomplete}\n      style={style}\n      getOptionLabel={(option) => option.name || ''}\n      options={options}\n      loading={loading}\n      value={cleaner}\n      onChange={onSelectChange}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Cleaner\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nCleanerSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  style: PropTypes.object\n}\n\nexport default CleanerSelect;","import React, {useState} from \"react\";\nimport {assignRoomsToCleaner, unAssignRooms} from \"../../utils/api\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\n\nexport const AssignCleanerDialog = ({open, setOpen, selected, setSnackOpen, onClose, setSnackText}) => {\n  const [cleaner, setCleaner] = useState(null);\n\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const handleSubmit = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n    handleClose();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}>\n      <DialogTitle id=\"form-dialog-title\">Select a cleaner</DialogTitle>\n      <DialogContent>\n        <CleanerSelect onChange={(event, newValue) => {\n          setCleaner(newValue)\n        }}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleSubmit} disabled={cleaner === ''}>\n          Assign\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport {getRooms, unAssignRooms} from \"../../utils/api\";\nimport {VisibilityOutlined, FilterList, Close} from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport styles from \"./AssignmentsPage.module.scss\"\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {AssignCleanerDialog} from \"./AssignCleanerDialog\";\nimport Link from \"@material-ui/core/Link\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport {getRoomTypeProp, getStatus, mergeCleaners} from \"../../utils/utils\";\nimport TableFilters from \"./TableFilters\";\nimport EnhancedTableHead from \"../../components/RoomSelector/EnhancedTableHead\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner_name', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: '', sort: false},\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left',\n    flexDirection: 'column'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  filters: {\n    minHeight: 96\n  },\n  button: {\n    minWidth: 160\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, selected, setSelected, setSnackOpen, setSnackText, getData, rooms, setRooms} = props;\n  const [open, setOpen] = React.useState(false);\n  const [filter, showFilters] = React.useState(false);\n  const selectedWithCleaner = selected.filter((room) => {\n    return room['assigned_cleaners'].length > 0;\n  });\n\n  const removeAssignments = async () => {\n    await unAssignRooms(selectedWithCleaner);\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n    setSelected([]);\n    getData(true);\n  }\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n        [classes.filters]: filter && numSelected === 0\n      })}\n    >\n      <div className={styles.row} style={{minHeight: 64}}>\n        {numSelected > 0 ? (\n          <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                      style={{fontWeight: 600}}>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}\n                      title=\"Click on row to select a room\">\n            Select rows to assign to cleaner\n          </Typography>\n        )}\n        {numSelected > 0 ? (\n          <>\n            {selectedWithCleaner.length > 0 &&\n            <Tooltip title=\"Remove room assignments\">\n              <Button variant={'contained'} startIcon={<Close/>} className={styles.critical}\n                      style={{flexBasis: '300px', marginRight: 32}} onClick={removeAssignments}>Remove assignments\n              </Button>\n            </Tooltip>\n            }\n            <Tooltip title=\"Assign to cleaner\">\n              <Button variant={'contained'} color={'secondary'} style={{flexBasis: '180px'}} onClick={() => {\n                setOpen(true);\n              }}>Assign rooms</Button>\n            </Tooltip>\n          </>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <Button\n              variant=\"contained\"\n              className={classes.button}\n              startIcon={<FilterList color={filter ? 'secondary' : 'primary'}/>}\n              onClick={() => {\n                showFilters(!filter);\n              }}\n            >\n              {filter ? 'Hide filters' : 'Show filters'}\n            </Button>\n          </Tooltip>\n        )}\n      </div>\n      {filter && numSelected === 0 &&\n      <div className={styles.row}>\n        <TableFilters rooms={rooms} setRooms={setRooms}/>\n      </div>\n      }\n      <AssignCleanerDialog open={open} setOpen={setOpen} selected={selected} onClose={() => {\n        setSelected([]);\n        getData(true);\n      }} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function AssignmentsPage() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(15);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n  const [data, getData] = React.useState(true);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    if (data) {\n      getRooms(null, null, true)\n        .then((rooms) => {\n            rooms = mergeCleaners(rooms);\n            setRooms(rooms);\n            setOrigRooms(rooms);\n            setIsLoaded(true);\n            getData(false);\n          },\n          (error) => {\n            setIsLoaded(true);\n            console.log(error);\n          });\n    }\n  }, [data]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  const getCleaner = (row) => {\n    if (!row.cleaner) {\n      return row['cleaner_name'];\n    }\n    const cleaner = row.cleaner;\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${cleaner['_id']}`,\n                    state: {id: cleaner['_id']}\n                  }}>\n      {cleaner.name}\n    </Link>);\n  }\n\n  return (\n    <PageContainer className={classes.root}>\n      {isLoaded ?\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSnackOpen={setSnackOpen}\n                                setSelected={setSelected} setSnackText={setSnackText} getData={getData}\n                                rooms={origRooms} setRooms={setRooms}/>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rooms.length}\n                headCells={headCells}\n                type={\"selection\"}\n              />\n              <TableBody>\n                {stableSort(rooms, getComparator(order, orderBy))\n                  .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row, selected, setSelected)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{'aria-labelledby': labelId}}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.building}</TableCell>\n                        <TableCell align=\"right\">{row.floor}</TableCell>\n                        <TableCell>{getCleaner(row)}</TableCell>\n                        <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                        <TableCell align=\"right\">{Math.min(row['contamination_index'].toFixed(2), 150)} %</TableCell>\n                        <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                        <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <Tooltip title={\"View room\"}>\n                            <IconButton color={\"secondary\"} size={\"small\"}\n                                        onClick={() => {\n                                          openRoom(row)\n                                        }}>\n                              <VisibilityOutlined/>\n                            </IconButton>\n                          </Tooltip>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15, 25, 50]}\n            component=\"div\"\n            count={rooms.length}\n            rowsPerPage={roomsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n","import AssignmentsPage from './AssignmentsPage';\nexport default AssignmentsPage;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport {Divider, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\n\nconst RoomDetailsCard = ({room}) => {\n\n  const getVariant = (contamination) => {\n    let variant = 'neutral';\n    if (contamination >= 60) {\n      variant = 'critical';\n    } else if (contamination >= 30) {\n      variant = 'med';\n    } else if (contamination < 30) {\n      variant = 'good';\n    }\n    return variant;\n  }\n\n  const getIndex = (index) => {\n    return Math.min(index, 150).toFixed(2);\n  }\n  return (\n    <Card className={styles.card}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold}>Room details</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <Typography variant={\"body1\"} className={styles.semiBold}>Building {room.building}</Typography>\n        <Typography variant={\"body2\"} className={styles.medium} color=\"textSecondary\">Floor {room.floor}</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>{getRoomTypeProp(room, 'displayName')}</Typography>\n          <Typography\n            variant={\"body2\"}\n            className={styles.semiBold}>\n            Cleaning time: {getRoomTypeProp(room, 'cleaningTime')} min\n          </Typography>\n        </div>\n        <Typography variant={\"body2\"} className={styles.medium}\n                    color=\"textSecondary\">Cleaning {getRoomTypeProp(room, 'frequency')} times / week\n        </Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>Contamination index</Typography>\n          <Typography variant={\"body1\"}\n                      className={[styles[getVariant(room['contamination_index'])], styles.medium].join(' ')}>{getIndex(room['contamination_index'])}%</Typography>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nRoomDetailsCard.propTypes = {\n  room: PropTypes.object.isRequired\n}\n\nexport default RoomDetailsCard;","import React, {useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport StatusDot from \"../../components/StatusDot\";\nimport PropTypes from 'prop-types';\nimport {Button, IconButton, Typography} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\nimport moment from \"moment\";\nimport {ClearOutlined} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {assignRoom, unAssignRoom} from \"../../utils/api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\n\nconst RoomCleanerCard = ({room, cleaner, setCleaner}) => {\n  const [newCleaner, setNewCleaner] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n\n  const hasCleaner = Object.keys(cleaner).length !== 0;\n  const getColor = () => {\n    if (!hasCleaner) return 'neutral';\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    return isBetween ? 'good' : 'critical';\n  }\n\n  const removeCleanerAssignment = async () => {\n    await unAssignRoom(room['_id'], cleaner['_id']);\n    setCleaner({});\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n  }\n\n  const assignNewCleaner = async () => {\n    await assignRoom(room['_id'], newCleaner['_id']);\n    setCleaner(newCleaner);\n    setNewCleaner({});\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <Card className={styles.card} style={{height: 'min-content'}}>\n      <div className={styles.cardContent}>\n        <div className={styles.row}>\n          <StatusDot variant={getColor()} size={'tiny'} tooltip={'Cleaner name'}/>\n          {hasCleaner ? (\n              <>\n                <Link component={RouterLink} style={{marginLeft: 16}} color=\"secondary\"\n                      to={{\n                        pathname: `/cleaners/${cleaner['_id']}`,\n                        state: {id: cleaner['_id']}\n                      }}>\n                  <Typography variant={'h6'} className={styles.semiBold}>{cleaner.name}</Typography>\n                </Link>\n                <Tooltip title=\"Remove assignment\">\n                  <IconButton style={{marginLeft: 'auto'}} size={\"small\"} onClick={removeCleanerAssignment}>\n                    <ClearOutlined/>\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n            :\n            <CleanerSelect onChange={(event, newValue) => setNewCleaner(newValue)} style={{marginLeft: 16}}/>\n          }\n        </div>\n        {newCleaner && Object.keys(newCleaner).length !== 0 && (\n          <>\n            <Divider className={styles.divider}/>\n            <div className={styles.row}>\n              <Button onClick={assignNewCleaner} variant={\"contained\"} color={\"secondary\"}\n                      className={styles.btn}>Assign</Button>\n            </div>\n          </>\n        )}\n      </div>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>{snackText}</Alert>\n      </Snackbar>\n    </Card>\n  )\n}\n\nRoomCleanerCard.propTypes = {\n  room: PropTypes.object.isRequired,\n  cleaner: PropTypes.object\n}\n\nexport default RoomCleanerCard;","import React from 'react';\nimport styles from './RoomDetailsPage.module.scss';\nimport {Divider, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    lineHeight: '200%'\n  },\n});\nconst CommentsList = ({reports}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={styles.comments}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold} style={{marginBottom: 16}}>Cleaner comments:</Typography>\n        {reports.length > 0 ? (\n          reports.reduce((result, report) => {\n            const showReport = report.comments !== '';\n            if (showReport) {\n              const time = moment(report['cleaning_time']);\n              result.push(\n                <div key={report['_id']} className={styles.comment}>\n                  <Divider />\n                  <Typography variant={\"h6\"} className={classes.root}>{time.format('D MMM, YYYY')}</Typography>\n                  <Typography variant={\"h6\"} className={[styles.semiBold, styles.author, classes.root].join(' ')}>{report['cleaner_name']}</Typography>\n                  <Typography variant={\"body1\"} className={classes.root}>{report.comments}</Typography>\n                </div>\n              );\n            }\n            return result;\n          }, [])\n        ) :\n        <Typography variant={\"body1\"} className={styles.semiBold}>No comments</Typography>\n        }\n      </div>\n    </Card>\n  );\n}\n\nexport default CommentsList;","import React from \"react\";\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TablePagination,\n  TableRow, Tooltip,\n  Typography\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {Check, CloseRounded, VisibilityOutlined} from \"@material-ui/icons\";\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\nimport moment from \"moment\";\nimport styles from './CleaningReportTable.module.scss';\nimport Link from \"@material-ui/core/Link\";\nimport PropTypes from 'prop-types';\nimport {getComparator, stableSort} from \"../../utils/tableUtils\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport EnhancedTableHead from \"../RoomSelector/EnhancedTableHead\";\n\nfunction ReportsTableHead(props) {\n  const {classes, order, orderBy, onRequestSort, type} = props;\n  const headCells = [\n    {id: 'cleaning_time', numeric: true, disablePadding: false, label: 'Cleaning time'},\n    {id: 'cleaning_successful', numeric: false, disablePadding: false, label: 'Cleaning successful'},\n    {id: 'action', numeric: true, disablePadding: false, label: '', sort: false},\n  ];\n  if (type === 'room') {\n    headCells.unshift({id: 'cleaner', numeric: false, disablePadding: false, label: 'Cleaner'});\n  } else {\n    headCells.unshift({id: 'room', numeric: false, disablePadding: false, label: 'Room'});\n  }\n\n  return (\n    <EnhancedTableHead\n      classes={classes}\n      order={order}\n      orderBy={orderBy}\n      onRequestSort={onRequestSort}\n      headCells={headCells}\n    />\n  );\n}\n\nReportsTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['room', 'cleaner']).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CleaningReportsTable = ({reports, type}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('cleaning_time');\n  const [page, setPage] = React.useState(0);\n  const [reportsPerPage, setReportsPerPage] = React.useState(10);\n  const viewReport = (report) => {\n    const id = report['_id'];\n    history.push({\n      pathname: `/rooms/reports/${id}`,\n      state: {id}\n    })\n  }\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good}/>) : (<CloseRounded color={\"error\"}/>);\n  }\n\n  const getCleaner = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n      {report['cleaner_name']}\n    </Link>);\n  }\n\n  const getRoom = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/rooms/${report['room_id']}`,\n                    state: {id: report['room_id']}\n                  }}>\n      {report['room_name']}\n    </Link>);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setReportsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <Typography variant={\"h5\"} style={{margin: '16px 0'}} className={styles.semiBold}>Past cleaning\n        reports</Typography>\n      {reports.length > 0 ?\n        <Paper className={classes.paper}>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <ReportsTableHead\n                classes={classes}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                type={type}\n              />\n              <TableBody>\n                {stableSort(reports, getComparator(order, orderBy))\n                  .slice(page * reportsPerPage, page * reportsPerPage + reportsPerPage)\n                  .map((row, index) => {\n                    const labelId = `enhanced-table-checkbox-${index}`;\n                    return (\n                      <TableRow\n                        hover\n                        tabIndex={-1}\n                        key={labelId}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell component=\"th\" id={labelId} scope=\"row\">\n                          {type === 'room' ? getCleaner(row) : getRoom(row)}\n                        </TableCell>\n                        <TableCell align=\"right\">{moment(row['cleaning_time']).format('DD.MM.YYYY HH:mm')}</TableCell>\n                        <TableCell>{getIcon(row['cleaning_succesful'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <Tooltip title={\"View report\"}>\n                            <IconButton color={\"secondary\"} size={\"small\"}\n                                        onClick={() => {\n                                          viewReport(row)\n                                        }}>\n                              <VisibilityOutlined/>\n                            </IconButton>\n                          </Tooltip>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={reports.length}\n            rowsPerPage={reportsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <Typography variant={\"h6\"}>No cleaning Reports</Typography>\n      }\n    </div>\n  );\n}\nCleaningReportsTable.propTypes = {\n  reports: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['cleaner', 'room']).isRequired\n}\nexport default CleaningReportsTable;","import React, {PureComponent} from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line\n} from 'recharts';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./ActivityGraph.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport {LTTB} from \"downsample/methods/LTTB\";\n\nfunction pad(n) {\n  return n < 10 ? '0' + n : n\n}\n\nconst ActivityGraph = ({activity, lastCleaned, loading, title, type}) => {\n  type = type || 'room';\n  let formattedData = [];\n  if (activity && lastCleaned) {\n    let start = moment(lastCleaned).valueOf();\n    const step = 20000;\n    if (type === 'room') {\n      formattedData.push({\n        y: activity[0],\n        x: new Date(start)\n      });\n      for (let i = 1; i < activity.length; i++) {\n        formattedData.push({\n          y: activity[i],\n          x: new Date(start + step * i)\n        });\n      }\n    } else {\n      start = start - step * activity.length;\n      for (let i = 0; i < activity.length; i++) {\n        formattedData.push({\n          y: activity[i],\n          x: new Date(start + step * i)\n        });\n      }\n    }\n    formattedData = LTTB(formattedData, 400);\n    formattedData.forEach((point) => {\n      point.x = pad(point.x.getHours()) + ':' + pad(point.x.getMinutes());\n    });\n  }\n  return (\n    <div style={{margin: '16px 0 32px'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>{title || 'Room activity since last cleaning'}</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedData.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No data</Typography>\n                :\n                <LineChart data={formattedData}>\n                  <XAxis dataKey=\"x\" label={{\n                    value: moment(lastCleaned).format('DD.MM.YY'),\n                    position: 'insideBottomLeft',\n                    offset: -20\n                  }} tick={<CustomizedAxisTick/>} height={48}/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Line type=\"monotone\" dataKey=\"y\" name=\"Activity\" stroke=\"#8884d8\"\n                        strokeWidth={2}/>\n                </LineChart>\n              }\n\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nclass CustomizedAxisTick extends PureComponent {\n  render() {\n    const {\n      x, y, payload,\n    } = this.props;\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text x={0} y={0} dy={16} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-35)\">{payload.value}</text>\n      </g>\n    );\n  }\n}\n\nActivityGraph.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  activity: PropTypes.array.isRequired,\n  lastCleaned: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  type: PropTypes.oneOf(['report', 'room'])\n};\n\nexport default ActivityGraph;","import ActivityGraph from './ActivityGraph';\nexport default ActivityGraph;","import RoomDetailsPage from './RoomDetailsPage';\nexport default RoomDetailsPage;","import React, {useEffect, useState} from \"react\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport {Button, Typography} from \"@material-ui/core\";\nimport {getAssignedCleaners, getFloorplan, getReports, getRoom, getRoomHeatmap} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport RoomDetailsCard from \"./RoomDetailsCard\";\nimport RoomCleanerCard from \"./RoomCleanerCard\";\nimport CommentsList from \"./RoomReportComments\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable/CleaningReportsTable\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ActivityGraph from \"../../components/Charts/ActivityGraph\";\n\nconst RoomDetailsPage = () => {\n  const history = useHistory();\n  const params = useParams();\n  const [roomLoaded, setRoomLoaded] = useState(false);\n  const [room, setRoom] = useState({});\n  const [reports, setReports] = useState([]);\n  const [cleaner, setCleaner] = useState({});\n  const [image, setImage] = useState('');\n  const [showMap, setShowMap] = useState(false);\n  const [showActivity, setShowActivity] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getRoom(params.id)\n      .then((room) => {\n          setRoom(room);\n          setRoomLoaded(true);\n        },\n        (error) => console.log(error));\n    getAssignedCleaners(params.id)\n      .then((cleaners) => {\n        if (cleaners.length >= 1) {\n          setCleaner(cleaners[0]);\n        }\n      }, (error) => console.log(error));\n    getReports(params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n    getFloorplan(params.id).then((img) => {\n      setImage(URL.createObjectURL(img));\n    }).catch((err) => {\n      console.log(err)\n    })\n  }, [params.id]);\n\n  useEffect(() => {\n    if (showMap) {\n      getRoomHeatmap(params.id, 'contamination')\n        .then((response) => {\n          const aux = document.getElementById('aux');\n          const canvas = document.getElementById('main');\n          let scaler = 1n;\n          if (room['is_simulated']) {\n            if (room['contamination_index'] >= 60) {\n              scaler = 20n;\n            } else if (room['contamination_index'] >= 30) {\n              scaler = 10n;\n            } else {\n              scaler = 5n;\n            }\n          }\n          // eslint-disable-next-line no-undef\n          update_img(response, aux, canvas, scaler);\n          canvas.style.height = canvas.offsetWidth / (72/56) + 'px';\n        })\n        .catch((err) => {\n          setShowMap(false);\n          console.log(err.message)\n          setErrorMsg(err.message);\n          setError(true);\n        })\n    }\n  }, [params.id, room, showMap])\n  const navigateToMap = () => {\n    history.push({\n      pathname: `/rooms`,\n      state: {id: params.id, action: 'show'}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(false);\n    setShowMap(false);\n  };\n\n  const disableActivity = (room) => {\n    if (!room['between_cleaning_plot']) {\n      return true;\n    }\n    return !room['last_cleaned'] && !room['cleaning_end_time'];\n  }\n\n  return (\n    <PageContainer style={{width: '65%'}}>\n      {roomLoaded ? (\n        <>\n          <div className={styles.titleRow}>\n            <Typography variant={\"h4\"}>Room: {room.name}</Typography>\n            <Button variant={\"text\"} onClick={navigateToMap} size={\"small\"}>Show on map</Button>\n          </div>\n          <div className={styles.content}>\n            <div className={styles.detailsRow}>\n              <RoomDetailsCard room={room}/>\n              <RoomCleanerCard room={room} cleaner={cleaner} setCleaner={setCleaner}/>\n            </div>\n            <div className={styles.row} style={{marginTop: 32}}>\n              <Typography variant={\"h5\"}>Room map</Typography>\n              <Button variant={\"outlined\"} color={\"primary\"} onClick={() => setShowMap(!showMap)}>\n                {showMap ? 'Hide map' : 'Show Map'}\n              </Button>\n            </div>\n            {showMap && (\n              <div className={styles.container}>\n                <canvas id=\"aux\" style={{display: 'none'}}/>\n                <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n                <img src={image} alt={\"\"} className={styles.overlay}/>\n              </div>\n            )}\n            <div className={styles.row} style={{marginTop: 32}}>\n              <Typography variant={\"h5\"}>Room activity</Typography>\n              <Button variant={\"outlined\"} color={\"primary\"} onClick={() => setShowActivity(!showActivity)} disabled={disableActivity(room)}>\n                {showActivity ? 'Hide activity graph' : 'Show activity graph'}\n              </Button>\n            </div>\n            {showActivity && <ActivityGraph loading={!roomLoaded} activity={room['between_cleaning_plot']} lastCleaned={room['last_cleaned'] || room['cleaning_end_time']}/>}\n            <CommentsList reports={reports}/>\n            <CleaningReportsTable reports={reports} type={'room'}/>\n          </div>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nexport default RoomDetailsPage;","import CleaningReportsTable from './CleaningReportsTable';\nexport default CleaningReportsTable;","import * as Yup from \"yup\";\nimport {editCleaner} from \"../../utils/api\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport {Field, Form, Formik} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required()\n});\n\nconst EditCleanerDialog = ({cleaner, open, setOpen, onSave}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n  const start = cleaner['shift_start'].split(':');\n  const end = cleaner['shift_end'].split(':');\n\n  const initialValues = {\n    name: cleaner.name,\n    startHour: start.length > 0 ? start[0] : '',\n    endHour: end.length > 0 ? end[0] : '',\n    startMinutes: start.length > 0 ? start[1] : '',\n    endMinutes: end.length > 0 ? end[1] : ''\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const edited = vars;\n    edited['_id'] = cleaner['_id'];\n    edited['shift_start'] = `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`;\n    edited['shift_end'] = `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`;\n    const res = await editCleaner(edited);\n    console.log(res);\n    setSubmitting(false);\n    setOpen(false);\n    onSave();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Edit cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nexport default EditCleanerDialog;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {assignRoomsToCleaner, getRooms, unAssignRooms} from \"../../utils/api\";\nimport styles from \"./RoomSelector.module.scss\";\nimport {\n  Button,\n  Checkbox, Dialog, DialogActions, DialogContent,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow, Toolbar, Tooltip, Typography\n} from \"@material-ui/core\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport {getRoomTypeProp, getStatus, mergeCleaners} from \"../../utils/utils\";\nimport {FilterList, VisibilityOutlined} from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport moment from \"moment\";\nimport {lighten, makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport TableFilters from \"../../pages/AssignmentsPage/TableFilters\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner_name', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left',\n    flexDirection: 'column'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  filters: {\n    minHeight: 96\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, rooms, setRooms} = props;\n  const [filter, showFilters] = React.useState(false);\n\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n        [classes.filters]: filter\n      })}\n    >\n      <div className={styles.row}>\n        {numSelected > 0 ? (\n          <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                      style={{fontWeight: 600}}>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n            Assign rooms to cleaner\n          </Typography>\n        )}\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" onClick={() => {\n            showFilters(!filter);\n          }}>\n            <FilterList color={filter ? 'secondary' : 'inherit'}/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {filter &&\n      <div className={styles.row}>\n        <TableFilters rooms={rooms} setRooms={setRooms}/>\n      </div>\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  setRooms: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst RoomSelector = ({cleaner, onClose, open, setOpen, setSnackOpen, setSnackText}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(10);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    getRooms(null, null, true)\n      .then((rooms) => {\n          rooms = mergeCleaners(rooms);\n          console.log(rooms);\n          setRooms(rooms);\n          setOrigRooms(rooms);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const getCleaner = (room) => {\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (!cleaner) {\n      return '-';\n    }\n    return cleaner.name;\n  }\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const assign = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Rooms assigned');\n    setSnackOpen(true);\n    onClose();\n    setOpen(false);\n  }\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}\n              maxWidth={\"lg\"}>\n        <DialogContent>\n          {isLoaded ?\n            <Paper className={classes.paper}>\n              <EnhancedTableToolbar numSelected={selected.length} rooms={origRooms} setRooms={setRooms}/>\n              <TableContainer>\n                <Table\n                  className={classes.table}\n                  aria-labelledby=\"tableTitle\"\n                  aria-label=\"enhanced table\"\n                  size={'small'}\n                >\n                  <EnhancedTableHead\n                    classes={classes}\n                    numSelected={selected.length}\n                    order={order}\n                    orderBy={orderBy}\n                    onSelectAllClick={handleSelectAllClick}\n                    onRequestSort={handleRequestSort}\n                    rowCount={rooms.length}\n                    headCells={headCells}\n                    type={\"selection\"}\n                  />\n                  <TableBody>\n                    {stableSort(rooms, getComparator(order, orderBy))\n                      .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                      .map((row, index) => {\n                        const isItemSelected = isSelected(row);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                        return (\n                          <TableRow\n                            hover\n                            onClick={(event) => handleClick(event, row, selected, setSelected)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.name}\n                            selected={isItemSelected}\n                            style={{height: '33px'}}\n                          >\n                            <TableCell padding=\"checkbox\">\n                              <Checkbox\n                                checked={isItemSelected}\n                                inputProps={{'aria-labelledby': labelId}}\n                              />\n                            </TableCell>\n                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                              {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.building}</TableCell>\n                            <TableCell align=\"right\">{row.floor}</TableCell>\n                            <TableCell>{getCleaner(row)}</TableCell>\n                            <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                            <TableCell align=\"right\">{row['contamination_index'].toFixed(2)}</TableCell>\n                            <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                            <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                            <TableCell align=\"right\">\n                              <IconButton color={\"secondary\"} size={\"small\"}\n                                          onClick={() => {\n                                            openRoom(row)\n                                          }}>\n                                <VisibilityOutlined/>\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 50]}\n                component=\"div\"\n                count={rooms.length}\n                rowsPerPage={roomsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </Paper>\n            : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={assign} disabled={selected.length === 0} variant={\"contained\"}>\n            Assign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nRoomSelector.propTypes = {\n  cleaner: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired,\n  setSnackText: PropTypes.func.isRequired\n}\n\nexport default RoomSelector;","import RoomSelector from './RoomSelector';\nexport default RoomSelector;","import React, {useEffect, useState} from \"react\";\nimport {useParams, useHistory, Link as RouterLink} from 'react-router-dom';\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport {getAssignedRooms, getCleaner, getReports, unAssignRoom, deleteCleaner as removeCleaner} from \"../../utils/api\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AccountCircleRounded, AddCircleOutline, Clear, DeleteForever, Edit} from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {getRoomTypeProp, getStatus} from \"../../utils/utils\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable\";\nimport styles from './CleanerDetailsPage.module.scss';\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport EditCleanerDialog from \"./EditCleanerDialog\";\nimport RoomSelector from \"../../components/RoomSelector\";\nimport Link from \"@material-ui/core/Link\";\n\nconst CleanerDetailsPage = () => {\n  const history = useHistory();\n  const params = useParams();\n  const [cleanerLoaded, setCleanerLoaded] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [cleaner, setCleaner] = useState({});\n  const [reports, setReports] = useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [data, getData] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('Cleaned deleted');\n  const [showRoomSelector, setShowRoomSelector] = useState(false);\n\n  const handleConfirmClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const deleteCleaner = async () => {\n    await removeCleaner(cleaner['_id']);\n    setSnackText('Cleaner Deleted');\n    setSnackOpen(true);\n    history.goBack();\n  }\n\n  const saved = () => {\n    setSnackText('Saved');\n    setSnackOpen(true);\n    getData(true);\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  useEffect(() => {\n    getCleaner(params.id)\n      .then((room) => {\n          console.log(room);\n          setCleaner(room);\n          setCleanerLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        });\n    getReports(null, params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id, data]);\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.row} style={{justifyContent: 'space-between'}}>\n        <Typography variant={\"h5\"} className={styles.semiBold}>Cleaner details</Typography>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant={\"outlined\"}\n                color={\"primary\"}>\n          Actions\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => {\n            handleClose();\n            setEditing(true);\n          }}>\n            <ListItemIcon>\n              <Edit fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Edit cleaner\"/>\n          </MenuItem>\n          <MenuItem onClick={() => {\n            setOpen(true);\n            handleClose()\n          }}>\n            <ListItemIcon>\n              <DeleteForever color={\"error\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Delete cleaner\"/>\n          </MenuItem>\n        </Menu>\n      </div>\n      {cleanerLoaded ? (\n        <>\n          <div className={[styles.row, styles.content].join(' ')}>\n            <AccountCircleRounded className={styles.avatar}/>\n            <div>\n              <Typography variant={\"h6\"} className={styles.semiBold}>Cleaner name: {cleaner.name}</Typography>\n              <Typography variant={\"body1\"} color={\"textSecondary\"}>\n                Shift: {cleaner['shift_start']} - {cleaner['shift_end']}\n              </Typography>\n            </div>\n          </div>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"} className={styles.semiBold}>Assigned Rooms</Typography>\n            <Tooltip title={\"Add assignments\"}>\n              <IconButton onClick={() => {\n                setShowRoomSelector(true);\n              }}>\n                <AddCircleOutline/>\n              </IconButton>\n            </Tooltip>\n          </div>\n          <AssignmentsTable cleaner={cleaner} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n          <CleaningReportsTable reports={reports} type={\"cleaner\"}/>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete cleaner\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the cleaner?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n            handleConfirmClose();\n            deleteCleaner();\n          }} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {cleanerLoaded &&\n      <EditCleanerDialog cleaner={cleaner} open={editing} setOpen={setEditing} onSave={saved}/>}\n      <RoomSelector setSnackText={setSnackText} open={showRoomSelector} setSnackOpen={setSnackOpen}\n                    setOpen={setShowRoomSelector} onClose={() => {\n        getData(true);\n      }} cleaner={cleaner}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nconst AssignmentsTable = ({cleaner, setSnackOpen, setSnackText}) => {\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getAssignedRooms(cleaner['_id'])\n      .then((assignments) => {\n        console.log(assignments);\n        setAssignments(assignments);\n        setLoading(false);\n      }, (error) => {\n        console.log(error);\n      })\n  }, [cleaner]);\n\n  const removeAssignment = async (room) => {\n    const response = await unAssignRoom(room['_id'], cleaner['_id']);\n    console.log(response);\n    const newAssignments = [...assignments];\n    newAssignments.splice(assignments.indexOf(room), 1);\n    setAssignments(newAssignments);\n    setSnackText('Assignment removed');\n    setSnackOpen(true);\n  }\n\n  const getRoom = (room) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/rooms/${room['_id']}`,\n                    state: {id: room['_id']}\n                  }}>\n      {room.name}\n    </Link>);\n  }\n\n  const getCleaningStatus = (room) => {\n    if (room['is_cleaning']) {\n      return 'Cleaning in progress';\n    }\n    if (room['contamination_index'] > 60) {\n      return 'Needs cleaning';\n    }\n    return 'Clean';\n  }\n\n  return (\n    <div style={{margin: '16px 0'}}>\n      {loading ? <CircularProgress color=\"secondary\"/> :\n        (\n          assignments.length > 0 ?\n            <TableContainer component={Paper}>\n              <Table size={\"small\"}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Room</TableCell>\n                    <TableCell align=\"right\">Status</TableCell>\n                    <TableCell align=\"right\">Contamination Index</TableCell>\n                    <TableCell align=\"right\">Room type</TableCell>\n                    <TableCell align=\"right\">Cleaning Status</TableCell>\n                    <TableCell>Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {assignments.map((row) => (\n                    <TableRow key={row['_id']}>\n                      <TableCell component=\"th\" scope=\"row\">{getRoom(row)}</TableCell>\n                      <TableCell align=\"right\">{getStatus(row['contamination_index'])}</TableCell>\n                      <TableCell align=\"right\">{Math.min(row['contamination_index'].toFixed(2), 150)} %</TableCell>\n                      <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n                      <TableCell\n                        align=\"right\">{getCleaningStatus(row)}</TableCell>\n                      <TableCell>\n                        <Tooltip title={\"Remove assignment\"}>\n                          <IconButton size={\"small\"} onClick={() => {\n                            removeAssignment(row);\n                          }}>\n                            <Clear color={\"error\"}/>\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer> : <Typography variant={\"h6\"}>No assigned rooms</Typography>\n        )}\n    </div>\n  );\n}\n\nexport default CleanerDetailsPage;","import CleanerDetailsPage from './CleanerDetailsPage';\nexport default CleanerDetailsPage;","import ReportPage from './ReportPage';\nexport default ReportPage;\n","import React, {useEffect, useState} from 'react';\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {getFloorplan, getHeatmap, getReport} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Typography, Select, Grid} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport styles from './ReportPage.module.scss';\nimport {Check, CloseRounded} from \"@material-ui/icons\";\nimport {getVariant, update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\nimport Link from \"@material-ui/core/Link\";\nimport heatmap from \"../../assets/heatmap2.png\";\nimport ActivityGraph from \"../../components/Charts/ActivityGraph\";\n\nconst ReportPage = () => {\n  const {id} = useParams();\n  const [report, setReport] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [type, setType] = useState('');\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [showContImg, setShowContImg] = useState(false);\n  const [showCleanImg, setShowCleanImg] = useState(false);\n  const [image, setImage] = useState('');\n  const [showMap, setShowMap] = useState(false);\n\n  useEffect(() => {\n    getReport(id)\n      .then((report) => {\n        setReport(report);\n        setLoading(false);\n        getFloorplan(report['room_id']).then((img) => {\n          setImage(URL.createObjectURL(img));\n        });\n      })\n  }, [id]);\n\n  const mapSelected = async (event) => {\n    setType(event.target.value);\n    if (report['is_simulated']) {\n      setShowContImg(false);\n      setShowCleanImg(false);\n      if (event.target.value === 'contamination') {\n        setShowContImg(true);\n      } else {\n        setShowCleanImg(true);\n      }\n    } else {\n      if (event.target.value === 'combined') {\n        Promise.all([getHeatmap(id, 'clean'), getHeatmap(id, 'contamination')])\n          .then((res) => {\n            const aux = document.getElementById('aux');\n            const canvas = document.getElementById('main');\n            console.log(res)\n            update_img(res[1], aux, canvas, 1n, false, false);\n            const combined = document.getElementById('combined');\n            update_img(res[0], aux, combined, 1n, true, true);\n            canvas.style.height = canvas.offsetWidth / (72/56) + 'px';\n            combined.style.height = combined.offsetWidth / (72/56) + 'px';\n            setShowMap(true);\n          });\n      } else {\n        await getHeatmap(id, event.target.value)\n          .then((res) => {\n            const aux = document.getElementById('aux');\n            const canvas = document.getElementById('main');\n            console.log(res)\n            update_img(res, aux, canvas, 1n, event.target.value === 'clean');\n            canvas.style.height = canvas.offsetWidth / (72/56) + 'px';\n            setShowMap(true);\n          }).catch((err) => {\n            console.error(err)\n            setErrorMsg('Could not load map');\n            setError(true);\n          });\n      }\n    }\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(false);\n  };\n\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good} fontSize={\"large\"}/>) : (\n      <CloseRounded color={\"error\"} fontSize={\"large\"}/>);\n  }\n\n  const getRoom = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/rooms/${report['room_id']}`,\n                    state: {id: report['room_id']}\n                  }}>\n      {report['room_name']}\n    </Link>);\n  }\n\n  const getOverview = (report) => {\n    if (report.overview === '<empty>') {\n      return '-';\n    } else {\n      return report.overview;\n    }\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h4\"} className={styles.semiBold}>Cleaning report details</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"}>Room map</Typography>\n            <FormControl variant={'outlined'} style={{minWidth: '320px', marginBottom: 8}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Contamination map type</InputLabel>\n              <Select label=\"Contamination map type\" onChange={mapSelected} value={type}>\n                <MenuItem value=\"clean\">Cleaning</MenuItem>\n                <MenuItem value=\"contamination\">Before cleaning</MenuItem>\n                <MenuItem value=\"combined\"><em>Combined</em></MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            {showContImg &&\n            <img src={heatmap} alt=\"contamination map\" className={styles.map}/>\n            }\n            {showCleanImg &&\n            <img src={heatmap} alt=\"clean map\" className={styles.map}/>\n            }\n            <div className={styles.container}>\n              {!showCleanImg && !showContImg &&\n              <>\n                <canvas id=\"aux\" style={{display: 'none'}}/>\n                <canvas id=\"aux2\" style={{display: 'none'}}/>\n                {type === 'combined' && <canvas id=\"combined\" width={72} height={56} className={[styles.overlay, styles.map].join(' ')}/>}\n                <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n                {showMap && <img src={image} alt={\"\"} className={styles.overlay}/>}\n              </>\n              }\n            </div>\n          </div>\n          <Typography variant={\"h5\"}>Cleaner comments:</Typography>\n          <div className={styles.comments}>\n            <Typography variant={\"body1\"} className={styles.comment}>{report.comments}</Typography>\n          </div>\n        </Grid>\n        {!loading &&\n        <Grid item xs={6}>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaner:</Typography>\n            <Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n              <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['cleaner_name']}</Typography>\n            </Link>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Room:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{getRoom(report)}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning time:</Typography>\n            <Typography style={{marginLeft: '4px'}}\n                        variant={\"h5\"}>{moment(report['cleaning_time']).format('YYYY-MM-DD HH:mm:ss')}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning successful:</Typography>\n            <div style={{marginLeft: 4, height: 35}}>{getIcon(report['cleaning_succesful'])}</div>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Overview:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{getOverview(report)}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Contamination index:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}\n                        className={styles[getVariant(report['contamination_index'])]}>{report['contamination_index'].toFixed(2)} %</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning duration:</Typography>\n            <Typography style={{marginLeft: '4px'}}\n                        variant={\"h5\"}>{moment.utc((report['cleaning_duration_seconds'] * 1000)).format('m [minutes] s [seconds]')}</Typography>\n          </div>\n          <ActivityGraph activity={report['between_cleaning_plot']} loading={loading}\n                         lastCleaned={report['cleaning_time']} title={\"Room activity before cleaning\"} type=\"report\"/>\n        </Grid>}\n      </Grid>\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nexport default ReportPage;","import CircularProgressWithLabel from \"./CircularProgressWithLabel\";\nexport default CircularProgressWithLabel;","import Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"static\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nexport default CircularProgressWithLabel;","import AdminPage from './AdminPage';\nexport default AdminPage;\n","import React, {useEffect, useState} from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Button, Divider, InputAdornment, Typography} from \"@material-ui/core\";\nimport styles from \"./AdminPage.module.scss\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {getSimulatorSettings, resetSimulation, setSimulation} from \"../../utils/api\";\nimport Input from \"@material-ui/core/Input\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport CircularProgressWithLabel from \"../../components/CircularProgressWithLabel\";\n//import {ROOM_TYPES} from \"../../utils/constants\";\n\nconst AdminPage = () => {\n  const [simSpeed, setSimSpeed] = useState(10);\n  const [loading, setLoading] = useState(true);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [generating, setGenerating] = useState(false);\n  const [snackText, setSnackText] = useState('Simulation speed updated');\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n  useEffect(() => {\n    getSimulatorSettings()\n      .then((settings) => {\n        setSimSpeed(settings['simulator_speed']);\n        setLoading(false);\n      })\n  }, [])\n  const valuetext = (value) => {\n    return `${value}x`;\n  }\n\n  const generateMarks = () => {\n    const mark = [];\n    for (let i = 5; i <= 100; i += 5) {\n      mark.push({\n        value: i,\n        label: i\n      });\n    }\n    mark.unshift({\n      value: 0.1,\n      label: '0.1'\n    }, {\n      value: 0.5,\n    }, {\n      value: 1,\n    });\n\n    return mark;\n  }\n\n  const updateSimSpeed = () => {\n    setSimulation(simSpeed)\n      .then(() => {\n        setSnackText('Simulation speed updated');\n        setSnackOpen(true);\n      }).catch(() => setSnackOpen(true));\n  }\n  const handleChange = (event, newValue) => {\n    setSimSpeed(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setSimSpeed(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (simSpeed < 0.1) {\n      setSimSpeed(0);\n    } else if (simSpeed > 1000) {\n      setSimSpeed(1000);\n    }\n  };\n\n  const handleConfirmClose = () => {\n    setSnackText('Simulation reset');\n    setOpen(false);\n  };\n\n  const generate = async () => {\n    setGenerating(true);\n    //const hospitalId = \"5fb5226d3d8e1d45045cfc3f\";\n    //const roomType = ROOM_TYPES.WAITING_ROOM.key;\n    //const roomName = 'B20';\n    //const building = 1;\n    //const floor = 1;\n    let start = 0;\n    const end = 0;\n    for (start;start <= end; start++) {\n      //const name = roomName + start;\n      //await createRoom(hospitalId, name, roomType, building, floor);\n      await new Promise(r => setTimeout(r, 1000));\n      setProgress(start);\n    }\n    setGenerating(false);\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h5\"}>Simulator</Typography>\n      {loading ? <CircularProgress style={{margin: \"auto\"}}/> :\n        <Grid container>\n          <Grid container className={styles.slider}>\n            <Grid item xs>\n              <div className={styles.row}>\n                <Typography id=\"discrete-slider\" gutterBottom>\n                  Simulation speed multiplier\n                </Typography>\n                <Button variant={\"text\"} color={\"primary\"} onClick={updateSimSpeed}>\n                  Set\n                </Button>\n              </div>\n            </Grid>\n            <Grid container spacing={2} direction={\"row\"}>\n              <Grid item style={{flex: 1}}>\n                <Slider\n                  getAriaValueText={valuetext}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  step={null}\n                  min={0.1}\n                  marks={generateMarks()}\n                  onChange={handleChange}\n                  value={simSpeed}\n                />\n              </Grid>\n              <Grid item>\n                <Input\n                  style={{width: 65}}\n                  value={simSpeed}\n                  margin=\"dense\"\n                  onChange={handleInputChange}\n                  onBlur={handleBlur}\n                  endAdornment={<InputAdornment position=\"end\">X</InputAdornment>}\n                  inputProps={{\n                    step: 5,\n                    min: 0,\n                    max: 1000,\n                    type: 'number',\n                    'aria-labelledby': 'input-slider',\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item style={{display: \"flex\", marginLeft: 32}} xs>\n            <Card className={styles.card}>\n              <div className={styles.cardContent}>\n                <Typography variant={\"h6\"} className={styles.semiBold}>Simulator actions</Typography>\n                <Divider className={styles.divider} light={true}/>\n                <Button onClick={() => {\n                  setOpen(true);\n                }} variant={\"contained\"} color={\"secondary\"}>Reset simulated rooms</Button>\n                <Button disabled={generating} onClick={() => {\n                  generate();\n                }} variant={\"contained\"} color={\"primary\"} style={{float: \"right\"}}>Generate rooms</Button>\n              </div>\n            </Card>\n          </Grid>\n        </Grid>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n      {generating && <CircularProgressWithLabel value={progress} style={{margin: \"auto\"}}/>}\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Reset simulated rooms</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to reset the rooms?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={async () => {\n            handleConfirmClose();\n            resetSimulation().then(() => setSnackOpen(true)).catch(() => setSnackOpen(true));\n          }} color=\"primary\" autoFocus>\n            Reset\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </PageContainer>\n  )\n}\n\nexport default AdminPage;","import React from 'react';\nimport './App.scss';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport {authenticated as auth, getUser} from '../utils/api';\nimport DashboardPage from \"../pages/DashboardPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport CleanersPage from \"../pages/CleanersPage\";\nimport Toolbar from \"../components/Toolbar\";\nimport {useLocation} from 'react-router-dom';\nimport AnalysisPage from \"../pages/AnalysisPage\";\nimport RoomsPage from \"../pages/RoomsPage\";\nimport AssignmentsPage from \"../pages/AssignmentsPage\";\nimport RoomDetailsPage from \"../pages/RoomDetailsPage\";\nimport CleanerDetailsPage from \"../pages/CleanerDetailsPage\";\nimport ReportPage from \"../pages/ReportPage\";\nimport AdminPage from \"../pages/AdminPage\";\n\nfunction App() {\n  const location = useLocation();\n  const user = getUser();\n  const login = () => (auth() ? <Redirect to=\"/dashboard\"/> : <LoginPage/>);\n  const dash = () => (!auth() ? <Redirect to=\"/\"/> : <DashboardPage/>);\n  const cleaner = () => (!auth() ? <Redirect to=\"/\"/> : <CleanerDetailsPage/>);\n  const cleaners = () => (!auth() ? <Redirect to=\"/\"/> : <CleanersPage/>);\n  const assignments = () => (!auth() ? <Redirect to=\"/\"/> : <AssignmentsPage/>);\n  const rooms = () => (!auth() ? <Redirect to=\"/\"/> : <RoomsPage/>);\n  const room = () => (!auth() ? <Redirect to=\"/\"/> : <RoomDetailsPage/>);\n  const analysis = () => (!auth() ? <Redirect to=\"/\"/> : <AnalysisPage/>);\n  const report = () => (!auth() ? <Redirect to=\"/\"/> : <ReportPage/>);\n  const admin = () => (!auth() || !user.superAdmin ? <Redirect to=\"/\"/> : <AdminPage/>);\n\n  return (\n    <div className=\"App\">\n      {location.pathname !== '/' && <Toolbar/>}\n      <Switch location={location}>\n        <Route path={\"/dashboard\"} render={dash}/>\n        <Route path={\"/cleaners/:id\"} render={cleaner}/>\n        <Route path={\"/cleaners\"} render={cleaners}/>\n        <Route path={\"/assignments\"} render={assignments}/>\n        <Route path={\"/rooms/reports/:id\"} render={report}/>\n        <Route path={\"/rooms/:id\"} render={room}/>\n        <Route path={\"/rooms\"} render={rooms}/>\n        <Route path={\"/analysis\"} render={analysis}/>\n        <Route path={\"/simulator\"} render={admin}/>\n        <Route path={\"/\"} render={login}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {unstable_createMuiStrictModeTheme as createMuiTheme, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport {blueGrey, lightBlue} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[900],\n    },\n    secondary: lightBlue\n  },\n  typography: {\n    fontFamily: ['Raleway', 'sans-serif']\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={'/spotless'}>\n      <ThemeProvider theme={theme}>\n        <StylesProvider injectFirst>\n          <App/>\n        </StylesProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"CleanerDetailsPage_content__3PEfI\",\"avatar\":\"CleanerDetailsPage_avatar__3KDG8\",\"row\":\"CleanerDetailsPage_row__G0VOc\",\"menu\":\"CleanerDetailsPage_menu__2gyF8\",\"column\":\"CleanerDetailsPage_column__3374X\",\"semiBold\":\"CleanerDetailsPage_semiBold__1F3iu\"};"],"sourceRoot":""}