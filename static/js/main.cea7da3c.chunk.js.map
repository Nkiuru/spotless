{"version":3,"sources":["pages/AdminPage/AdminPage.module.scss","components/StatusDot/StatusDot.module.scss","pages/AssignmentsPage/AssignmentsPage.module.scss","components/Charts/ReportsPerDay/ReportsPerDay.module.scss","components/RoomSelector/RoomSelector.module.scss","pages/RoomDetailsPage/RoomDetailsPage.module.scss","components/ShiftPicker/ShiftPicker.module.scss","pages/RoomsPage/RoomsPage.module.scss","containers/PageContainer/PageContainer.module.scss","pages/LoginPage/LoginPage.module.scss","pages/CleanersPage/CleanersPage.module.scss","components/CleaningReportsTable/CleaningReportTable.module.scss","assets/hospital.png","components/CleanerSelect/CleanerSelect.module.scss","pages/ReportPage/ReportPage.module.scss","pages/DashboardPage/DashboardPage.module.scss","components/Toolbar/Toolbar.module.scss","utils/constants.js","components/StatusDot/index.js","components/StatusDot/StatusDot.js","utils/utils.js","utils/api.js","containers/PageContainer/index.js","containers/PageContainer/PageContainer.js","pages/DashboardPage/KeyStat.js","components/Charts/ReportsPerDay/index.js","components/Charts/ReportsPerDay/ReportsPerDay.js","pages/DashboardPage/Alerts.js","pages/DashboardPage/index.js","pages/DashboardPage/DashboardPage.js","pages/LoginPage/LoginPage.js","pages/LoginPage/index.js","components/ShiftPicker/ShiftPicker.js","components/RoomSelector/EnhancedTableHead.js","utils/tableUtils.js","pages/CleanersPage/CleanersPage.js","pages/CleanersPage/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","pages/AnalysisPage/index.js","pages/AnalysisPage/AnalysisPage.js","pages/RoomsPage/RoomsPage.js","pages/RoomsPage/index.js","components/CleanerSelect/index.js","components/CleanerSelect/CleanerSelect.js","pages/AssignmentsPage/AssignCleanerDialog.js","pages/AssignmentsPage/TableFilters.js","pages/AssignmentsPage/AssignmentsPage.js","pages/AssignmentsPage/index.js","pages/RoomDetailsPage/RoomDetailsCard.js","pages/RoomDetailsPage/RoomCleanerCard.js","pages/RoomDetailsPage/RoomReportComments.js","components/CleaningReportsTable/CleaningReportsTable.js","pages/RoomDetailsPage/index.js","pages/RoomDetailsPage/RoomDetailsPage.js","components/CleaningReportsTable/index.js","pages/CleanerDetailsPage/EditCleanerDialog.js","components/RoomSelector/RoomSelector.js","components/RoomSelector/index.js","pages/CleanerDetailsPage/CleanerDetailsPage.js","pages/CleanerDetailsPage/index.js","pages/ReportPage/index.js","pages/ReportPage/ReportPage.js","pages/AdminPage/index.js","pages/AdminPage/AdminPage.js","app/App.js","serviceWorker.js","index.js","pages/CleanerDetailsPage/CleanerDetailsPage.module.scss"],"names":["module","exports","API_KEY","BASE_URL","ROOM_TYPES","Object","freeze","OFFICE","frequency","cleaningTime","displayName","key","TOILET","WARD_ROOM","EXAMINATION_ROOM","CORRIDOR","WAITING_ROOM","StatusDot","variant","size","tooltip","classes","styles","dot","push","neutral","small","Tooltip","title","className","join","getRoomTypeProp","room","propName","getStatus","contamination","getVariant","mergeCleaners","rooms","map","status","cleaners","cleaner","length","name","update_img","arrayBuffer","auxCanvas","canvas","scaler","arr","BigUint64Array","error","bytearray","array","min","max","pix","pix1","minRaw","BigInt","Number","MAX_SAFE_INTEGER","maxRaw","j","im_p","i","Uint8Array","convert64to8","red","green","blue","a","b","tableRed","tableGreen","tableBlue","Math","cos","round","pow","sin","atan","Uint8ClampedArray","initColorMaps","redMap","greenMap","blueMap","img","imgArr","h","ImageData","data","byteIdx","imgIdx","grayValue","console","log","ctx","getContext","putImageData","drawImage","style","GLOBAL_HOSPITAL","localStorage","getItem","GLOBAL_HOSPITAL_NAME","authenticated","getUser","JSON","parse","addParam","property","params","parameter","newParams","getRooms","hospital","floor","showAssigned","doGetRequest","getHospitals","getAssignedRooms","cleanerId","getAssignedCleaners","roomId","assignRoomsToCleaner","Promise","all","assignRoom","unAssignRooms","unAssignRoom","doPostRequest","stringify","doDeleteRequest","getRoom","getCleaners","getCleaner","createCleaner","shiftStart","shiftEnd","getReports","deleteCleaner","getReport","reportId","getHeatmap","type","requestURL","fetch","method","headers","response","ok","json","Error","getRoomHeatmap","editCleaner","doPutRequest","getSimulatorSettings","setSimulation","speed","resetSimulation","url","message","body","PageContainer","children","top","noToolbar","pageContainer","pageContent","KeyStat","value","subtitle","color","stat","keyStat","Typography","ReportsPerDay","reports","loading","report","moment","format","counts","forEach","x","formattedReports","keys","date","amount","height","Paper","container","CircularProgress","margin","width","chart","textAlign","dataKey","strokeDasharray","stroke","strokeWidth","Alerts","history","useHistory","filtered","filter","overview","alerts","alert","onClick","id","pathname","state","Grid","direction","alignItems","justify","item","semiBold","lineHeight","comments","ArrowForward","fontSize","marginTop","DashboardPage","useState","user","setUser","setRooms","setReports","setLoading","hospitals","setHospitals","setHospital","hospitalSet","setHospitalSet","fetchData","setFetchData","useEffect","u","then","result","getContaminationIndex","contaminations","val","reduce","display","flexDirection","username","IconButton","Refresh","FormControl","minWidth","InputLabel","Select","label","onChange","event","target","setItem","removeItem","setGlobalHospital","find","setGlobalHospitalName","MenuItem","hosp","spacing","xs","grid","today","isSame","getCleanedRooms","getVariantColor","validationSchema","Yup","required","password","LoginPage","form","initialValues","onSubmit","vars","setSubmitting","isSuperAdmin","superAdmin","authenticate","isSubmitting","resetForm","values","component","TextField","autoFocus","fullWidth","Button","btn","ShiftPicker","row","Array","number","num","toString","padStart","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","numeric","disablePadding","sortDirection","TableSortLabel","active","visuallyHidden","descendingComparator","undefined","toUpperCase","getComparator","stableSort","comparator","stabilizedThis","el","index","sort","handleClick","selected","setSelected","selectedIndex","indexOf","newSelected","concat","slice","firstName","lastName","AddCleanerDialog","open","setOpen","setIsLoaded","setSnackOpen","handleClose","handleSubmit","startHour","startMinutes","endHour","endMinutes","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","useStyles","makeStyles","theme","border","clip","overflow","position","CleanersTable","React","setOrder","setOrderBy","page","setPage","cleanersPerPage","setCleanersPerPage","TableContainer","Table","TableBody","labelId","hover","tabIndex","scope","assignedRooms","numCleaned","placement","getCleaningProgress","isBetween","viewCleaner","VisibilityOutlined","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","CleanersPage","setCleaners","isLoaded","snackOpen","responses","err","handleSnackClose","reason","headerRow","bold","AddCircleOutline","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","NavTabs","withStyles","root","flexGrow","indicator","justifyContent","backgroundColor","marginBottom","borderTopLeftRadius","borderTopRightRadius","Tabs","TabIndicatorProps","Toolbar","location","useLocation","getTabValue","tabId","route","matchPath","path","exact","strict","mountTabValueFactory","anchorEl","setAnchorEl","AppBar","toolbar","split","goBack","ArrowBackRounded","svg","Tab","tab","DashboardRounded","Link","to","disableRipple","FormatListBulletedRounded","PeopleRounded","BusinessRounded","AssessmentRounded","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","ListItemIcon","Settings","ListItemText","primary","ExitToApp","AnalysisPage","RoomTable","building","patient","openRoom","RoomsPage","setError","src","hospitalImg","alt","CleanerSelect","options","setOptions","openSelect","setOpenSelect","setCleaner","clnrs","Autocomplete","onOpen","autocomplete","getOptionLabel","option","newValue","renderInput","InputProps","endAdornment","AssignCleanerDialog","setSnackText","selectedWithCleaner","disableBackdropClick","disabled","TableFilters","setBuilding","setFloor","roomType","setRoomType","assigned","setAssigned","valid","Set","FormControlLabel","control","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","dark","filters","minHeight","EnhancedTableToolbar","getData","showFilters","removeAssignments","clsx","fontWeight","startIcon","Close","critical","flexBasis","marginRight","aria-label","FilterList","paper","table","AssignmentsPage","roomsPerPage","setRoomsPerPage","origRooms","setOrigRooms","snackText","newSelecteds","n","isItemSelected","role","aria-checked","RouterLink","toFixed","RoomDetailsCard","Card","card","cardContent","Divider","divider","medium","RoomCleanerCard","newCleaner","setNewCleaner","hasCleaner","removeCleanerAssignment","assignNewCleaner","getColor","marginLeft","ClearOutlined","CommentsList","time","comment","author","ReportsTableHead","unshift","CleaningReportsTable","reportsPerPage","setReportsPerPage","Check","good","CloseRounded","viewReport","RoomDetailsPage","roomLoaded","setRoomLoaded","setRoom","showMap","setShowMap","errorMsg","setErrorMsg","Date","aux","document","getElementById","catch","titleRow","action","content","detailsRow","EditCleanerDialog","onSave","start","end","edited","res","RoomSelector","assign","maxWidth","AssignmentsTable","assignments","setAssignments","removeAssignment","newAssignments","splice","Clear","CleanerDetailsPage","cleanerLoaded","setCleanerLoaded","editing","setEditing","showRoomSelector","setShowRoomSelector","handleConfirmClose","removeCleaner","Edit","DeleteForever","AccountCircleRounded","avatar","aria-describedby","DialogContentText","ReportPage","setReport","setType","mapSelected","reportInfo","AdminPage","simSpeed","setSimSpeed","settings","slider","gutterBottom","flex","Slider","getAriaValueText","valueLabelDisplay","step","marks","mark","generateMarks","Input","onBlur","App","render","auth","window","hostname","match","createMuiTheme","blueGrey","lightBlue","typography","fontFamily","ReactDOM","StrictMode","basename","ThemeProvider","StylesProvider","injectFirst","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cea7da3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"AdminPage_slider__15E9C\",\"row\":\"AdminPage_row__2qRHf\",\"divider\":\"AdminPage_divider__3uIH_\",\"semiBold\":\"AdminPage_semiBold__EaJqb\",\"medium\":\"AdminPage_medium__2aq8Q\",\"card\":\"AdminPage_card__3NaLL\",\"cardContent\":\"AdminPage_cardContent__1_5WT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot\":\"StatusDot_dot__1rSYH\",\"good\":\"StatusDot_good__1GIEp\",\"medium\":\"StatusDot_medium__3zBB3\",\"critical\":\"StatusDot_critical__23vOC\",\"neutral\":\"StatusDot_neutral__1H6OR\",\"tiny\":\"StatusDot_tiny__33nQ5\",\"small\":\"StatusDot_small__1yc1L\",\"large\":\"StatusDot_large__jMuJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AssignmentsPage_title__3UMlB\",\"critical\":\"AssignmentsPage_critical__3ZemZ\",\"row\":\"AssignmentsPage_row__2lJV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ReportsPerDay_chart__1nn7U\",\"title\":\"ReportsPerDay_title__aLd0m\",\"container\":\"ReportsPerDay_container__3-OV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RoomSelector_title__363JP\",\"critical\":\"RoomSelector_critical__a-ztV\",\"row\":\"RoomSelector_row__n9QC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleRow\":\"RoomDetailsPage_titleRow__JoTlm\",\"content\":\"RoomDetailsPage_content__2CxAu\",\"card\":\"RoomDetailsPage_card__2J4HU\",\"cardContent\":\"RoomDetailsPage_cardContent__1soEX\",\"detailsRow\":\"RoomDetailsPage_detailsRow__3fj0E\",\"row\":\"RoomDetailsPage_row__PCQ4C\",\"divider\":\"RoomDetailsPage_divider__hWVez\",\"semiBold\":\"RoomDetailsPage_semiBold__24ERR\",\"medium\":\"RoomDetailsPage_medium__3Rnxk\",\"good\":\"RoomDetailsPage_good__2jSxq\",\"med\":\"RoomDetailsPage_med__T6SFg\",\"critical\":\"RoomDetailsPage_critical__2gPiW\",\"neutral\":\"RoomDetailsPage_neutral__2SrpQ\",\"btn\":\"RoomDetailsPage_btn__3tYWx\",\"map\":\"RoomDetailsPage_map__2yhwI\",\"comments\":\"RoomDetailsPage_comments__1nTSD\",\"comment\":\"RoomDetailsPage_comment__1rwNF\",\"author\":\"RoomDetailsPage_author__tbk-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ShiftPicker_menu__1os-v\",\"row\":\"ShiftPicker_row__rUGBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"RoomsPage_headerRow__3ck7N\",\"bold\":\"RoomsPage_bold__39rfR\",\"map\":\"RoomsPage_map__19OrU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"PageContainer_pageContainer__iX86t\",\"pageContent\":\"PageContainer_pageContent__1wPf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginPage_form__38hI6\",\"btn\":\"LoginPage_btn__Q93UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"CleanersPage_headerRow__20bGG\",\"bold\":\"CleanersPage_bold__qIG9F\",\"menu\":\"CleanersPage_menu__1x8Ct\",\"row\":\"CleanersPage_row__2H2UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"CleaningReportTable_good__2fi-5\",\"semiBold\":\"CleaningReportTable_semiBold__3M_nh\"};","module.exports = __webpack_public_path__ + \"static/media/hospital.ea9e1e90.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autocomplete\":\"CleanerSelect_autocomplete__2dss4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ReportPage_row__1XU8D\",\"semiBold\":\"ReportPage_semiBold__20bHc\",\"reportInfo\":\"ReportPage_reportInfo__KuWwG\",\"column\":\"ReportPage_column__1fkvo\",\"good\":\"ReportPage_good__IEB1u\",\"medium\":\"ReportPage_medium__1jIMT\",\"critical\":\"ReportPage_critical___2FfG\",\"map\":\"ReportPage_map__1ruE5\",\"comments\":\"ReportPage_comments__vvAhd\",\"comment\":\"ReportPage_comment__38N5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semiBold\":\"DashboardPage_semiBold__1wP56\",\"stat\":\"DashboardPage_stat__1HNGL\",\"keyStat\":\"DashboardPage_keyStat__3TqkO\",\"subtitle\":\"DashboardPage_subtitle__SKIyw\",\"grid\":\"DashboardPage_grid__3i4Zn\",\"alerts\":\"DashboardPage_alerts__1Vbju\",\"alert\":\"DashboardPage_alert__3qisR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1Bm9j\",\"name\":\"Toolbar_name__3EvOQ\",\"svg\":\"Toolbar_svg__3XlL9\",\"tab\":\"Toolbar_tab__3uwiV\"};","export const API_KEY = 'zL43mXgXk5xa7YFRBVZscbLnGFaqVh24q5G6fhGjmAv532FAVBRtnuCJpwXWXnhw';\nexport const BASE_URL = 'https://cleaner-app-api.azurewebsites.net/api/';\n\nexport const UNCLEANED = 'Uncleaned due to some reason';\n\nexport const ROOM_TYPES = Object.freeze({\n  OFFICE: {\n    frequency: 1,\n    cleaningTime: 5,\n    displayName: 'Office',\n    key: 'OFFICE'\n  },\n  TOILET: {\n    frequency: 5,\n    cleaningTime: 5,\n    displayName: 'Toilet',\n    key: 'TOILET'\n  },\n  WARD_ROOM: {\n    frequency: 5,\n    cleaningTime: 8,\n    displayName: 'Ward room',\n    key: 'WARD_ROOM'\n  },\n  EXAMINATION_ROOM: {\n    frequency: 5,\n    cleaningTime: 6,\n    displayName: 'Examination room',\n    key: 'EXAMINATION_ROOM'\n  },\n  CORRIDOR: {\n    frequency: 3,\n    cleaningTime: 9,\n    displayName: 'Corridor',\n    key: 'CORRIDOR'\n  },\n  WAITING_ROOM: {\n    frequency: 5,\n    cleaningTime: 10,\n    displayName: 'Waiting room',\n    key: 'WAITING_ROOM'\n  },\n});","import StatusDot from './StatusDot';\nexport default StatusDot;","import React from 'react';\nimport styles from './StatusDot.module.scss';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PropTypes from \"prop-types\";\n\n\nconst StatusDot = ({variant, size, tooltip}) => {\n  const classes = [styles.dot];\n  classes.push(variant ? styles[variant] : styles.neutral);\n  classes.push(size ? styles[size] : styles.small);\n  return (\n    <Tooltip title={tooltip}>\n      <div className={classes.join(' ')}/>\n    </Tooltip>\n  );\n}\n\nStatusDot.propTypes = {\n  variant: PropTypes.oneOf(['good', 'critical', 'medium', 'neutral']).isRequired,\n  size: PropTypes.oneOf(['tiny', 'small', 'large']).isRequired,\n  tooltip: PropTypes.any\n}\n\nexport default StatusDot;","import {ROOM_TYPES} from \"./constants\";\nimport StatusDot from \"../components/StatusDot\";\nimport React from \"react\";\n\nexport const getRoomTypeProp = (room, propName) => {\n  return room['room_type'] !== '<empty>' ? ROOM_TYPES[room['room_type']][propName] : '';\n}\n\nexport const getStatus = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return <StatusDot variant={variant} size={\"tiny\"} tooltip={contamination}/>\n}\n\nexport const getVariant = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return variant;\n}\n\nexport const getVariantColor = (contamination) => {\n  let variant = '#CFD3DA';\n  if (contamination >= 60) {\n    variant = '#EB5757';\n  } else if (contamination >= 30) {\n    variant = '#F2C94C';\n  } else if (contamination < 30) {\n    variant = '#27AE60';\n  }\n  return variant;\n}\n\nexport const mergeCleaners = (rooms) => {\n  return rooms.map((room) => {\n    room.status = room['contamination_index'];\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (cleaner) {\n      room.cleaner = cleaner;\n      room['cleaner_name'] = cleaner.name;\n    } else {\n      room['cleaner_name'] = '-';\n    }\n    return room;\n  });\n}\n\nfunction convert64to8(array, scaler) {\n  let min, max, pix;\n  // eslint-disable-next-line no-undef\n  let minRaw = BigInt(Number.MAX_SAFE_INTEGER);\n  // eslint-disable-next-line no-undef\n  let maxRaw = BigInt(0);\n  for (let j = 0; j < array.length; j++) {\n    pix = array[j]\n    if (pix < minRaw) {\n      minRaw = pix\n    }\n    if (pix > maxRaw) {\n      maxRaw = pix\n    }\n  }\n  // eslint-disable-next-line no-undef\n  max = BigInt(maxRaw) / scaler;\n  // eslint-disable-next-line no-undef\n  min = BigInt(minRaw);\n  let pix1;\n  let im_p = [];\n  if (max <= min) {\n    max = min + 1n\n  }\n  for (let i = 0; i < array.length; i++) {\n    // eslint-disable-next-line no-undef\n    pix1 = (array[i] - min) * 255n / (max - min);\n    if (pix1 > 255n) {\n      pix1 = 255\n    }\n    if (pix1 < 0n) {\n      pix1 = 0n\n    }\n    im_p.push(Number(pix1));\n  }\n  return new Uint8Array(im_p);\n}\n\n// lookup color table to apply to grayscale image\nfunction initColorMaps() {\n  let tableRed = []\n  let tableGreen = []\n  let tableBlue = []\n  let red, green, blue;\n  let a, b;\n  for (let i = 0; i <= 255; i++) {\n    a = i * 0.01236846501;\n    b = Math.cos(a - 1.0)\n    red = Math.round(Math.pow(2.0, Math.sin(a - 1.6)) * 200)\n    green = Math.round(Math.atan(a) * b * 155 + 100.0)\n    blue = Math.round(b * 255)\n    red = Math.min(255, red);\n    green = Math.min(255, green);\n    blue = Math.min(255, blue);\n    red = Math.max(0, red);\n    green = Math.max(0, green);\n    blue = Math.max(0, blue);\n    tableRed.push(red)\n    tableGreen.push(green)\n    tableBlue.push(blue)\n  }\n  return [new Uint8ClampedArray(tableRed), new Uint8ClampedArray(tableGreen), new Uint8ClampedArray(tableBlue)];\n}\n\nexport function update_img(arrayBuffer, auxCanvas, canvas, scaler) {\n  let arr = null;\n  try {\n    // eslint-disable-next-line no-undef\n    arr = new BigUint64Array(arrayBuffer);\n  } catch (error) {\n    throw error;\n  }\n  let bytearray = convert64to8(arr, scaler);\n  let [redMap, greenMap, blueMap] = initColorMaps();\n  let img = null; //ImageData\n  let imgArr = null; //Uint8ClampedArray\n  const h = Math.round(bytearray.length / 72);\n  if (bytearray) {\n    img = new ImageData(72, h); // Note: the actual array is 4 times bigger because has (RGBA) pixels\n    imgArr = img.data;\n    let byteIdx = 0;\n    // color mapped image\n    for (let imgIdx = 0; imgIdx < imgArr.length; imgIdx += 4) {\n      let grayValue = bytearray[byteIdx];\n      imgArr[imgIdx] = redMap[grayValue]; // R value\n      imgArr[imgIdx + 1] = greenMap[grayValue]; // G value\n      imgArr[imgIdx + 2] = blueMap[grayValue]; // B value\n      imgArr[imgIdx + 3] = 255; // Alpha value\n      byteIdx++;\n    }\n  }\n  console.log(img)\n  // Scaling. It seems that with putImageData we cannot scale the canvas directly\n  // auxCanvas has the image and\n  let ctx = canvas.getContext('2d');\n  auxCanvas.getContext(\"2d\").putImageData(img, 0, 0);\n  ctx.drawImage(auxCanvas, 0, 0)\n  // flip Y AND X axis\n  canvas.style = \"transform: scale(1, 1); flex: 0\";\n}\n\n/*function update_scale(){\n  // clear\n  auxCanvas.getContext(\"2d\").clearRect(0,0,auxCanvas.width,auxCanvas.height);\n  ctx.clearRect(0,0,canvas.width,canvas.height);\n  //scale = Number($(\"scale\").value);\n\n  ctx.scale(scale, scale);\n  //console.log(\"new scale: %f\", scale);\n}*/","import {API_KEY, BASE_URL} from \"./constants\";\nimport {getRoomTypeProp} from \"./utils\";\n\nexport let GLOBAL_HOSPITAL = localStorage.getItem('hospital') || false;\nexport let GLOBAL_HOSPITAL_NAME = localStorage.getItem('hospital_name') || false;\n\n\nexport const authenticated = () => {\n  return localStorage.getItem('user') !== null;\n};\n\nexport const getUser = () => {\n  if (authenticated()) {\n    return JSON.parse(localStorage.getItem('user'));\n  } else {\n    return false;\n  }\n}\n\nexport const authenticate = (username, password) => {\n  let isSuperAdmin = false;\n  if (username === 'superadmin' && password === 'admin') {\n    isSuperAdmin = true;\n  }\n  localStorage.setItem('user', JSON.stringify({\n    username,\n    superAdmin: isSuperAdmin\n  }));\n  return true;\n}\n\nexport const setGlobalHospital = (hospital) => {\n  if (hospital) {\n    localStorage.setItem('hospital', hospital);\n  } else {\n    localStorage.removeItem('hospital');\n  }\n  GLOBAL_HOSPITAL = hospital;\n}\n\nexport const setGlobalHospitalName = (hospital) => {\n  if (hospital) {\n    localStorage.setItem('hospital_name', hospital);\n  } else {\n    localStorage.removeItem('hospital_name');\n  }\n  GLOBAL_HOSPITAL_NAME = hospital;\n}\n\nexport const logout = () => {\n  localStorage.removeItem('user');\n}\n\nconst addParam = (property, params, parameter) => {\n  let newParams = params;\n  if (params.length > 0 && parameter) {\n    newParams += `&${property}=${parameter}`;\n  } else if (parameter) {\n    newParams += `?${property}=${parameter}`;\n  }\n  return newParams;\n}\n\n\nexport const getRooms = async (hospital, floor, showAssigned) => {\n  const url = 'rooms';\n  hospital = hospital || GLOBAL_HOSPITAL;\n  let params = addParam('hospital_id', '', hospital);\n  params = addParam('floor', params, floor);\n  showAssigned = showAssigned ? 1 : 0;\n  params = addParam('assigned_cleaners', params, showAssigned);\n  return doGetRequest(url, params);\n}\n\nexport const getHospitals = async () => {\n  return doGetRequest('hospitals');\n}\n\nexport const startCleaning = async (roomId) => {\n  return doGetRequest(`room/startcleaning?id=${roomId}`);\n}\n\nexport const stopCleaning = async (roomId) => {\n  return doGetRequest(`room/stopcleaning?id=${roomId}`);\n}\n\nexport const getAssignedRooms = async (cleanerId) => {\n  return doGetRequest(`cleaners/rooms?cleaner_id=${cleanerId}`);\n}\n\nexport const getAssignedCleaners = async (roomId) => {\n  return doGetRequest(`cleaners/rooms?room_id=${roomId}`);\n}\n\nexport const assignRoomsToCleaner = async (rooms, cleaner) => {\n  return Promise.all(rooms.map((room) => {\n    return assignRoom(room['_id'], cleaner);\n  }));\n}\n\nexport const unAssignRooms = async (rooms) => {\n  return Promise.all(rooms.map((room) => {\n    return unAssignRoom(room['_id'], room['assigned_cleaners'][0]['_id']);\n  }));\n}\n\nexport const assignRoom = async (room, cleaner) => {\n  return doPostRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const unAssignRoom = async (room, cleaner) => {\n  return doDeleteRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const getRoom = async (roomId) => {\n  return doGetRequest(`room?_id=${roomId}`);\n}\n\nexport const getCleaners = async () => {\n  return doGetRequest('cleaners/');\n}\n\nexport const getCleaner = async (cleanerId) => {\n  return doGetRequest(`cleaner?_id=${cleanerId}`);\n}\n\nexport const createCleaner = async (name, shiftStart, shiftEnd) => {\n  return doPostRequest('cleaner/', JSON.stringify({\n    name,\n    'shift_start': shiftStart,\n    'shift_end': shiftEnd\n  }));\n}\n\nexport const getReports = async (roomId, cleanerId, hospital) => {\n  hospital = hospital || GLOBAL_HOSPITAL_NAME;\n  let params = addParam('room_id', '', roomId);\n  params = addParam('cleaner_id', params, cleanerId);\n  params = addParam('hospital_name', params, hospital);\n  return doGetRequest('reports', params)\n}\n\nexport const deleteCleaner = async (cleanerId) => {\n  return doDeleteRequest('cleaner', JSON.stringify({\n    '_id': cleanerId\n  }));\n}\n\nexport const getReport = async (reportId) => {\n  return doGetRequest(`report?_id=${reportId}`);\n}\n\nexport const getHeatmap = async (reportId, type) => {\n  const requestURL = BASE_URL + `report/heatmap?_id=${reportId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    console.log(json)\n    throw new Error(json.error);\n  }\n}\n\nexport const getRoomHeatmap = async (roomId, type) => {\n  const requestURL = BASE_URL + `room/heatmap?_id=${roomId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    throw new Error(json.error);\n  }\n}\n\nexport const editCleaner = async (cleaner) => {\n  return doPutRequest('cleaner/', JSON.stringify({\n    '_id': cleaner['_id'],\n    'name': cleaner.name,\n    'shift_start': cleaner['shift_start'],\n    'shift_end': cleaner['shift_end']\n  }));\n}\n\nexport const getSimulatorSettings = async () => {\n  return doGetRequest('simulator/settings');\n}\n\nexport const setSimulation = async (speed) => {\n  console.log(speed)\n  return doPutRequest('simulator/settings', JSON.stringify({'simulator_speed': speed}));\n}\n\nexport const resetSimulation = async () => {\n  return doGetRequest('simulator/clear');\n}\n\nexport const createRoom = async (room) => {\n  return doPostRequest('/room', JSON.stringify({\n    'hospital_id': room['hospital_id'],\n    'name': room.name,\n    'is_simulated': true\n  }));\n}\n\nexport const updateRoom = async (room) => {\n  return doPutRequest('/room', JSON.stringify({\n    '_id': room['_id'],\n    'room_type': getRoomTypeProp(room, 'key'),\n    'building': room.building,\n    'floor': room.floor\n  }))\n}\n\nconst doGetRequest = async (url, params) => {\n  const requestURL = BASE_URL + url + (params || '');\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPostRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doDeleteRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPutRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  console.log(requestURL);\n  const response = await fetch(requestURL, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  console.log(response)\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}","import PageContainer from './PageContainer';\nexport default PageContainer;\n","import React from 'react';\nimport styles from './PageContainer.module.scss';\nimport PropTypes from 'prop-types';\n\nconst PageContainer = ({ children, style, noToolbar }) => {\n  const top = noToolbar ? 0 : '48px';\n  return (\n    <div className={styles.pageContainer} style={{top}}>\n      <div className={styles.pageContent} style={style}>{children}</div>\n    </div>\n  );\n};\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n  noToolbar: PropTypes.bool\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport styles from \"./DashboardPage.module.scss\";\nimport {Typography} from \"@material-ui/core\";\n\nconst KeyStat = ({value, subtitle, color}) => {\n  return (\n    <div className={styles.stat}>\n      <div className={styles.keyStat}>\n        <Typography variant={\"h3\"} style={{color}}>{value}</Typography>\n      </div>\n      <Typography variant={\"body2\"} className={styles.subtitle}>{subtitle}</Typography>\n    </div>\n  );\n}\n\nexport default KeyStat;","import ReportsPerDay from './ReportsPerDay';\nexport default ReportsPerDay;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport moment from \"moment\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./ReportsPerDay.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\n\nconst ReportsPerDay = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return moment(report['cleaning_time']).format('DD.MM.YYYY');\n  })\n  const counts = {};\n  data.forEach((x) => {\n    counts[x] = (counts[x] || 0) + 1;\n  });\n  const formattedReports = [];\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      date: x,\n      amount: counts[x]\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Cleaning events per day</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning events</Typography>\n                :\n                <LineChart data={formattedReports}>\n                  <XAxis dataKey=\"date\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Line type=\"monotone\" dataKey=\"amount\" name=\"Cleaning events\" stroke=\"#8884d8\" strokeWidth={2}/>\n                </LineChart>\n              }\n\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nReportsPerDay.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default ReportsPerDay;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DashboardPage.module.scss\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {UNCLEANED} from \"../../utils/constants\";\nimport {ArrowForward} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Alerts = ({reports, loading}) => {\n  const history = useHistory();\n  const filtered = reports.filter((report) => {\n    return report.overview === 'Patialy cleaned';\n  });\n\n  const openReport = (id) => {\n    history.push({\n      pathname: `/rooms/reports/${id}`,\n      state: {id}\n    })\n  }\n  return (\n    <div className={styles.alerts}>\n      {loading ? <CircularProgress size={20} style={{margin: 'auto'}}/> :\n        <>\n          {filtered.map((report) => (\n            <div key={report['_id']} className={styles.alert} onClick={() => {\n              openReport(report['_id']);\n            }}>\n              <Grid container direction={\"row\"} alignItems={\"center\"} justify={\"space-between\"}>\n                <Grid item>\n                  <Typography variant={\"h6\"} className={styles.semiBold}>{report['room_name']},\n                    Floor {report.floor}</Typography>\n                  <Typography variant={\"body2\"} className={styles.semiBold} style={{lineHeight: '24px'}}\n                              color=\"textSecondary\">{report['cleaner_name']}: {report.comments}</Typography>\n                </Grid>\n                <Grid item>\n                  <ArrowForward color={\"action\"} style={{fontSize: '1.75rem'}}/>\n                </Grid>\n              </Grid>\n            </div>\n          ))}\n          {filtered.length === 0 &&\n          <Typography variant={\"h6\"} style={{marginTop: 16}} className={styles.semiBold}>No recent alerts</Typography>\n          }\n        </>\n      }\n    </div>\n  );\n}\n\nAlerts.propTypes = {\n  reports: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default Alerts;","import DashboardPage from './DashboardPage';\nexport default DashboardPage;\n","import React, {useEffect, useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from './DashboardPage.module.scss';\nimport Grid from \"@material-ui/core/Grid\";\nimport KeyStat from \"./KeyStat\";\nimport {\n  getHospitals,\n  getReports,\n  getRooms,\n  getUser,\n  GLOBAL_HOSPITAL,\n  setGlobalHospital,\n  setGlobalHospitalName\n} from \"../../utils/api\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport moment from \"moment\";\nimport {getVariant, getVariantColor} from \"../../utils/utils\";\nimport ReportsPerDay from \"../../components/Charts/ReportsPerDay\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Alerts from \"./Alerts\";\nimport {IconButton, Tooltip} from \"@material-ui/core\";\nimport {Refresh} from \"@material-ui/icons\";\n\nconst DashboardPage = () => {\n  const [user, setUser] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [hospitals, setHospitals] = useState([]);\n  const [hospital, setHospital] = useState(GLOBAL_HOSPITAL);\n  const [hospitalSet, setHospitalSet] = useState(false);\n  const [fetchData, setFetchData] = useState(false);\n\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n    setLoading(true);\n    Promise.all([getRooms(), getReports()])\n      .then((result) => {\n        setRooms(result[0]);\n        setReports(result[1]);\n        setLoading(false);\n      });\n    if (!hospitalSet) {\n      getHospitals()\n        .then((result) => {\n          setHospitals(result);\n        });\n    }\n  }, [hospitalSet, hospital, fetchData]);\n\n  const hospitalSelected = (event) => {\n    setHospital(event.target.value);\n    setGlobalHospital(event.target.value);\n    const hospital = hospitals.find((x) => x['_id'] === event.target.value);\n    setGlobalHospitalName(hospital ? hospital.name : false);\n    setHospitalSet(!hospitalSet);\n  }\n\n  const getCleanedRooms = () => {\n    const today = moment();\n    return rooms.filter((room) => {\n      if (!room['last_cleaned']) {\n        return false;\n      }\n      return moment(room['last_cleaned']).isSame(today, 'date');\n    }).length;\n  }\n\n  const getContaminationIndex = () => {\n    const contaminations = [];\n    rooms.forEach((room) => {\n      const val = room['contamination_index'];\n      if (val > 150) {\n        contaminations.push(150);\n      } else if (val < 0) {\n        contaminations.push(0);\n      } else {\n        contaminations.push(val);\n      }\n    });\n    return Math.round((contaminations.reduce((a, b) => (a + b)) / contaminations.length));\n  }\n\n  const getGreenRooms = () => {\n    return rooms.filter((room) => {\n      return getVariant(room['contamination_index']) === 'good';\n    }).length;\n  }\n\n  const getRedRooms = () => {\n    return rooms.filter((room) => {\n      return getVariant(room['contamination_index']) === 'critical';\n    }).length;\n  }\n\n  const getColor = () => {\n    return getVariantColor(getContaminationIndex());\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Grid container direction={\"row\"} justify={\"space-between\"} alignItems={\"center\"}>\n        <Grid item style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n          <Typography variant={\"h4\"}>Hello {user && user.username}!</Typography>\n          <Tooltip title={\"Refresh\"}>\n            <IconButton onClick={() => {\n              setFetchData(!fetchData);\n            }}>\n              <Refresh/>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <FormControl variant={'outlined'} style={{minWidth: '320px', margin: '8px'}}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Select hospital</InputLabel>\n            <Select label=\"Select Hospital\" onChange={hospitalSelected} value={hospital}>\n              <MenuItem value={false}>\n                <em>All</em>\n              </MenuItem>\n              {\n                hospitals.map(hosp => (\n                  <MenuItem value={hosp['_id']} key={hosp['_id']}>{hosp.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Grid container spacing={6}>\n        <Grid item xs={5}>\n          <Typography variant={\"h5\"} className={styles.semiBold}>Alerts</Typography>\n          <Alerts reports={reports} loading={loading}/>\n        </Grid>\n        <Grid item xs className={styles.grid} style={{marginTop: 48}}>\n          <Grid container spacing={4} justify={\"space-between\"}>\n            <Grid item>\n              <KeyStat subtitle={\"Rooms cleaned today\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getCleanedRooms()} color={\"#F2C94C\"}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Average contamination index\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getContaminationIndex() + '%'}\n                       color={!loading && getColor()}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Green rooms\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getGreenRooms()} color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Red rooms\"} value={loading ? <CircularProgress color={\"secondary\"}/> : getRedRooms()}\n                       color={\"#EB5757\"}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <ReportsPerDay loading={loading} reports={reports}/>\n    </PageContainer>\n  )\n}\n\nexport default DashboardPage;","import React from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {TextField} from \"formik-material-ui\";\nimport {Formik, Form, Field} from \"formik\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport {authenticate} from \"../../utils/api\";\nimport {useHistory} from 'react-router-dom';\nimport Paper from \"@material-ui/core/Paper\";\nimport styles from './LoginPage.module.scss';\n\n\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n});\n\nconst LoginPage = () => {\n  const history = useHistory();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const handleSubmit = (vars, {setSubmitting}) => {\n    console.log(vars)\n    authenticate(vars.username, vars.password);\n    history.push('/dashboard');\n  }\n\n  return (\n    <PageContainer noToolbar>\n      <Paper variant={\"elevation\"} className={styles.form}>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n          {({isSubmitting, resetForm, values}) => (\n            <Form>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant={\"h4\"}>Login to spotless</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    variant={\"outlined\"}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    variant={\"outlined\"}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button type=\"submit\" color=\"primary\" variant={\"contained\"} className={styles.btn}>Sign in</Button>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    </PageContainer>\n  )\n}\n\nexport default LoginPage;","import LoginPage from './LoginPage';\nexport default LoginPage;\n","import {Grid, MenuItem, Typography} from \"@material-ui/core\";\nimport styles from \"./ShiftPicker.module.scss\";\nimport {Field} from \"formik\";\nimport {Select} from \"formik-material-ui\";\nimport React from \"react\";\n\n\nconst ShiftPicker = () => {\n  return (\n    <Grid item xs className={styles.row}>\n      <div>\n        <Typography variant={\"body1\"}>Shift start</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"startHour\">\n            {[...Array(24).keys()].map((number) => {\n              const num = number.toString().padStart(2, '0')\n              return <MenuItem key={number} value={num}>{num}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"h6\"}>:</Typography>\n          <Field component={Select} name=\"startMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n      <Typography variant={\"h4\"} style={{margin: '0 16px'}}>-</Typography>\n      <div>\n        <Typography variant={\"body1\"}>Shift end</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"endHour\">\n            {[...Array(23).keys()].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"body1\"}>:</Typography>\n          <Field component={Select} name=\"endMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n    </Grid>\n  )\n}\n\nexport default ShiftPicker;","import {Checkbox, TableCell, TableHead, TableRow, TableSortLabel} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction EnhancedTableHead(props) {\n  const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, type} = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {type && type !== 'noSelection' &&\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{'aria-label': 'select all desserts'}}\n          />\n        </TableCell>\n        }\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number,\n  headCells: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['noSelection', 'selection'])\n};\n\nexport default EnhancedTableHead;\n","export function descendingComparator(a, b, orderBy) {\n  if (typeof a[orderBy] === 'string' && typeof b[orderBy] === 'string') {\n    if (a[orderBy] === undefined) return 1;\n    if (b[orderBy].toUpperCase() < a[orderBy].toUpperCase()) {\n      return -1;\n    }\n    if (b[orderBy].toUpperCase() > a[orderBy].toUpperCase()) {\n      return 1;\n    }\n    return 0;\n  } else {\n    if (a[orderBy] === undefined) return 1;\n\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport function handleClick(event, item, selected, setSelected) {\n  const selectedIndex = selected.indexOf(item);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selected, item);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selected.slice(1));\n  } else if (selectedIndex === selected.length - 1) {\n    newSelected = newSelected.concat(selected.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selected.slice(0, selectedIndex),\n      selected.slice(selectedIndex + 1),\n    );\n  }\n\n  setSelected(newSelected);\n}","import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TableRow,\n  Typography,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions, TablePagination,\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AddCircleOutline, VisibilityOutlined} from \"@material-ui/icons\";\nimport {createCleaner, getCleaners, getRooms} from \"../../utils/api\";\nimport styles from './CleanersPage.module.scss';\nimport * as Yup from \"yup\";\nimport {Formik, Form, Field} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\nimport moment from \"moment\";\nimport EnhancedTableHead from \"../../components/RoomSelector/EnhancedTableHead\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {getComparator, stableSort} from \"../../utils/tableUtils\";\n\nconst CleanersPage = () => {\n  const [cleaners, setCleaners] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([getCleaners(), getRooms(null, null, true)])\n      .then((responses) => {\n        setCleaners(responses[0]);\n        setRooms(responses[1]);\n        setIsLoaded(true);\n      }, (err) => {\n        console.log(err);\n      });\n  }, [setOpen, isLoaded])\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Cleaners</Typography>\n        <Tooltip title=\"Add cleaner\">\n          <IconButton onClick={() => setOpen(true)}>\n            <AddCircleOutline/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {isLoaded ? <CleanersTable cleaners={cleaners} rooms={rooms}/> :\n        <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <AddCleanerDialog open={open} setOpen={setOpen} setIsLoaded={setIsLoaded} setSnackOpen={setSnackOpen}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          Cleaner created\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required')\n});\n\nconst AddCleanerDialog = ({open, setOpen, setIsLoaded, setSnackOpen}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    startHour: '08',\n    endHour: '16',\n    startMinutes: '00',\n    endMinutes: '00'\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const cleaner = await createCleaner(`${vars.firstName} ${vars.lastName}`,\n      `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`,\n      `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`);\n    console.log(cleaner);\n    setIsLoaded(false);\n    setSubmitting(false);\n    setSnackOpen(true);\n    setOpen(false);\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create a new cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"First name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Last name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Create cleaner\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CleanersTable = ({cleaners, rooms}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [page, setPage] = React.useState(0);\n  const [cleanersPerPage, setCleanersPerPage] = React.useState(15);\n\n  const viewCleaner = (cleaner) => {\n    const id = cleaner['_id'];\n    history.push({\n      pathname: `/cleaners/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setCleanersPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getCleaningProgress = (cleaner) => {\n    const assignedRooms = rooms.filter((room) => {\n      return room['assigned_cleaners'].length > 0 && room['assigned_cleaners'][0]['_id'] === cleaner['_id'];\n    });\n    const today = moment();\n    const numCleaned = assignedRooms.filter((room) => {\n      if (!room['last_cleaned']) {\n        return false;\n      }\n      return moment(room['last_cleaned']).isSame(today, 'date');\n    }).length;\n    cleaner['cleaning_progress'] = Math.round(((numCleaned / assignedRooms.length) * 100)) || 0 + '%';\n    return (\n      <Tooltip title={`${numCleaned}/${assignedRooms.length}`} placement={\"right\"}>\n        <Typography>{cleaner['cleaning_progress']}</Typography>\n      </Tooltip>\n    )\n  }\n\n  const getStatus = (cleaner) => {\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    cleaner.status = isBetween ? '' : 'Unavailable';\n    return cleaner.status;\n  }\n  const headCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name'},\n    {id: 'shift_start', numeric: true, disablePadding: false, label: 'Shift start'},\n    {id: 'shift_end', numeric: true, disablePadding: false, label: 'Shift end'},\n    {id: 'cleaning_progress', numeric: true, disablePadding: false, label: 'Cleaning progress'},\n    {id: 'current_location', numeric: true, disablePadding: false, label: 'Current location'},\n    {id: 'status', numeric: true, disablePadding: false, label: 'Status'},\n    {id: 'action', numeric: false, disablePadding: false, label: 'Action'},\n  ];\n  return (\n    <Paper>\n      <TableContainer>\n        <Table size={'small'}>\n          <EnhancedTableHead classes={classes} onRequestSort={handleRequestSort} order={order} orderBy={orderBy}\n                             headCells={headCells}/>\n          <TableBody>\n            {stableSort(cleaners, getComparator(order, orderBy))\n              .slice(page * cleanersPerPage, page * cleanersPerPage + cleanersPerPage)\n              .map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    tabIndex={-1}\n                    key={labelId}\n                    style={{height: '33px'}}\n                  >\n                    <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                    <TableCell align=\"right\">{row['shift_start']}</TableCell>\n                    <TableCell align=\"right\">{row['shift_end']}</TableCell>\n                    <TableCell align=\"right\">{getCleaningProgress(row)}</TableCell>\n                    <TableCell align=\"right\">{}</TableCell>\n                    <TableCell align=\"right\">{getStatus(row)}</TableCell>\n                    <TableCell>\n                      <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                        viewCleaner(row)\n                      }}><VisibilityOutlined/></IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 15, 25, 50]}\n        component=\"div\"\n        count={cleaners.length}\n        rowsPerPage={cleanersPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\n\nexport default CleanersPage;","import CleanersPage from './CleanersPage';\nexport default CleanersPage;\n","import React, {useEffect, useState} from 'react';\nimport {AppBar, Typography, Tabs, Toolbar as MaterialToolbar, Tab, IconButton} from \"@material-ui/core\";\nimport {Link, useLocation, matchPath, useHistory} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport styles from './Toolbar.module.scss';\nimport {\n  ArrowBackRounded, AssessmentRounded,\n  BusinessRounded,\n  DashboardRounded, ExitToApp,\n  FormatListBulletedRounded,\n  PeopleRounded, Settings\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {getUser, logout} from \"../../utils/api\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst NavTabs = withStyles({\n  root: {\n    width: '100%',\n    flexGrow: 1\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    marginBottom: '4px',\n    '& > span': {\n      width: '40%',\n      backgroundColor: '#00b0ff',\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n  }\n})((props) => <Tabs {...props} TabIndicatorProps={{children: <span/>}}/>);\n\nconst mountTabValueFactory = (location, tabId) => (route) => !!matchPath(location.pathname, {\n  path: route,\n  exact: false,\n  strict: false,\n}) ? tabId : -1;\n\nconst Toolbar = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const tabId = 'myTabId';\n  const getTabValue = mountTabValueFactory(location, tabId);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [user, setUser] = useState('');\n\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n  }, []);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position={\"static\"}>\n      <MaterialToolbar variant={\"dense\"}>\n        <div className={styles.toolbar}>\n          {location.pathname.split('/').length > 2 ? (\n            <Tooltip title={'Go Back'}>\n              <IconButton onClick={() => {\n                history.goBack()\n              }}>\n                <ArrowBackRounded className={styles.svg}/>\n              </IconButton>\n            </Tooltip>\n          ) : <div style={{width: 40}}/>}\n          <Typography variant={\"h6\"} className={styles.name}>Spotless</Typography>\n        </div>\n        <NavTabs variant={\"fullWidth\"} value={tabId}>\n          <Tab label={<div className={styles.tab}><DashboardRounded fontSize={\"small\"}/> Dashboard</div>}\n               value={getTabValue(\"/dashboard\")} component={Link} to={\"/dashboard\"}\n               disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><FormatListBulletedRounded fontSize={\"small\"}/> Assignments</div>}\n               value={getTabValue(\"/assignments\")} component={Link} to={\"/assignments\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><PeopleRounded fontSize={\"small\"}/> Cleaners</div>}\n               value={getTabValue(\"/cleaners\")} component={Link} to={\"/cleaners\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><BusinessRounded fontSize={\"small\"}/> Rooms</div>}\n               value={getTabValue(\"/rooms\")} component={Link} to={\"/rooms\"} disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><AssessmentRounded fontSize={\"small\"}/> Analysis</div>}\n               value={getTabValue(\"/analysis\")} component={Link} to={\"/analysis\"}\n               disableRipple={true} className={styles.tab}/>\n        </NavTabs>\n        <Tooltip title={\"Open menu\"}>\n          <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <MenuIcon color={\"secondary\"}/>\n          </IconButton>\n        </Tooltip>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {user.superAdmin &&\n          <MenuItem onClick={() => {\n            handleClose();\n            history.push('/simulator');\n          }}>\n            <ListItemIcon>\n              <Settings fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Simulator\"/>\n          </MenuItem>}\n\n          <MenuItem onClick={() => {\n            handleClose();\n            logout();\n            history.push('/');\n          }}>\n            <ListItemIcon>\n              <ExitToApp color={\"secondary\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Sign out\"/>\n          </MenuItem>\n        </Menu>\n      </MaterialToolbar>\n    </AppBar>\n  );\n}\n\nexport default Toolbar;","import Toolbar from './Toolbar';\nexport default Toolbar;","import AnalysisPage from './AnalysisPage';\nexport default AnalysisPage;\n","import React from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Typography} from \"@material-ui/core\";\n\nconst AnalysisPage = () => {\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h5\"}>Analysis</Typography>\n    </PageContainer>\n  )\n}\n\nexport default AnalysisPage;","import React, {useEffect, useState} from 'react';\nimport {getHospitals, getRooms} from \"../../utils/api\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport moment from \"moment\";\nimport {VisibilityOutlined} from \"@material-ui/icons\";\nimport {useHistory} from 'react-router-dom';\nimport styles from \"./RoomsPage.module.scss\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getRoomTypeProp} from \"../../utils/utils\";\nimport hospitalImg from \"../../assets/hospital.png\";\n\nconst RoomsPage = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [hospitals, setHospitals] = useState([]);\n  const [hospital, setHospital] = useState('');\n\n  useEffect(() => {\n    getHospitals()\n      .then((result) => {\n          console.log(result);\n          setIsLoaded(true);\n          setHospitals(result);\n        },\n        (err) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(err);\n        })\n  }, []);\n\n  const hospitalSelected = (event) => {\n    setHospital(event.target.value);\n    getRooms(event.target.value['_id'])\n      .then((rooms) => {\n          console.log(rooms);\n          setRooms(rooms);\n        },\n        (error) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }\n\n  return (\n    <PageContainer>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Rooms</Typography>\n        {!isLoaded ? <CircularProgress color=\"secondary\"/> :\n          (\n            <FormControl variant={'outlined'} style={{minWidth: '320px', margin: '8px'}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Select hospital</InputLabel>\n              <Select label=\"Select Hospital\" onChange={hospitalSelected} value={hospital} style={{textAlign: \"start\"}}>\n                <MenuItem value={{}}>\n                  <em>None</em>\n                </MenuItem>\n                {\n                  hospitals.map(hosp => (\n                    <MenuItem value={hosp} key={hosp['_id']}>{hosp.name}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          )\n        }\n      </div>\n      <img src={hospitalImg} alt=\"hospital\" className={styles.map} />\n      {rooms.length > 0 && (\n        <RoomTable rooms={rooms}/>\n      )}\n      {error && <p>ERROR</p>}\n    </PageContainer>\n  )\n}\n\nconst RoomTable = ({rooms}) => {\n  const history = useHistory();\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const getPatient = (patient) => {\n    return patient === \"<empty>\" ? 'No' : 'Yes';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table size={\"small\"}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Building</TableCell>\n            <TableCell align=\"right\">Floor</TableCell>\n            <TableCell align=\"right\">Contamination index</TableCell>\n            <TableCell align=\"right\">Has Patient</TableCell>\n            <TableCell align=\"right\">Room type</TableCell>\n            <TableCell align=\"right\">Last cleaned</TableCell>\n            <TableCell>Action</TableCell>\n          </TableRow>\n         </TableHead>\n        <TableBody>\n          {rooms.map((row) => (\n            <TableRow key={row['_id']}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.building}</TableCell>\n              <TableCell align=\"right\">{row.floor}</TableCell>\n              <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n              <TableCell align=\"right\">{getPatient(row.patient)}</TableCell>\n              <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n              <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n              <TableCell>\n                <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                  openRoom(row)\n                }}><VisibilityOutlined/></IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default RoomsPage;","import RoomsPage from './RoomsPage';\nexport default RoomsPage;\n","import CleanerSelect from './CleanerSelect';\nexport default CleanerSelect;","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {getCleaners} from \"../../utils/api\";\nimport styles from \"./CleanerSelect.module.scss\";\n\nconst CleanerSelect = ({onChange, style}) => {\n  const [options, setOptions] = useState([]);\n  const [openSelect, setOpenSelect] = useState(false);\n  const [cleaner, setCleaner] = useState(null);\n  const loading = openSelect && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const clnrs = await getCleaners();\n\n      if (active) {\n        setOptions(clnrs);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  const onSelectChange = (event, newValue) => {\n    setCleaner(newValue);\n    onChange(event, newValue);\n  }\n\n  return (\n    <Autocomplete\n      open={openSelect}\n      onOpen={() => {\n        setOpenSelect(true);\n      }}\n      onClose={() => {\n        setOpenSelect(false);\n      }}\n      className={styles.autocomplete}\n      style={style}\n      getOptionLabel={(option) => option.name || ''}\n      options={options}\n      loading={loading}\n      value={cleaner}\n      onChange={onSelectChange}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Cleaner\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nCleanerSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  style: PropTypes.object\n}\n\nexport default CleanerSelect;","import React, {useState} from \"react\";\nimport {assignRoomsToCleaner, unAssignRooms} from \"../../utils/api\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\n\nexport const AssignCleanerDialog = ({open, setOpen, selected, setSnackOpen, onClose, setSnackText}) => {\n  const [cleaner, setCleaner] = useState(null);\n\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const handleSubmit = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n    handleClose();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}>\n      <DialogTitle id=\"form-dialog-title\">Select a cleaner</DialogTitle>\n      <DialogContent>\n        <CleanerSelect onChange={(event, newValue) => {\n          setCleaner(newValue)\n        }}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleSubmit} disabled={cleaner === ''}>\n          Assign\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {ROOM_TYPES} from \"../../utils/constants\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst TableFilters = ({rooms, setRooms}) => {\n  const [building, setBuilding] = React.useState('');\n  const [floor, setFloor] = React.useState('');\n  const [roomType, setRoomType] = React.useState('');\n  const [assigned, setAssigned] = React.useState(true);\n\n  const filter = (building, roomType, floor, assigned) => {\n    let filtered = rooms;\n    filtered = filtered.filter((room) => {\n      let valid = true;\n      if (building) {\n        valid = room.building === building;\n      }\n      if (floor) {\n        valid = room.floor === floor && valid;\n      }\n      if (roomType) {\n        valid = room['room_type'] === roomType.key && valid;\n      }\n      if (!assigned) {\n        valid = room['assigned_cleaners'].length === 0 && valid;\n      }\n      return valid;\n    });\n    setRooms(filtered);\n  }\n\n  const getBuildings = () => {\n    return [...new Set(rooms.map(room => {\n      return room.building;\n    }))];\n  };\n\n  const getFloors = () => {\n    return [...new Set(rooms.map(room => {\n      return room.floor;\n    }))];\n  }\n  return (\n    <>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"building\">Building</InputLabel>\n        <Select label=\"Building\" onChange={(event) => {\n          setBuilding(event.target.value);\n          filter(event.target.value, roomType, floor, assigned);\n        }} value={building}>\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          {getBuildings().map(building => (\n            <MenuItem value={building} key={building}>{building}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"floor\">Floor</InputLabel>\n        <Select label=\"Floor\" onChange={(event) => {\n          setFloor(event.target.value);\n          filter(building, roomType, event.target.value, assigned);\n        }} value={floor}>\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          {getFloors().map(floor => (\n            <MenuItem value={floor} key={floor}>{floor}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"room-type\">Room type</InputLabel>\n        <Select label=\"Room type\" onChange={(event) => {\n          setRoomType(event.target.value);\n          filter(building, event.target.value, floor, assigned);\n        }} value={roomType}>\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          {Object.keys(ROOM_TYPES).map(type => (\n            <MenuItem value={ROOM_TYPES[type]}\n                      key={ROOM_TYPES[type].displayName}>{ROOM_TYPES[type].displayName}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControlLabel control={<Checkbox checked={assigned} onChange={(event, checked) => {\n        setAssigned(checked);\n        filter(building, roomType, floor, checked);\n      }}/>} label=\"Show assigned\"/>\n    </>\n  );\n}\n\nexport default TableFilters;","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport {getRooms, unAssignRooms} from \"../../utils/api\";\nimport {VisibilityOutlined, FilterList, Close} from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport styles from \"./AssignmentsPage.module.scss\"\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {AssignCleanerDialog} from \"./AssignCleanerDialog\";\nimport Link from \"@material-ui/core/Link\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport {getRoomTypeProp, getStatus, mergeCleaners} from \"../../utils/utils\";\nimport TableFilters from \"./TableFilters\";\nimport EnhancedTableHead from \"../../components/RoomSelector/EnhancedTableHead\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner_name', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left',\n    flexDirection: 'column'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  filters: {\n    minHeight: 96\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, selected, setSelected, setSnackOpen, setSnackText, getData, rooms, setRooms} = props;\n  const [open, setOpen] = React.useState(false);\n  const [filter, showFilters] = React.useState(false);\n  const selectedWithCleaner = selected.filter((room) => {\n    return room['assigned_cleaners'].length > 0;\n  });\n\n  const removeAssignments = async () => {\n    await unAssignRooms(selectedWithCleaner);\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n    setSelected([]);\n    getData(true);\n  }\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n        [classes.filters]: filter && numSelected === 0\n      })}\n    >\n      <div className={styles.row}>\n        {numSelected > 0 ? (\n          <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                      style={{fontWeight: 600}}>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n            Select rows to assign to cleaner\n          </Typography>\n        )}\n        {numSelected > 0 ? (\n          <>\n            {selectedWithCleaner.length > 0 &&\n            <Tooltip title=\"Remove room assignments\">\n              <Button variant={'contained'} startIcon={<Close/>} className={styles.critical}\n                      style={{flexBasis: '300px', marginRight: 32}} onClick={removeAssignments}>Remove assignments\n              </Button>\n            </Tooltip>\n            }\n            <Tooltip title=\"Assign to cleaner\">\n              <Button variant={'contained'} color={'secondary'} style={{flexBasis: '180px'}} onClick={() => {\n                setOpen(true);\n              }}>Assign rooms</Button>\n            </Tooltip>\n          </>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\" onClick={() => {\n              showFilters(!filter);\n            }}>\n              <FilterList color={filter ? 'secondary' : 'inherit'}/>\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n      {filter && numSelected === 0 &&\n      <div className={styles.row}>\n        <TableFilters rooms={rooms} setRooms={setRooms}/>\n      </div>\n      }\n      <AssignCleanerDialog open={open} setOpen={setOpen} selected={selected} onClose={() => {\n        setSelected([]);\n        getData(true);\n      }} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function AssignmentsPage() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(25);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n  const [data, getData] = React.useState(true);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    if (data) {\n      getRooms(null, null, true)\n        .then((rooms) => {\n            rooms = mergeCleaners(rooms);\n            setRooms(rooms);\n            setOrigRooms(rooms);\n            setIsLoaded(true);\n            getData(false);\n          },\n          (error) => {\n            setIsLoaded(true);\n            console.log(error);\n          });\n    }\n  }, [data]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  const getCleaner = (row) => {\n    if (!row.cleaner) {\n      return row['cleaner_name'];\n    }\n    const cleaner = row.cleaner;\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${cleaner['_id']}`,\n                    state: {id: cleaner['_id']}\n                  }}>\n      {cleaner.name}\n    </Link>);\n  }\n\n  return (\n    <PageContainer className={classes.root}>\n      {isLoaded ?\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSnackOpen={setSnackOpen}\n                                setSelected={setSelected} setSnackText={setSnackText} getData={getData}\n                                rooms={origRooms} setRooms={setRooms}/>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rooms.length}\n                headCells={headCells}\n                type={\"selection\"}\n              />\n              <TableBody>\n                {stableSort(rooms, getComparator(order, orderBy))\n                  .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row, selected, setSelected)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{'aria-labelledby': labelId}}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.building}</TableCell>\n                        <TableCell align=\"right\">{row.floor}</TableCell>\n                        <TableCell>{getCleaner(row)}</TableCell>\n                        <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                        <TableCell align=\"right\">{row['contamination_index'].toFixed(2)}</TableCell>\n                        <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                        <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton color={\"secondary\"} size={\"small\"}\n                                      onClick={() => {\n                                        openRoom(row)\n                                      }}>\n                            <VisibilityOutlined/>\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={rooms.length}\n            rowsPerPage={roomsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n","import AssignmentsPage from './AssignmentsPage';\nexport default AssignmentsPage;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport {Divider, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\n\nconst RoomDetailsCard = ({room}) => {\n\n  const getVariant = (contamination) => {\n    let variant = 'neutral';\n    if (contamination >= 60) {\n      variant = 'critical';\n    } else if (contamination >= 30) {\n      variant = 'med';\n    } else if (contamination < 30) {\n      variant = 'good';\n    }\n    return variant;\n  }\n  return (\n    <Card className={styles.card}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold}>Room details</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <Typography variant={\"body1\"} className={styles.semiBold}>Building {room.building}</Typography>\n        <Typography variant={\"body2\"} className={styles.medium} color=\"textSecondary\">Floor {room.floor}</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>{getRoomTypeProp(room, 'displayName')}</Typography>\n          <Typography\n            variant={\"body2\"}\n            className={styles.semiBold}>\n            Cleaning time: {getRoomTypeProp(room, 'cleaningTime')} min\n          </Typography>\n        </div>\n        <Typography variant={\"body2\"} className={styles.medium}\n                    color=\"textSecondary\">Cleaning {getRoomTypeProp(room, 'frequency')} times / week\n        </Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>Contamination index</Typography>\n          <Typography variant={\"body1\"}\n                      className={[styles[getVariant(room['contamination_index'])], styles.medium].join(' ')}>{room['contamination_index']}</Typography>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nRoomDetailsCard.propTypes = {\n  room: PropTypes.object.isRequired\n}\n\nexport default RoomDetailsCard;","import React, {useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport StatusDot from \"../../components/StatusDot\";\nimport PropTypes from 'prop-types';\nimport {Button, IconButton, Typography} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\nimport moment from \"moment\";\nimport {ClearOutlined} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {assignRoom, unAssignRoom} from \"../../utils/api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\n\nconst RoomCleanerCard = ({room, cleaner, setCleaner}) => {\n  const [newCleaner, setNewCleaner] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n\n  const hasCleaner = Object.keys(cleaner).length !== 0;\n  const getColor = () => {\n    if (!hasCleaner) return 'neutral';\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    return isBetween ? 'good' : 'critical';\n  }\n\n  const removeCleanerAssignment = async () => {\n    await unAssignRoom(room['_id'], cleaner['_id']);\n    setCleaner({});\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n  }\n\n  const assignNewCleaner = async () => {\n    await assignRoom(room['_id'], newCleaner['_id']);\n    setCleaner(newCleaner);\n    setNewCleaner({});\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <Card className={styles.card} style={{height: 'min-content'}}>\n      <div className={styles.cardContent}>\n        <div className={styles.row}>\n          <StatusDot variant={getColor()} size={'tiny'} tooltip={'Cleaner name'}/>\n          {hasCleaner ? (\n              <>\n                <Link component={RouterLink} style={{marginLeft: 16}} color=\"secondary\"\n                      to={{\n                        pathname: `/cleaners/${cleaner['_id']}`,\n                        state: {id: cleaner['_id']}\n                      }}>\n                  <Typography variant={'h6'} className={styles.semiBold}>{cleaner.name}</Typography>\n                </Link>\n                <Tooltip title=\"Remove assignment\">\n                  <IconButton style={{marginLeft: 'auto'}} size={\"small\"} onClick={removeCleanerAssignment}>\n                    <ClearOutlined/>\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n            :\n            <CleanerSelect onChange={(event, newValue) => setNewCleaner(newValue)} style={{marginLeft: 16}}/>\n          }\n        </div>\n        {newCleaner && Object.keys(newCleaner).length !== 0 && (\n          <>\n            <Divider className={styles.divider}/>\n            <div className={styles.row}>\n              <Button onClick={assignNewCleaner} variant={\"contained\"} color={\"secondary\"}\n                      className={styles.btn}>Assign</Button>\n            </div>\n          </>\n        )}\n      </div>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>{snackText}</Alert>\n      </Snackbar>\n    </Card>\n  )\n}\n\nRoomCleanerCard.propTypes = {\n  room: PropTypes.object.isRequired,\n  cleaner: PropTypes.object\n}\n\nexport default RoomCleanerCard;","import React from 'react';\nimport styles from './RoomDetailsPage.module.scss';\nimport {Divider, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    lineHeight: '200%'\n  },\n});\nconst CommentsList = ({reports}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={styles.comments}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold} style={{marginBottom: 16}}>Cleaner comments:</Typography>\n        {reports.length > 0 ? (\n          reports.reduce((result, report) => {\n            const showReport = report.comments !== '';\n            if (showReport) {\n              const time = moment(report['cleaning_time']);\n              result.push(\n                <div key={report['_id']} className={styles.comment}>\n                  <Divider />\n                  <Typography variant={\"h6\"} className={classes.root}>{time.format('D MMM, YYYY')}</Typography>\n                  <Typography variant={\"h6\"} className={[styles.semiBold, styles.author, classes.root].join(' ')}>{report['cleaner_name']}</Typography>\n                  <Typography variant={\"body1\"} className={classes.root}>{report.comments}</Typography>\n                </div>\n              );\n            }\n            return result;\n          }, [])\n        ) :\n        <Typography variant={\"body1\"} className={styles.semiBold}>No comments</Typography>\n        }\n      </div>\n    </Card>\n  );\n}\n\nexport default CommentsList;","import React from \"react\";\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {Check, CloseRounded, VisibilityOutlined} from \"@material-ui/icons\";\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\nimport moment from \"moment\";\nimport styles from './CleaningReportTable.module.scss';\nimport Link from \"@material-ui/core/Link\";\nimport PropTypes from 'prop-types';\nimport {getComparator, stableSort} from \"../../utils/tableUtils\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport EnhancedTableHead from \"../RoomSelector/EnhancedTableHead\";\n\nfunction ReportsTableHead(props) {\n  const {classes, order, orderBy, onRequestSort, type} = props;\n  const headCells = [\n    {id: 'cleaning_time', numeric: true, disablePadding: false, label: 'Cleaning time'},\n    {id: 'cleaning_successful', numeric: false, disablePadding: false, label: 'Cleaning successful'},\n    {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n  ];\n  if (type === 'room') {\n    headCells.unshift({id: 'cleaner', numeric: false, disablePadding: false, label: 'Cleaner'});\n  } else {\n    headCells.unshift({id: 'room', numeric: false, disablePadding: false, label: 'Room'});\n  }\n\n  return (\n    <EnhancedTableHead\n      classes={classes}\n      order={order}\n      orderBy={orderBy}\n      onRequestSort={onRequestSort}\n      headCells={headCells}\n    />\n  );\n}\n\nReportsTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['room', 'cleaner']).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CleaningReportsTable = ({reports, type}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [page, setPage] = React.useState(0);\n  const [reportsPerPage, setReportsPerPage] = React.useState(10);\n  const viewReport = (report) => {\n    const id = report['_id'];\n    history.push({\n      pathname: `/rooms/reports/${id}`,\n      state: {id}\n    })\n  }\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good}/>) : (<CloseRounded color={\"error\"}/>);\n  }\n\n  const getCleaner = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n      {report['cleaner_name']}\n    </Link>);\n  }\n\n  const getRoom = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/rooms/${report['room_id']}`,\n                    state: {id: report['room_id']}\n                  }}>\n      {report['room_name']}\n    </Link>);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setReportsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <Typography variant={\"h5\"} style={{margin: '16px 0'}} className={styles.semiBold}>Past cleaning\n        reports</Typography>\n      {reports.length > 0 ?\n        <Paper className={classes.paper}>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <ReportsTableHead\n                classes={classes}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                type={type}\n              />\n              <TableBody>\n                {stableSort(reports, getComparator(order, orderBy))\n                  .slice(page * reportsPerPage, page * reportsPerPage + reportsPerPage)\n                  .map((row, index) => {\n                    const labelId = `enhanced-table-checkbox-${index}`;\n                    return (\n                      <TableRow\n                        hover\n                        tabIndex={-1}\n                        key={labelId}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell component=\"th\" id={labelId} scope=\"row\">\n                          {type === 'room' ? getCleaner(row) : getRoom(row)}\n                        </TableCell>\n                        <TableCell align=\"right\">{moment(row['cleaning_time']).format('DD.MM.YYYY HH:mm')}</TableCell>\n                        <TableCell>{getIcon(row['cleaning_succesful'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton color={\"secondary\"} size={\"small\"}\n                                      onClick={() => {\n                                        viewReport(row)\n                                      }}>\n                            <VisibilityOutlined/>\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={reports.length}\n            rowsPerPage={reportsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <Typography variant={\"h6\"}>No cleaning Reports</Typography>\n      }\n    </div>\n  );\n}\nCleaningReportsTable.propTypes = {\n  reports: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['cleaner', 'room']).isRequired\n}\nexport default CleaningReportsTable;","import RoomDetailsPage from './RoomDetailsPage';\nexport default RoomDetailsPage;","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {Button, Typography} from \"@material-ui/core\";\nimport {getAssignedCleaners, getReports, getRoom, getRoomHeatmap} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport RoomDetailsCard from \"./RoomDetailsCard\";\nimport RoomCleanerCard from \"./RoomCleanerCard\";\nimport CommentsList from \"./RoomReportComments\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable/CleaningReportsTable\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst RoomDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [roomLoaded, setRoomLoaded] = useState(false);\n  const [room, setRoom] = useState({});\n  const [reports, setReports] = useState([]);\n  const [cleaner, setCleaner] = useState({});\n  const [showMap, setShowMap] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getRoom(params.id)\n      .then((room) => {\n          setRoom(room);\n          setRoomLoaded(true);\n        },\n        (error) => console.log(error));\n    getAssignedCleaners(params.id)\n      .then((cleaners) => {\n        if (cleaners.length >= 1) {\n          setCleaner(cleaners[0]);\n        }\n      }, (error) => console.log(error));\n    getReports(params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id]);\n\n  useEffect(() => {\n    if (showMap) {\n      getRoomHeatmap(params.id, 'contamination')\n        .then((response) => {\n          const aux = document.getElementById('aux');\n          const canvas = document.getElementById('main');\n          let scaler = 1n;\n          if (room['is_simulated']) {\n            if (room['contamination_index'] >= 60) {\n              scaler = 20n;\n            } else if (room['contamination_index'] >= 30) {\n              scaler = 10n;\n            } else {\n              scaler = 5n;\n            }\n          }\n          // eslint-disable-next-line no-undef\n          update_img(response, aux, canvas, scaler);\n        })\n        .catch((err) => {\n          console.log(err.message)\n          setErrorMsg(err.message);\n          setError(true);\n        })\n    }\n  }, [params.id, showMap])\n  const navigateToMap = () => {\n    history.push({\n      pathname: `/rooms`,\n      state: {id: params.id, action: 'show'}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(false);\n    setShowMap(false);\n  };\n\n  return (\n    <PageContainer style={{width: '65%'}}>\n      {roomLoaded ? (\n        <>\n          <div className={styles.titleRow}>\n            <Typography variant={\"h4\"}>Room: {room.name}</Typography>\n            <Button variant={\"text\"} onClick={navigateToMap} size={\"small\"}>Show on map</Button>\n          </div>\n          <div className={styles.content}>\n            <div className={styles.detailsRow}>\n              <RoomDetailsCard room={room}/>\n              <RoomCleanerCard room={room} cleaner={cleaner} setCleaner={setCleaner}/>\n            </div>\n            <CommentsList reports={reports}/>\n            <div className={styles.row}>\n              <Typography variant={\"h5\"}>Room map</Typography>\n              <Button variant={\"outlined\"} color={\"primary\"} onClick={() => setShowMap(!showMap)}>\n                {showMap ? 'Hide map' : 'Show Map'}\n              </Button>\n            </div>\n            {showMap && (\n              <>\n                <canvas id=\"aux\" style={{display: 'none'}}/>\n                <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n              </>\n            )}\n            <CleaningReportsTable reports={reports} type={'room'}/>\n          </div>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nexport default RoomDetailsPage;","import CleaningReportsTable from './CleaningReportsTable';\nexport default CleaningReportsTable;","import * as Yup from \"yup\";\nimport {editCleaner} from \"../../utils/api\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport {Field, Form, Formik} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required()\n});\n\nconst EditCleanerDialog = ({cleaner, open, setOpen, onSave}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n  const start = cleaner['shift_start'].split(':');\n  const end = cleaner['shift_end'].split(':');\n\n  const initialValues = {\n    name: cleaner.name,\n    startHour: start.length > 0 ? start[0] : '',\n    endHour: end.length > 0 ? end[0] : '',\n    startMinutes: start.length > 0 ? start[1] : '',\n    endMinutes: end.length > 0 ? end[1] : ''\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const edited = vars;\n    edited['_id'] = cleaner['_id'];\n    edited['shift_start'] = `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`;\n    edited['shift_end'] = `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`;\n    const res = await editCleaner(edited);\n    console.log(res);\n    setSubmitting(false);\n    setOpen(false);\n    onSave();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Edit cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nexport default EditCleanerDialog;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {assignRoomsToCleaner, getRooms, unAssignRooms} from \"../../utils/api\";\nimport styles from \"./RoomSelector.module.scss\";\nimport {\n  Button,\n  Checkbox, Dialog, DialogActions, DialogContent,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow, Toolbar, Tooltip, Typography\n} from \"@material-ui/core\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport {getRoomTypeProp, getStatus, mergeCleaners} from \"../../utils/utils\";\nimport {FilterList, VisibilityOutlined} from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport moment from \"moment\";\nimport {lighten, makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport TableFilters from \"../../pages/AssignmentsPage/TableFilters\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner_name', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left',\n    flexDirection: 'column'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  filters: {\n    minHeight: 96\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, rooms, setRooms} = props;\n  const [filter, showFilters] = React.useState(false);\n\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n        [classes.filters]: filter\n      })}\n    >\n      <div className={styles.row}>\n        {numSelected > 0 ? (\n          <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                      style={{fontWeight: 600}}>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n            Assign rooms to cleaner\n          </Typography>\n        )}\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" onClick={() => {\n            showFilters(!filter);\n          }}>\n            <FilterList color={filter ? 'secondary' : 'inherit'}/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {filter &&\n      <div className={styles.row}>\n        <TableFilters rooms={rooms} setRooms={setRooms}/>\n      </div>\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  setRooms: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst RoomSelector = ({cleaner, onClose, open, setOpen, setSnackOpen, setSnackText}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(10);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    getRooms(null, null, true)\n      .then((rooms) => {\n          rooms = mergeCleaners(rooms);\n          console.log(rooms);\n          setRooms(rooms);\n          setOrigRooms(rooms);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const getCleaner = (room) => {\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (!cleaner) {\n      return '-';\n    }\n    return cleaner.name;\n  }\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const assign = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Rooms assigned');\n    setSnackOpen(true);\n    onClose();\n    setOpen(false);\n  }\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}\n              maxWidth={\"lg\"}>\n        <DialogContent>\n          {isLoaded ?\n            <Paper className={classes.paper}>\n              <EnhancedTableToolbar numSelected={selected.length} rooms={origRooms} setRooms={setRooms}/>\n              <TableContainer>\n                <Table\n                  className={classes.table}\n                  aria-labelledby=\"tableTitle\"\n                  aria-label=\"enhanced table\"\n                  size={'small'}\n                >\n                  <EnhancedTableHead\n                    classes={classes}\n                    numSelected={selected.length}\n                    order={order}\n                    orderBy={orderBy}\n                    onSelectAllClick={handleSelectAllClick}\n                    onRequestSort={handleRequestSort}\n                    rowCount={rooms.length}\n                    headCells={headCells}\n                    type={\"selection\"}\n                  />\n                  <TableBody>\n                    {stableSort(rooms, getComparator(order, orderBy))\n                      .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                      .map((row, index) => {\n                        const isItemSelected = isSelected(row);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                        return (\n                          <TableRow\n                            hover\n                            onClick={(event) => handleClick(event, row, selected, setSelected)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.name}\n                            selected={isItemSelected}\n                            style={{height: '33px'}}\n                          >\n                            <TableCell padding=\"checkbox\">\n                              <Checkbox\n                                checked={isItemSelected}\n                                inputProps={{'aria-labelledby': labelId}}\n                              />\n                            </TableCell>\n                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                              {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.building}</TableCell>\n                            <TableCell align=\"right\">{row.floor}</TableCell>\n                            <TableCell>{getCleaner(row)}</TableCell>\n                            <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                            <TableCell align=\"right\">{row['contamination_index'].toFixed(2)}</TableCell>\n                            <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                            <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                            <TableCell align=\"right\">\n                              <IconButton color={\"secondary\"} size={\"small\"}\n                                          onClick={() => {\n                                            openRoom(row)\n                                          }}>\n                                <VisibilityOutlined/>\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 50]}\n                component=\"div\"\n                count={rooms.length}\n                rowsPerPage={roomsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </Paper>\n            : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={assign} disabled={selected.length === 0} variant={\"contained\"}>\n            Assign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nRoomSelector.propTypes = {\n  cleaner: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired,\n  setSnackText: PropTypes.func.isRequired\n}\n\nexport default RoomSelector;","import RoomSelector from './RoomSelector';\nexport default RoomSelector;","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport {getAssignedRooms, getCleaner, getReports, unAssignRoom, deleteCleaner as removeCleaner} from \"../../utils/api\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AccountCircleRounded, AddCircleOutline, Clear, DeleteForever, Edit} from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {getRoomTypeProp, getStatus} from \"../../utils/utils\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable\";\nimport styles from './CleanerDetailsPage.module.scss';\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport EditCleanerDialog from \"./EditCleanerDialog\";\nimport RoomSelector from \"../../components/RoomSelector\";\n\nconst CleanerDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [cleanerLoaded, setCleanerLoaded] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [cleaner, setCleaner] = useState({});\n  const [reports, setReports] = useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [data, getData] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('Cleaned deleted');\n  const [showRoomSelector, setShowRoomSelector] = useState(false);\n\n  const handleConfirmClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const deleteCleaner = async () => {\n    await removeCleaner(cleaner['_id']);\n    setSnackText('Cleaner Deleted');\n    setSnackOpen(true);\n    history.goBack();\n  }\n\n  const saved = () => {\n    setSnackText('Saved');\n    setSnackOpen(true);\n    getData(true);\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  useEffect(() => {\n    getCleaner(params.id)\n      .then((room) => {\n          console.log(room);\n          setCleaner(room);\n          setCleanerLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        });\n    getReports(null, params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id, data]);\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.row} style={{justifyContent: 'space-between'}}>\n        <Typography variant={\"h5\"} className={styles.semiBold}>Cleaner details</Typography>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant={\"outlined\"}\n                color={\"primary\"}>\n          Actions\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => {\n            handleClose();\n            setEditing(true);\n          }}>\n            <ListItemIcon>\n              <Edit fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Edit cleaner\"/>\n          </MenuItem>\n          <MenuItem onClick={() => {\n            setOpen(true);\n            handleClose()\n          }}>\n            <ListItemIcon>\n              <DeleteForever color={\"error\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Delete cleaner\"/>\n          </MenuItem>\n        </Menu>\n      </div>\n      {cleanerLoaded ? (\n        <>\n          <div className={[styles.row, styles.content].join(' ')}>\n            <AccountCircleRounded className={styles.avatar}/>\n            <div>\n              <Typography variant={\"h6\"} className={styles.semiBold}>Cleaner name: {cleaner.name}</Typography>\n              <Typography variant={\"body1\"} color={\"textSecondary\"}>\n                Shift: {cleaner['shift_start']} - {cleaner['shift_end']}\n              </Typography>\n            </div>\n          </div>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"} className={styles.semiBold}>Assigned Rooms</Typography>\n            <Tooltip title={\"Add assignments\"}>\n              <IconButton onClick={() => {\n                setShowRoomSelector(true);\n              }}>\n                <AddCircleOutline/>\n              </IconButton>\n            </Tooltip>\n          </div>\n          <AssignmentsTable cleaner={cleaner} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n          <CleaningReportsTable reports={reports} type={\"cleaner\"}/>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete cleaner\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the cleaner?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n            handleConfirmClose();\n            deleteCleaner();\n          }} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {cleanerLoaded &&\n      <EditCleanerDialog cleaner={cleaner} open={editing} setOpen={setEditing} onSave={saved}/>}\n      <RoomSelector setSnackText={setSnackText} open={showRoomSelector} setSnackOpen={setSnackOpen}\n                    setOpen={setShowRoomSelector} onClose={() => {\n        getData(true);\n      }} cleaner={cleaner}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nconst AssignmentsTable = ({cleaner, setSnackOpen, setSnackText}) => {\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getAssignedRooms(cleaner['_id'])\n      .then((assignments) => {\n        console.log(assignments);\n        setAssignments(assignments);\n        setLoading(false);\n      }, (error) => {\n        console.log(error);\n      })\n  }, [cleaner]);\n\n  const removeAssignment = async (room) => {\n    const response = await unAssignRoom(room['_id'], cleaner['_id']);\n    console.log(response);\n    const newAssignments = [...assignments];\n    newAssignments.splice(assignments.indexOf(room), 1);\n    setAssignments(newAssignments);\n    setSnackText('Assignment removed');\n    setSnackOpen(true);\n  }\n\n  return (\n    <div style={{margin: '16px 0'}}>\n      {loading ? <CircularProgress color=\"secondary\"/> :\n        (\n          assignments.length > 0 ?\n            <TableContainer component={Paper}>\n              <Table size={\"small\"}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Room</TableCell>\n                    <TableCell align=\"right\">Status</TableCell>\n                    <TableCell align=\"right\">Contamination Index</TableCell>\n                    <TableCell align=\"right\">Room type</TableCell>\n                    <TableCell align=\"right\">Cleaning Status</TableCell>\n                    <TableCell>Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {assignments.map((row) => (\n                    <TableRow key={row['_id']}>\n                      <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                      <TableCell align=\"right\">{getStatus(row['contamination_index'])}</TableCell>\n                      <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                      <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n                      <TableCell\n                        align=\"right\">{row['is_cleaning'] ? 'Cleaning in progress' : 'Needs cleaning'}</TableCell>\n                      <TableCell>\n                        <Tooltip title={\"Remove assignment\"}>\n                          <IconButton size={\"small\"} onClick={() => {\n                            removeAssignment(row);\n                          }}>\n                            <Clear color={\"error\"}/>\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer> : <Typography variant={\"h6\"}>No assigned rooms</Typography>\n        )}\n    </div>\n  );\n}\n\nexport default CleanerDetailsPage;","import CleanerDetailsPage from './CleanerDetailsPage';\nexport default CleanerDetailsPage;","import ReportPage from './ReportPage';\nexport default ReportPage;\n","import React, {useEffect, useState} from 'react';\nimport {Link as RouterLink, useLocation} from \"react-router-dom\";\nimport {getHeatmap, getReport} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Typography, Select, Grid} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport styles from './ReportPage.module.scss';\nimport {Check, CloseRounded} from \"@material-ui/icons\";\nimport {getVariant, update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\nimport Link from \"@material-ui/core/Link\";\n\nconst ReportPage = () => {\n  const location = useLocation();\n  const {id} = location.state;\n  const [report, setReport] = useState({});\n  const [type, setType] = useState('');\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getReport(id)\n      .then((report) => {\n        setReport(report);\n      })\n  }, [id]);\n\n  const mapSelected = async (event) => {\n    setType(event.target.value);\n    await getHeatmap(id, event.target.value)\n      .then((res) => {\n        const aux = document.getElementById('aux');\n        const canvas = document.getElementById('main');\n        console.log(res)\n        update_img(res, aux, canvas, 1n);\n      }).catch((err) => {\n        console.error(err)\n        setErrorMsg('Could not load map');\n        setError(true);\n      });\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(false);\n  };\n\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good} fontSize={\"large\"}/>) : (\n      <CloseRounded color={\"error\"} fontSize={\"large\"}/>);\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h4\"} className={styles.semiBold}>Cleaning report details</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"}>Room map</Typography>\n            <FormControl variant={'outlined'} style={{minWidth: '320px', marginBottom: 8}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Contamination map type</InputLabel>\n              <Select label=\"Contamination map type\" onChange={mapSelected} value={type}>\n                <MenuItem value=\"clean\">After cleaning</MenuItem>\n                <MenuItem value=\"contamination\">Before cleaning</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            <canvas id=\"aux\" style={{display: 'none'}}/>\n            <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n          </div>\n          <Typography variant={\"h5\"}>Cleaner comments:</Typography>\n          <div className={styles.comments}>\n            <Typography variant={\"body1\"} className={styles.comment}>{report.comments}</Typography>\n          </div>\n        </Grid>\n        <Grid item xs={6}>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaner:</Typography>\n            <Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n              <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['cleaner_name']}</Typography>\n            </Link>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Room:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['room_name']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning time:</Typography>\n            <Typography style={{marginLeft: '4px'}}\n                        variant={\"h5\"}>{moment(report['cleaning_time']).format('YYYY-MM-DD HH:mm:ss')}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning successful:</Typography>\n            <div style={{marginLeft: 4, height: 35}}>{getIcon(report['cleaning_succesful'])}</div>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Overview:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report.overview}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Contamination index:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}\n                        className={styles[getVariant(report['contamination_index'])]}>{report['contamination_index']}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nexport default ReportPage;","import AdminPage from './AdminPage';\nexport default AdminPage;\n","import React, {useEffect, useState} from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Button, Divider, Typography} from \"@material-ui/core\";\nimport styles from \"./AdminPage.module.scss\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {getSimulatorSettings, resetSimulation, setSimulation} from \"../../utils/api\";\nimport Input from \"@material-ui/core/Input\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst AdminPage = () => {\n  const [simSpeed, setSimSpeed] = useState(10);\n  const [loading, setLoading] = useState(true);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [snackText, setSnackText] = useState('Simulation speed updated');\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n  useEffect(() => {\n    getSimulatorSettings()\n      .then((settings) => {\n        setSimSpeed(settings['simulator_speed']);\n        setLoading(false);\n      })\n  }, [])\n  const valuetext = (value) => {\n    return `${value}x`;\n  }\n\n  const generateMarks = () => {\n    const mark = [];\n    for (let i = 5; i <= 100; i += 5) {\n      mark.push({\n        value: i,\n        label: i\n      });\n    }\n    mark.unshift({\n      value: 0.1,\n      label: '0.1'\n    }, {\n      value: 0.5,\n    }, {\n      value: 1,\n    });\n\n    return mark;\n  }\n\n  const updateSimSpeed = () => {\n    setSimulation(simSpeed)\n      .then(() => {\n        setSnackText('Simulation speed updated');\n        setSnackOpen(true);\n      }).catch(() => setSnackOpen(true));\n  }\n  const handleChange = (event, newValue) => {\n    setSimSpeed(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setSimSpeed(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (simSpeed < 0.1) {\n      setSimSpeed(0);\n    } else if (simSpeed > 1000) {\n      setSimSpeed(1000);\n    }\n  };\n\n  const handleConfirmClose = () => {\n    setSnackText('Simulation reset');\n    setOpen(false);\n  };\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h5\"}>Simulator</Typography>\n      {loading ? <CircularProgress style={{margin: \"auto\"}}/> :\n        <Grid container>\n          <Grid container className={styles.slider}>\n            <Grid item xs>\n              <div className={styles.row}>\n                <Typography id=\"discrete-slider\" gutterBottom>\n                  Simulation speed\n                </Typography>\n                <Button variant={\"text\"} color={\"primary\"} onClick={updateSimSpeed}>\n                  Set\n                </Button>\n              </div>\n            </Grid>\n            <Grid container spacing={2} direction={\"row\"}>\n              <Grid item style={{flex: 1}}>\n                <Slider\n                  getAriaValueText={valuetext}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  step={null}\n                  min={0.1}\n                  marks={generateMarks()}\n                  onChange={handleChange}\n                  value={simSpeed}\n                />\n              </Grid>\n              <Grid item>\n                <Input\n                  style={{width: 42}}\n                  value={simSpeed}\n                  margin=\"dense\"\n                  onChange={handleInputChange}\n                  onBlur={handleBlur}\n                  inputProps={{\n                    step: 5,\n                    min: 0,\n                    max: 1000,\n                    type: 'number',\n                    'aria-labelledby': 'input-slider',\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item style={{display: \"flex\", marginLeft: 32}} xs>\n            <Card className={styles.card}>\n              <div className={styles.cardContent}>\n                <Typography variant={\"h6\"} className={styles.semiBold}>Simulator actions</Typography>\n                <Divider className={styles.divider} light={true}/>\n                <Button onClick={() => {\n                  setOpen(true);\n                }} variant={\"contained\"} color={\"secondary\"}>Reset simulated rooms</Button>\n              </div>\n            </Card>\n          </Grid>\n        </Grid>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Reset simulated rooms</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to reset the rooms?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={async () => {\n            handleConfirmClose();\n            resetSimulation().then(() => setSnackOpen(true)).catch(() => setSnackOpen(true));\n          }} color=\"primary\" autoFocus>\n            Reset\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </PageContainer>\n  )\n}\n\nexport default AdminPage;","import React from 'react';\nimport './App.scss';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport {authenticated as auth, getUser} from '../utils/api';\nimport DashboardPage from \"../pages/DashboardPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport CleanersPage from \"../pages/CleanersPage\";\nimport Toolbar from \"../components/Toolbar\";\nimport {useLocation} from 'react-router-dom';\nimport AnalysisPage from \"../pages/AnalysisPage\";\nimport RoomsPage from \"../pages/RoomsPage\";\nimport AssignmentsPage from \"../pages/AssignmentsPage\";\nimport RoomDetailsPage from \"../pages/RoomDetailsPage\";\nimport CleanerDetailsPage from \"../pages/CleanerDetailsPage\";\nimport ReportPage from \"../pages/ReportPage\";\nimport AdminPage from \"../pages/AdminPage\";\n\nfunction App() {\n  const location = useLocation();\n  const user = getUser();\n  const login = () => (auth() ? <Redirect to=\"/dashboard\"/> : <LoginPage/>);\n  const dash = () => (!auth() ? <Redirect to=\"/\"/> : <DashboardPage/>);\n  const cleaner = () => (!auth() ? <Redirect to=\"/\"/> : <CleanerDetailsPage/>);\n  const cleaners = () => (!auth() ? <Redirect to=\"/\"/> : <CleanersPage/>);\n  const assignments = () => (!auth() ? <Redirect to=\"/\"/> : <AssignmentsPage/>);\n  const rooms = () => (!auth() ? <Redirect to=\"/\"/> : <RoomsPage/>);\n  const room = () => (!auth() ? <Redirect to=\"/\"/> : <RoomDetailsPage/>);\n  const analysis = () => (!auth() ? <Redirect to=\"/\"/> : <AnalysisPage/>);\n  const report = () => (!auth() ? <Redirect to=\"/\"/> : <ReportPage/>);\n  const admin = () => (!auth() || !user.superAdmin ? <Redirect to=\"/\"/> : <AdminPage/>);\n\n  return (\n    <div className=\"App\">\n      {location.pathname !== '/' && <Toolbar/>}\n      <Switch location={location}>\n        <Route path={\"/dashboard\"} render={dash}/>\n        <Route path={\"/cleaners/:id\"} render={cleaner}/>\n        <Route path={\"/cleaners\"} render={cleaners}/>\n        <Route path={\"/assignments\"} render={assignments}/>\n        <Route path={\"/rooms/reports/:id\"} render={report}/>\n        <Route path={\"/rooms/:id\"} render={room}/>\n        <Route path={\"/rooms\"} render={rooms}/>\n        <Route path={\"/analysis\"} render={analysis}/>\n        <Route path={\"/simulator\"} render={admin}/>\n        <Route path={\"/\"} render={login}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {unstable_createMuiStrictModeTheme as createMuiTheme, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport {blueGrey, lightBlue} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[900],\n    },\n    secondary: lightBlue\n  },\n  typography: {\n    fontFamily: ['Raleway', 'sans-serif']\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={'/spotless'}>\n      <ThemeProvider theme={theme}>\n        <StylesProvider injectFirst>\n          <App/>\n        </StylesProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"CleanerDetailsPage_content__3PEfI\",\"avatar\":\"CleanerDetailsPage_avatar__3KDG8\",\"row\":\"CleanerDetailsPage_row__G0VOc\",\"menu\":\"CleanerDetailsPage_menu__2gyF8\",\"column\":\"CleanerDetailsPage_column__3374X\",\"semiBold\":\"CleanerDetailsPage_semiBold__1F3iu\"};"],"sourceRoot":""}