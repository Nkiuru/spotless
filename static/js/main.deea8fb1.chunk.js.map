{"version":3,"sources":["pages/AdminPage/AdminPage.module.scss","components/StatusDot/StatusDot.module.scss","pages/AssignmentsPage/AssignmentsPage.module.scss","components/Charts/ReportsPerDay/ReportsPerDay.module.scss","components/Charts/CleaningsByCleaner/CleaningsByCleaner.module.scss","components/Charts/ContaminationIndexOverTime/ContaminationIndexOverTime.module.scss","components/Charts/CleaningDuration/CleaningDuration.module.scss","components/RoomSelector/RoomSelector.module.scss","pages/RoomDetailsPage/RoomDetailsPage.module.scss","components/ShiftPicker/ShiftPicker.module.scss","containers/PageContainer/PageContainer.module.scss","pages/LoginPage/LoginPage.module.scss","pages/CleanersPage/CleanersPage.module.scss","components/CleaningReportsTable/CleaningReportTable.module.scss","assets/heatmap2.png","pages/ReportPage/ReportPage.module.scss","assets/hospital.png","components/CleanerSelect/CleanerSelect.module.scss","pages/DashboardPage/DashboardPage.module.scss","utils/constants.js","utils/api.js","containers/PageContainer/index.js","containers/PageContainer/PageContainer.js","pages/DashboardPage/KeyStat.js","components/StatusDot/index.js","components/StatusDot/StatusDot.js","utils/utils.js","components/Charts/ReportsPerDay/index.js","components/Charts/ReportsPerDay/ReportsPerDay.js","pages/DashboardPage/Alerts.js","pages/DashboardPage/index.js","pages/DashboardPage/DashboardPage.js","pages/LoginPage/LoginPage.js","pages/LoginPage/index.js","components/ShiftPicker/ShiftPicker.js","components/RoomSelector/EnhancedTableHead.js","utils/tableUtils.js","pages/CleanersPage/CleanersPage.js","pages/CleanersPage/index.js","components/Toolbar/Toolbar.js","components/Toolbar/index.js","components/Charts/CleaningsByCleaner/index.js","components/Charts/CleaningsByCleaner/CleaningsByCleaner.js","components/Charts/ContaminationIndexOverTime/index.js","components/Charts/ContaminationIndexOverTime/ContaminationIndexOverTime.js","components/Charts/CleaningDuration/index.js","components/Charts/CleaningDuration/CleaningDuration.js","pages/AnalysisPage/index.js","pages/AnalysisPage/AnalysisPage.js","pages/RoomsPage/RoomsMap.js","pages/AssignmentsPage/TableFilters.js","pages/RoomsPage/index.js","pages/RoomsPage/RoomsPage.js","components/CleanerSelect/index.js","components/CleanerSelect/CleanerSelect.js","pages/AssignmentsPage/AssignCleanerDialog.js","pages/AssignmentsPage/AssignmentsPage.js","pages/AssignmentsPage/index.js","pages/RoomDetailsPage/RoomDetailsCard.js","pages/RoomDetailsPage/RoomCleanerCard.js","pages/RoomDetailsPage/RoomReportComments.js","components/CleaningReportsTable/CleaningReportsTable.js","pages/RoomDetailsPage/index.js","pages/RoomDetailsPage/RoomDetailsPage.js","components/CleaningReportsTable/index.js","pages/CleanerDetailsPage/EditCleanerDialog.js","components/RoomSelector/RoomSelector.js","components/RoomSelector/index.js","pages/CleanerDetailsPage/CleanerDetailsPage.js","pages/CleanerDetailsPage/index.js","pages/ReportPage/index.js","pages/ReportPage/ReportPage.js","components/CircularProgressWithLabel/index.js","components/CircularProgressWithLabel/CircularProgressWithLabel.js","pages/AdminPage/index.js","pages/AdminPage/AdminPage.js","app/App.js","serviceWorker.js","index.js","components/Toolbar/Toolbar.module.scss","pages/CleanerDetailsPage/CleanerDetailsPage.module.scss","pages/RoomsPage/RoomsPage.module.scss"],"names":["module","exports","API_KEY","BASE_URL","ROOM_TYPES","Object","freeze","OFFICE","frequency","cleaningTime","displayName","key","TOILET","WARD_ROOM","EXAMINATION_ROOM","CORRIDOR","WAITING_ROOM","HOSPITAL_MAP","name","areas","shape","coords","GLOBAL_HOSPITAL","localStorage","getItem","GLOBAL_HOSPITAL_NAME","authenticated","getUser","JSON","parse","addParam","property","params","parameter","newParams","length","getRooms","hospital","floor","showAssigned","a","doGetRequest","getHospitals","getAssignedRooms","cleanerId","getAssignedCleaners","roomId","assignRoomsToCleaner","rooms","cleaner","Promise","all","map","room","assignRoom","unAssignRooms","unAssignRoom","doPostRequest","stringify","doDeleteRequest","getRoom","getCleaners","getCleaner","createCleaner","shiftStart","shiftEnd","getReports","deleteCleaner","getReport","reportId","getHeatmap","type","requestURL","fetch","method","headers","response","ok","arrayBuffer","json","console","log","Error","error","getRoomHeatmap","editCleaner","doPutRequest","getSimulatorSettings","setSimulation","speed","resetSimulation","getFloorplan","id","blob","statusText","url","message","body","PageContainer","children","style","top","noToolbar","className","styles","pageContainer","pageContent","KeyStat","value","subtitle","color","stat","keyStat","Typography","variant","StatusDot","size","tooltip","classes","dot","push","neutral","small","Tooltip","title","join","getRoomTypeProp","propName","getStatus","contamination","getVariant","getVariantColor","mergeCleaners","status","cleaners","update_img","auxCanvas","canvas","scaler","arr","BigUint64Array","bytearray","array","min","max","pix","pix1","minRaw","BigInt","Number","MAX_SAFE_INTEGER","maxRaw","j","im_p","i","Uint8Array","convert64to8","red","green","blue","b","tableRed","tableGreen","tableBlue","Math","cos","round","pow","sin","atan","Uint8ClampedArray","initColorMaps","redMap","greenMap","blueMap","img","imgArr","h","ImageData","data","byteIdx","imgIdx","grayValue","ctx","getContext","putImageData","drawImage","ReportsPerDay","reports","loading","report","moment","format","counts","forEach","x","formattedReports","keys","date","amount","height","Paper","container","CircularProgress","margin","width","chart","textAlign","dataKey","strokeDasharray","stroke","strokeWidth","Alerts","history","useHistory","today","filtered","filter","overview","isSame","alerts","alert","onClick","pathname","state","Grid","direction","alignItems","justify","item","semiBold","lineHeight","comments","ArrowForward","fontSize","marginTop","DashboardPage","useState","user","setUser","setRooms","setReports","setLoading","hospitals","setHospitals","setHospital","hospitalSet","setHospitalSet","fetchData","setFetchData","useEffect","u","then","result","getContaminationIndex","contaminations","val","reduce","display","flexDirection","username","IconButton","Refresh","FormControl","minWidth","InputLabel","Select","label","onChange","event","target","setItem","removeItem","setGlobalHospital","find","setGlobalHospitalName","MenuItem","hosp","spacing","xs","grid","getCleanedRooms","validationSchema","Yup","required","password","LoginPage","form","initialValues","onSubmit","vars","setSubmitting","isSuperAdmin","superAdmin","authenticate","isSubmitting","resetForm","values","component","TextField","autoFocus","fullWidth","Button","btn","ShiftPicker","row","Array","number","num","toString","padStart","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","headCells","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","numeric","disablePadding","sortDirection","TableSortLabel","active","visuallyHidden","descendingComparator","undefined","toUpperCase","getComparator","stableSort","comparator","stabilizedThis","el","index","sort","handleClick","selected","setSelected","selectedIndex","indexOf","newSelected","concat","slice","firstName","lastName","AddCleanerDialog","open","setOpen","setIsLoaded","setSnackOpen","handleClose","handleSubmit","startHour","startMinutes","endHour","endMinutes","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogActions","useStyles","makeStyles","theme","border","clip","overflow","position","CleanersTable","React","setOrder","setOrderBy","page","setPage","cleanersPerPage","setCleanersPerPage","TableContainer","Table","TableBody","labelId","hover","tabIndex","scope","assignedRooms","numCleaned","placement","getCleaningProgress","isBetween","viewCleaner","VisibilityOutlined","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","CleanersPage","setCleaners","isLoaded","snackOpen","responses","err","handleSnackClose","reason","headerRow","bold","AddCircleOutline","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","severity","NavTabs","withStyles","root","flexGrow","indicator","justifyContent","backgroundColor","marginBottom","borderTopLeftRadius","borderTopRightRadius","Tabs","TabIndicatorProps","Toolbar","location","useLocation","getTabValue","tabId","route","matchPath","path","exact","strict","mountTabValueFactory","anchorEl","setAnchorEl","AppBar","toolbar","split","goBack","ArrowBackRounded","svg","Tab","tab","DashboardRounded","Link","to","disableRipple","FormatListBulletedRounded","PeopleRounded","BusinessRounded","AssessmentRounded","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","ListItemIcon","Settings","ListItemText","primary","ExitToApp","CleaningsByCleaner","fill","ContaminationIndexOverTime","acc","CleaningDuration","und","estimated","unit","AnalysisPage","initMap","area","hex","exec","r","g","hexToRgb","preFillColor","RoomsMap","hovering","setHovering","setRoom","hoverStyle","setHoverStyle","setMap","ignored","forceUpdate","window","innerWidth","src","hospitalImg","fillColor","imgWidth","onMouseEnter","pageY","left","pageX","onMouseLeave","roomInfo","toFixed","TableFilters","initialBuilding","initialFloor","hideAll","hideAssigned","building","setBuilding","setFloor","roomType","setRoomType","assigned","setAssigned","filters","setFilters","valid","Set","FormControlLabel","control","RoomsPage","setError","origRooms","setOrigRooms","CleanerSelect","options","setOptions","openSelect","setOpenSelect","setCleaner","clnrs","Autocomplete","onOpen","autocomplete","getOptionLabel","option","newValue","renderInput","InputProps","endAdornment","AssignCleanerDialog","setSnackText","selectedWithCleaner","disableBackdropClick","disabled","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","lighten","light","text","dark","minHeight","EnhancedTableToolbar","getData","showFilters","removeAssignments","clsx","fontWeight","startIcon","Close","critical","flexBasis","marginRight","aria-label","FilterList","paper","table","AssignmentsPage","roomsPerPage","setRoomsPerPage","snackText","newSelecteds","n","isItemSelected","role","aria-checked","RouterLink","openRoom","RoomDetailsCard","Card","card","cardContent","Divider","divider","medium","RoomCleanerCard","newCleaner","setNewCleaner","hasCleaner","removeCleanerAssignment","assignNewCleaner","getColor","marginLeft","ClearOutlined","CommentsList","time","comment","author","ReportsTableHead","unshift","CleaningReportsTable","reportsPerPage","setReportsPerPage","Check","good","CloseRounded","viewReport","RoomDetailsPage","roomLoaded","setRoomLoaded","image","setImage","showMap","setShowMap","errorMsg","setErrorMsg","Date","URL","createObjectURL","catch","aux","document","getElementById","titleRow","action","content","detailsRow","alt","overlay","EditCleanerDialog","onSave","start","end","edited","res","RoomSelector","assign","maxWidth","AssignmentsTable","assignments","setAssignments","removeAssignment","newAssignments","splice","Clear","CleanerDetailsPage","cleanerLoaded","setCleanerLoaded","editing","setEditing","showRoomSelector","setShowRoomSelector","handleConfirmClose","removeCleaner","Edit","DeleteForever","AccountCircleRounded","avatar","aria-describedby","DialogContentText","ReportPage","setReport","setType","showContImg","setShowContImg","showCleanImg","setShowCleanImg","mapSelected","heatmap","reportInfo","CircularProgressWithLabel","Box","bottom","right","AdminPage","simSpeed","setSimSpeed","progress","setProgress","generating","setGenerating","settings","generate","setTimeout","slider","gutterBottom","flex","Slider","getAriaValueText","valueLabelDisplay","step","marks","mark","generateMarks","Input","onBlur","float","App","render","auth","hostname","match","createMuiTheme","blueGrey","lightBlue","typography","fontFamily","ReactDOM","StrictMode","basename","ThemeProvider","StylesProvider","injectFirst","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.deea8fb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"AdminPage_slider__15E9C\",\"row\":\"AdminPage_row__2qRHf\",\"divider\":\"AdminPage_divider__3uIH_\",\"semiBold\":\"AdminPage_semiBold__EaJqb\",\"medium\":\"AdminPage_medium__2aq8Q\",\"card\":\"AdminPage_card__3NaLL\",\"cardContent\":\"AdminPage_cardContent__1_5WT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot\":\"StatusDot_dot__1rSYH\",\"good\":\"StatusDot_good__1GIEp\",\"medium\":\"StatusDot_medium__3zBB3\",\"critical\":\"StatusDot_critical__23vOC\",\"neutral\":\"StatusDot_neutral__1H6OR\",\"tiny\":\"StatusDot_tiny__33nQ5\",\"small\":\"StatusDot_small__1yc1L\",\"large\":\"StatusDot_large__jMuJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"AssignmentsPage_title__3UMlB\",\"critical\":\"AssignmentsPage_critical__3ZemZ\",\"row\":\"AssignmentsPage_row__2lJV1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ReportsPerDay_chart__1nn7U\",\"title\":\"ReportsPerDay_title__aLd0m\",\"container\":\"ReportsPerDay_container__3-OV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"CleaningsByCleaner_chart__3aloT\",\"title\":\"CleaningsByCleaner_title__2Z5X5\",\"container\":\"CleaningsByCleaner_container__2ovud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"ContaminationIndexOverTime_chart__-hDF2\",\"title\":\"ContaminationIndexOverTime_title__2xIiR\",\"container\":\"ContaminationIndexOverTime_container__vcMdl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"CleaningDuration_chart__3_7JM\",\"title\":\"CleaningDuration_title__XmVrf\",\"container\":\"CleaningDuration_container__2fTKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"RoomSelector_title__363JP\",\"critical\":\"RoomSelector_critical__a-ztV\",\"row\":\"RoomSelector_row__n9QC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleRow\":\"RoomDetailsPage_titleRow__JoTlm\",\"content\":\"RoomDetailsPage_content__2CxAu\",\"card\":\"RoomDetailsPage_card__2J4HU\",\"cardContent\":\"RoomDetailsPage_cardContent__1soEX\",\"detailsRow\":\"RoomDetailsPage_detailsRow__3fj0E\",\"row\":\"RoomDetailsPage_row__PCQ4C\",\"divider\":\"RoomDetailsPage_divider__hWVez\",\"semiBold\":\"RoomDetailsPage_semiBold__24ERR\",\"medium\":\"RoomDetailsPage_medium__3Rnxk\",\"good\":\"RoomDetailsPage_good__2jSxq\",\"med\":\"RoomDetailsPage_med__T6SFg\",\"critical\":\"RoomDetailsPage_critical__2gPiW\",\"neutral\":\"RoomDetailsPage_neutral__2SrpQ\",\"btn\":\"RoomDetailsPage_btn__3tYWx\",\"comments\":\"RoomDetailsPage_comments__1nTSD\",\"comment\":\"RoomDetailsPage_comment__1rwNF\",\"author\":\"RoomDetailsPage_author__tbk-d\",\"container\":\"RoomDetailsPage_container__2fZtP\",\"map\":\"RoomDetailsPage_map__2yhwI\",\"overlay\":\"RoomDetailsPage_overlay__1x7-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ShiftPicker_menu__1os-v\",\"row\":\"ShiftPicker_row__rUGBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"PageContainer_pageContainer__iX86t\",\"pageContent\":\"PageContainer_pageContent__1wPf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginPage_form__38hI6\",\"btn\":\"LoginPage_btn__Q93UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"CleanersPage_headerRow__20bGG\",\"bold\":\"CleanersPage_bold__qIG9F\",\"menu\":\"CleanersPage_menu__1x8Ct\",\"row\":\"CleanersPage_row__2H2UE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"CleaningReportTable_good__2fi-5\",\"semiBold\":\"CleaningReportTable_semiBold__3M_nh\"};","module.exports = __webpack_public_path__ + \"static/media/heatmap2.dbb6a747.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"ReportPage_row__1XU8D\",\"semiBold\":\"ReportPage_semiBold__20bHc\",\"reportInfo\":\"ReportPage_reportInfo__KuWwG\",\"column\":\"ReportPage_column__1fkvo\",\"good\":\"ReportPage_good__IEB1u\",\"medium\":\"ReportPage_medium__1jIMT\",\"critical\":\"ReportPage_critical___2FfG\",\"map\":\"ReportPage_map__1ruE5\",\"comments\":\"ReportPage_comments__vvAhd\",\"comment\":\"ReportPage_comment__38N5l\"};","module.exports = __webpack_public_path__ + \"static/media/hospital.ea9e1e90.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"autocomplete\":\"CleanerSelect_autocomplete__2dss4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"semiBold\":\"DashboardPage_semiBold__1wP56\",\"stat\":\"DashboardPage_stat__1HNGL\",\"keyStat\":\"DashboardPage_keyStat__3TqkO\",\"subtitle\":\"DashboardPage_subtitle__SKIyw\",\"grid\":\"DashboardPage_grid__3i4Zn\",\"alerts\":\"DashboardPage_alerts__1Vbju\",\"alert\":\"DashboardPage_alert__3qisR\"};","export const API_KEY = 'zL43mXgXk5xa7YFRBVZscbLnGFaqVh24q5G6fhGjmAv532FAVBRtnuCJpwXWXnhw';\nexport const BASE_URL = 'https://cleaner-app-api.azurewebsites.net/api/';\n\nexport const UNCLEANED = 'Uncleaned due to some reason';\n\nexport const ROOM_TYPES = Object.freeze({\n  OFFICE: {\n    frequency: 1,\n    cleaningTime: 5,\n    displayName: 'Office',\n    key: 'OFFICE'\n  },\n  TOILET: {\n    frequency: 5,\n    cleaningTime: 5,\n    displayName: 'Toilet',\n    key: 'TOILET'\n  },\n  WARD_ROOM: {\n    frequency: 5,\n    cleaningTime: 8,\n    displayName: 'Ward room',\n    key: 'WARD_ROOM'\n  },\n  EXAMINATION_ROOM: {\n    frequency: 5,\n    cleaningTime: 6,\n    displayName: 'Examination room',\n    key: 'EXAMINATION_ROOM'\n  },\n  CORRIDOR: {\n    frequency: 3,\n    cleaningTime: 9,\n    displayName: 'Corridor',\n    key: 'CORRIDOR'\n  },\n  WAITING_ROOM: {\n    frequency: 5,\n    cleaningTime: 10,\n    displayName: 'Waiting room',\n    key: 'WAITING_ROOM'\n  },\n});\n\nexport const HOSPITAL_MAP = Object.freeze({\n  name: \"hospital map\",\n  areas: [\n    {\n      shape: \"rect\",\n      coords: [132, 25, 193, 144],\n    },\n    {\n      shape: \"rect\",\n      coords: [62, 27, 126, 144],\n    },\n    {\n      shape: \"rect\",\n      coords: [9, 48, 57, 160],\n    },\n    {\n      shape: \"rect\",\n      coords: [9, 165, 79, 254],\n    },\n    {\n      shape: \"poly\",\n      coords: [368, 27, 368, 113, 316, 113, 316, 27, 369, 27],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        310,\n        112,\n        288,\n        112,\n        287,\n        160,\n        253,\n        160,\n        253,\n        74,\n        201,\n        74,\n        200,\n        26,\n        311,\n        26,\n        312,\n        112,\n        310,\n        111,\n      ],\n    },\n    {\n      shape: \"rect\",\n      coords: [291, 116, 369, 160],\n    },\n    {\n      shape: \"rect\",\n      coords: [374, 27, 429, 144],\n    },\n    {\n      shape: \"rect\",\n      coords: [433, 27, 488, 145],\n    },\n    {\n      shape: \"rect\",\n      coords: [494, 27, 548, 145],\n    },\n    {\n      shape: \"rect\",\n      coords: [554, 26, 608, 145],\n    },\n    {\n      shape: \"rect\",\n      coords: [373, 149, 641, 211],\n    },\n    {\n      shape: \"rect\",\n      coords: [596, 216, 639, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [522, 216, 558, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [476, 215, 517, 306],\n    },\n    {\n      shape: \"rect\",\n      coords: [418, 215, 472, 306],\n    },\n    {\n      shape: \"rect\",\n      coords: [365, 215, 414, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [293, 216, 360, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [259, 214, 289, 307],\n    },\n    {\n      shape: \"rect\",\n      coords: [174, 258, 255, 305],\n    },\n    {\n      shape: \"rect\",\n      coords: [175, 215, 255, 255],\n    },\n    {\n      shape: \"rect\",\n      coords: [85, 215, 172, 256],\n    },\n    {\n      shape: \"rect\",\n      coords: [85, 259, 171, 307],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        368,\n        164,\n        368,\n        211,\n        85,\n        210,\n        84,\n        149,\n        184,\n        148,\n        184,\n        164,\n        368,\n        164,\n        368,\n        163,\n      ],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        84,\n        370,\n        193,\n        371,\n        194,\n        356,\n        258,\n        357,\n        257,\n        310,\n        83,\n        310,\n        83,\n        370,\n      ],\n    },\n    {\n      shape: \"rect\",\n      coords: [9, 262, 79, 358],\n    },\n    {\n      shape: \"rect\",\n      coords: [262, 311, 369, 358],\n    },\n    {\n      shape: \"rect\",\n      coords: [373, 310, 608, 372],\n    },\n    {\n      shape: \"rect\",\n      coords: [551, 378, 610, 494],\n    },\n    {\n      shape: \"rect\",\n      coords: [492, 377, 550, 494],\n    },\n    {\n      shape: \"rect\",\n      coords: [432, 377, 487, 494],\n    },\n    {\n      shape: \"rect\",\n      coords: [374, 376, 428, 494],\n    },\n    {\n      shape: \"rect\",\n      coords: [290, 362, 369, 405],\n    },\n    {\n      shape: \"rect\",\n      coords: [13, 363, 57, 474],\n    },\n    {\n      shape: \"rect\",\n      coords: [61, 376, 129, 492],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        368,\n        494,\n        368,\n        409,\n        285,\n        409,\n        286,\n        362,\n        261,\n        362,\n        262,\n        494,\n        368,\n        494,\n      ],\n    },\n    {\n      shape: \"poly\",\n      coords: [\n        133,\n        376,\n        133,\n        494,\n        194,\n        494,\n        194,\n        441,\n        247,\n        442,\n        249,\n        397,\n        195,\n        396,\n        195,\n        376,\n        133,\n        377,\n      ],\n    },\n  ],\n});","import {API_KEY, BASE_URL} from \"./constants\";\n\nexport let GLOBAL_HOSPITAL = localStorage.getItem('hospital') || false;\nexport let GLOBAL_HOSPITAL_NAME = localStorage.getItem('hospital_name') || false;\n\n\nexport const authenticated = () => {\n  return localStorage.getItem('user') !== null;\n};\n\nexport const getUser = () => {\n  if (authenticated()) {\n    return JSON.parse(localStorage.getItem('user'));\n  } else {\n    return false;\n  }\n}\n\nexport const authenticate = (username, password) => {\n  let isSuperAdmin = false;\n  if (username === 'superadmin' && password === 'admin') {\n    isSuperAdmin = true;\n  }\n  localStorage.setItem('user', JSON.stringify({\n    username,\n    superAdmin: isSuperAdmin\n  }));\n  return true;\n}\n\nexport const setGlobalHospital = (hospital) => {\n  if (hospital) {\n    localStorage.setItem('hospital', hospital);\n  } else {\n    localStorage.removeItem('hospital');\n  }\n  GLOBAL_HOSPITAL = hospital;\n}\n\nexport const setGlobalHospitalName = (hospital) => {\n  if (hospital) {\n    localStorage.setItem('hospital_name', hospital);\n  } else {\n    localStorage.removeItem('hospital_name');\n  }\n  GLOBAL_HOSPITAL_NAME = hospital;\n}\n\nexport const logout = () => {\n  localStorage.removeItem('user');\n}\n\nconst addParam = (property, params, parameter) => {\n  let newParams = params;\n  if (params.length > 0 && parameter) {\n    newParams += `&${property}=${parameter}`;\n  } else if (parameter) {\n    newParams += `?${property}=${parameter}`;\n  }\n  return newParams;\n}\n\n\nexport const getRooms = async (hospital, floor, showAssigned) => {\n  const url = 'rooms';\n  hospital = hospital || GLOBAL_HOSPITAL;\n  let params = addParam('hospital_id', '', hospital);\n  params = addParam('floor', params, floor);\n  showAssigned = showAssigned ? 1 : 0;\n  params = addParam('assigned_cleaners', params, showAssigned);\n  return doGetRequest(url, params);\n}\n\nexport const getHospitals = async () => {\n  return doGetRequest('hospitals');\n}\n\nexport const startCleaning = async (roomId) => {\n  return doGetRequest(`room/startcleaning?id=${roomId}`);\n}\n\nexport const stopCleaning = async (roomId) => {\n  return doGetRequest(`room/stopcleaning?id=${roomId}`);\n}\n\nexport const getAssignedRooms = async (cleanerId) => {\n  return doGetRequest(`cleaners/rooms?cleaner_id=${cleanerId}`);\n}\n\nexport const getAssignedCleaners = async (roomId) => {\n  return doGetRequest(`cleaners/rooms?room_id=${roomId}`);\n}\n\nexport const assignRoomsToCleaner = async (rooms, cleaner) => {\n  return Promise.all(rooms.map((room) => {\n    return assignRoom(room['_id'], cleaner);\n  }));\n}\n\nexport const unAssignRooms = async (rooms) => {\n  return Promise.all(rooms.map((room) => {\n    return unAssignRoom(room['_id'], room['assigned_cleaners'][0]['_id']);\n  }));\n}\n\nexport const assignRoom = async (room, cleaner) => {\n  return doPostRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const unAssignRoom = async (room, cleaner) => {\n  return doDeleteRequest('cleaners/rooms', JSON.stringify({\n    'cleaner_id': cleaner,\n    'room_id': room\n  }));\n}\n\nexport const getRoom = async (roomId) => {\n  return doGetRequest(`room?_id=${roomId}`);\n}\n\nexport const getCleaners = async () => {\n  return doGetRequest('cleaners/');\n}\n\nexport const getCleaner = async (cleanerId) => {\n  return doGetRequest(`cleaner?_id=${cleanerId}`);\n}\n\nexport const createCleaner = async (name, shiftStart, shiftEnd) => {\n  return doPostRequest('cleaner/', JSON.stringify({\n    name,\n    'shift_start': shiftStart,\n    'shift_end': shiftEnd\n  }));\n}\n\nexport const getReports = async (roomId, cleanerId, hospital) => {\n  hospital = hospital || GLOBAL_HOSPITAL_NAME;\n  let params = addParam('room_id', '', roomId);\n  params = addParam('cleaner_id', params, cleanerId);\n  params = addParam('hospital_name', params, hospital);\n  return doGetRequest('reports', params)\n}\n\nexport const deleteCleaner = async (cleanerId) => {\n  return doDeleteRequest('cleaner', JSON.stringify({\n    '_id': cleanerId\n  }));\n}\n\nexport const getReport = async (reportId) => {\n  return doGetRequest(`report?_id=${reportId}`);\n}\n\nexport const getHeatmap = async (reportId, type) => {\n  const requestURL = BASE_URL + `report/heatmap?_id=${reportId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    console.log(json)\n    throw new Error(json.error);\n  }\n}\n\nexport const getRoomHeatmap = async (roomId, type) => {\n  const requestURL = BASE_URL + `room/heatmap?_id=${roomId}&type=${type}`\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/octet-stream',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.arrayBuffer();\n  } else {\n    const json = await response.json();\n    throw new Error(json.error);\n  }\n}\n\nexport const editCleaner = async (cleaner) => {\n  return doPutRequest('cleaner/', JSON.stringify({\n    '_id': cleaner['_id'],\n    'name': cleaner.name,\n    'shift_start': cleaner['shift_start'],\n    'shift_end': cleaner['shift_end']\n  }));\n}\n\nexport const getSimulatorSettings = async () => {\n  return doGetRequest('simulator/settings');\n}\n\nexport const setSimulation = async (speed) => {\n  console.log(speed)\n  return doPutRequest('simulator/settings', JSON.stringify({'simulator_speed': speed}));\n}\n\nexport const resetSimulation = async () => {\n  return doGetRequest('simulator/clear');\n}\n\nexport const createRoom = async (hospital, name, type, building, floor) => {\n  return doPostRequest('/room', JSON.stringify({\n    'hospital_id': hospital,\n    'name': name,\n    'is_simulated': true,\n    'room_type': type,\n    'building': building,\n    'floor': floor\n  }));\n}\n\nexport const getFloorplan = async (id) => {\n  const response = await fetch(`${BASE_URL}room/floorplan?_id=${id}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'image/png',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.blob();\n  } else {\n    throw new Error(response.statusText);\n  }\n}\n\nconst doGetRequest = async (url, params) => {\n  const requestURL = BASE_URL + url + (params || '');\n  const response = await fetch(requestURL, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    }\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPostRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doDeleteRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}\n\nconst doPutRequest = async (url, params) => {\n  const requestURL = BASE_URL + url;\n  const response = await fetch(requestURL, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': API_KEY,\n      'charset': 'utf-8'\n    },\n    body: params\n  });\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(await response.json().message);\n  }\n}","import PageContainer from './PageContainer';\nexport default PageContainer;\n","import React from 'react';\nimport styles from './PageContainer.module.scss';\nimport PropTypes from 'prop-types';\n\nconst PageContainer = ({ children, style, noToolbar }) => {\n  const top = noToolbar ? 0 : '48px';\n  return (\n    <div className={styles.pageContainer} style={{top}}>\n      <div className={styles.pageContent} style={style}>{children}</div>\n    </div>\n  );\n};\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n  noToolbar: PropTypes.bool\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport styles from \"./DashboardPage.module.scss\";\nimport {Typography} from \"@material-ui/core\";\n\nconst KeyStat = ({value, subtitle, color}) => {\n  return (\n    <div className={styles.stat}>\n      <div className={styles.keyStat}>\n        <Typography variant={\"h3\"} style={{color}}>{value}</Typography>\n      </div>\n      <Typography variant={\"body2\"} className={styles.subtitle}>{subtitle}</Typography>\n    </div>\n  );\n}\n\nexport default KeyStat;","import StatusDot from './StatusDot';\nexport default StatusDot;","import React from 'react';\nimport styles from './StatusDot.module.scss';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PropTypes from \"prop-types\";\n\n\nconst StatusDot = ({variant, size, tooltip}) => {\n  const classes = [styles.dot];\n  classes.push(variant ? styles[variant] : styles.neutral);\n  classes.push(size ? styles[size] : styles.small);\n  return (\n    <Tooltip title={tooltip}>\n      <div className={classes.join(' ')}/>\n    </Tooltip>\n  );\n}\n\nStatusDot.propTypes = {\n  variant: PropTypes.oneOf(['good', 'critical', 'medium', 'neutral']).isRequired,\n  size: PropTypes.oneOf(['tiny', 'small', 'large']).isRequired,\n  tooltip: PropTypes.any\n}\n\nexport default StatusDot;","import {ROOM_TYPES} from \"./constants\";\nimport StatusDot from \"../components/StatusDot\";\nimport React from \"react\";\n\nexport const getRoomTypeProp = (room, propName) => {\n  return room['room_type'] !== '<empty>' ? ROOM_TYPES[room['room_type']][propName] : '';\n}\n\nexport const getStatus = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return <StatusDot variant={variant} size={\"tiny\"} tooltip={contamination}/>\n}\n\nexport const getVariant = (contamination) => {\n  let variant = 'neutral';\n  if (contamination >= 60) {\n    variant = 'critical';\n  } else if (contamination >= 30) {\n    variant = 'medium';\n  } else if (contamination < 30) {\n    variant = 'good';\n  }\n  return variant;\n}\n\nexport const getVariantColor = (contamination) => {\n  let variant = '#CFD3DA';\n  if (contamination >= 60) {\n    variant = '#EB5757';\n  } else if (contamination >= 30) {\n    variant = '#F2C94C';\n  } else if (contamination < 30) {\n    variant = '#27AE60';\n  }\n  return variant;\n}\n\nexport const mergeCleaners = (rooms) => {\n  return rooms.map((room) => {\n    room.status = room['contamination_index'];\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (cleaner) {\n      room.cleaner = cleaner;\n      room['cleaner_name'] = cleaner.name;\n    } else {\n      room['cleaner_name'] = '-';\n    }\n    return room;\n  });\n}\n\nfunction convert64to8(array, scaler) {\n  let min, max, pix;\n  // eslint-disable-next-line no-undef\n  let minRaw = BigInt(Number.MAX_SAFE_INTEGER);\n  // eslint-disable-next-line no-undef\n  let maxRaw = BigInt(0);\n  for (let j = 0; j < array.length; j++) {\n    pix = array[j]\n    if (pix < minRaw) {\n      minRaw = pix\n    }\n    if (pix > maxRaw) {\n      maxRaw = pix\n    }\n  }\n  // eslint-disable-next-line no-undef\n  max = BigInt(maxRaw) / scaler;\n  // eslint-disable-next-line no-undef\n  min = BigInt(minRaw);\n  let pix1;\n  let im_p = [];\n  if (max <= min) {\n    max = min + 1n\n  }\n  for (let i = 0; i < array.length; i++) {\n    // eslint-disable-next-line no-undef\n    pix1 = (array[i] - min) * 255n / (max - min);\n    if (pix1 > 255n) {\n      pix1 = 255\n    }\n    if (pix1 < 0n) {\n      pix1 = 0n\n    }\n    im_p.push(Number(pix1));\n  }\n  return new Uint8Array(im_p);\n}\n\n// lookup color table to apply to grayscale image\nfunction initColorMaps() {\n  let tableRed = []\n  let tableGreen = []\n  let tableBlue = []\n  let red, green, blue;\n  let a, b;\n  for (let i = 0; i <= 255; i++) {\n    a = i * 0.01236846501;\n    b = Math.cos(a - 1.0)\n    red = Math.round(Math.pow(2.0, Math.sin(a - 1.6)) * 200)\n    green = Math.round(Math.atan(a) * b * 155 + 100.0)\n    blue = Math.round(b * 255)\n    red = Math.min(255, red);\n    green = Math.min(255, green);\n    blue = Math.min(255, blue);\n    red = Math.max(0, red);\n    green = Math.max(0, green);\n    blue = Math.max(0, blue);\n    tableRed.push(red)\n    tableGreen.push(green)\n    tableBlue.push(blue)\n  }\n  return [new Uint8ClampedArray(tableRed), new Uint8ClampedArray(tableGreen), new Uint8ClampedArray(tableBlue)];\n}\n\nexport function update_img(arrayBuffer, auxCanvas, canvas, scaler) {\n  let arr = null;\n  try {\n    // eslint-disable-next-line no-undef\n    arr = new BigUint64Array(arrayBuffer);\n  } catch (error) {\n    throw error;\n  }\n  let bytearray = convert64to8(arr, scaler);\n  let [redMap, greenMap, blueMap] = initColorMaps();\n  let img = null; //ImageData\n  let imgArr = null; //Uint8ClampedArray\n  const h = Math.round(bytearray.length / 72);\n  if (bytearray) {\n    img = new ImageData(72, h); // Note: the actual array is 4 times bigger because has (RGBA) pixels\n    imgArr = img.data;\n    let byteIdx = 0;\n    // color mapped image\n    for (let imgIdx = 0; imgIdx < imgArr.length; imgIdx += 4) {\n      let grayValue = bytearray[byteIdx];\n      imgArr[imgIdx] = redMap[grayValue]; // R value\n      imgArr[imgIdx + 1] = greenMap[grayValue]; // G value\n      imgArr[imgIdx + 2] = blueMap[grayValue]; // B value\n      imgArr[imgIdx + 3] = 255; // Alpha value\n      byteIdx++;\n    }\n  }\n  console.log(img)\n  // Scaling. It seems that with putImageData we cannot scale the canvas directly\n  // auxCanvas has the image and\n  let ctx = canvas.getContext('2d');\n  auxCanvas.getContext(\"2d\").putImageData(img, 0, 0);\n  ctx.drawImage(auxCanvas, 0, 0)\n  // flip Y AND X axis\n  canvas.style = \"transform: scale(1, 1); flex: 1\";\n}\n\nexport function hexToRgb(hex) {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : null;\n}","import ReportsPerDay from './ReportsPerDay';\nexport default ReportsPerDay;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport moment from \"moment\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./ReportsPerDay.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\n\nconst ReportsPerDay = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return moment(report['cleaning_time']).format('DD.MM.YYYY');\n  })\n  const counts = {};\n  data.forEach((x) => {\n    counts[x] = (counts[x] || 0) + 1;\n  });\n  const formattedReports = [];\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      date: x,\n      amount: counts[x]\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Cleaning events per day</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning events</Typography>\n                :\n                <LineChart data={formattedReports}>\n                  <XAxis dataKey=\"date\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Line type=\"monotone\" dataKey=\"amount\" name=\"Cleaning events\" stroke=\"#8884d8\" strokeWidth={2}/>\n                </LineChart>\n              }\n\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nReportsPerDay.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default ReportsPerDay;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./DashboardPage.module.scss\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {UNCLEANED} from \"../../utils/constants\";\nimport {ArrowForward} from \"@material-ui/icons\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useHistory} from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst Alerts = ({reports, loading}) => {\n  const history = useHistory();\n  const today = moment();\n  const filtered = reports.filter((report) => {\n    return report.overview === UNCLEANED && today.isSame(report['cleaning_time'], 'date');\n  });\n\n  const openReport = (id) => {\n    history.push({\n      pathname: `/rooms/reports/${id}`,\n      state: {id}\n    })\n  }\n  return (\n    <div className={styles.alerts}>\n      {loading ? <CircularProgress size={20} style={{margin: 'auto'}}/> :\n        <>\n          {filtered.map((report) => (\n            <div key={report['_id']} className={styles.alert} onClick={() => {\n              openReport(report['_id']);\n            }}>\n              <Grid container direction={\"row\"} alignItems={\"center\"} justify={\"space-between\"}>\n                <Grid item>\n                  <Typography variant={\"h6\"} className={styles.semiBold}>{report['room_name']},\n                    Floor {report.floor}</Typography>\n                  <Typography variant={\"body2\"} className={styles.semiBold} style={{lineHeight: '24px'}}\n                              color=\"textSecondary\">{report['cleaner_name']}: {report.comments}</Typography>\n                </Grid>\n                <Grid item>\n                  <ArrowForward color={\"action\"} style={{fontSize: '1.75rem'}}/>\n                </Grid>\n              </Grid>\n            </div>\n          ))}\n          {filtered.length === 0 &&\n          <Typography variant={\"h6\"} style={{marginTop: 16}} className={styles.semiBold}>No recent alerts</Typography>\n          }\n        </>\n      }\n    </div>\n  );\n}\n\nAlerts.propTypes = {\n  reports: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired\n}\n\nexport default Alerts;","import DashboardPage from './DashboardPage';\nexport default DashboardPage;\n","import React, {useEffect, useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from './DashboardPage.module.scss';\nimport Grid from \"@material-ui/core/Grid\";\nimport KeyStat from \"./KeyStat\";\nimport {\n  getHospitals,\n  getReports,\n  getRooms,\n  getUser,\n  GLOBAL_HOSPITAL,\n  setGlobalHospital,\n  setGlobalHospitalName\n} from \"../../utils/api\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport moment from \"moment\";\nimport {getVariant, getVariantColor} from \"../../utils/utils\";\nimport ReportsPerDay from \"../../components/Charts/ReportsPerDay\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Alerts from \"./Alerts\";\nimport {IconButton, Tooltip} from \"@material-ui/core\";\nimport {Refresh} from \"@material-ui/icons\";\n\nconst DashboardPage = () => {\n  const [user, setUser] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [hospitals, setHospitals] = useState([]);\n  const [hospital, setHospital] = useState(GLOBAL_HOSPITAL);\n  const [hospitalSet, setHospitalSet] = useState(false);\n  const [fetchData, setFetchData] = useState(false);\n\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n    setLoading(true);\n    Promise.all([getRooms(), getReports()])\n      .then((result) => {\n        setRooms(result[0]);\n        setReports(result[1]);\n        setLoading(false);\n      });\n    if (!hospitalSet) {\n      getHospitals()\n        .then((result) => {\n          setHospitals(result);\n        });\n    }\n  }, [hospitalSet, hospital, fetchData]);\n\n  const hospitalSelected = (event) => {\n    setHospital(event.target.value);\n    setGlobalHospital(event.target.value);\n    const hospital = hospitals.find((x) => x['_id'] === event.target.value);\n    setGlobalHospitalName(hospital ? hospital.name : false);\n    setHospitalSet(!hospitalSet);\n  }\n\n  const getCleanedRooms = () => {\n    const today = moment();\n    return rooms.filter((room) => {\n      if (!room['last_cleaned']) {\n        return false;\n      }\n      return moment(room['last_cleaned']).isSame(today, 'date');\n    }).length;\n  }\n\n  const getContaminationIndex = () => {\n    const contaminations = [];\n    rooms.forEach((room) => {\n      const val = room['contamination_index'];\n      if (val > 150) {\n        contaminations.push(150);\n      } else if (val < 0) {\n        contaminations.push(0);\n      } else {\n        contaminations.push(val);\n      }\n    });\n    return Math.round((contaminations.reduce((a, b) => (a + b)) / contaminations.length));\n  }\n\n  const getGreenRooms = () => {\n    return rooms.filter((room) => {\n      return getVariant(room['contamination_index']) === 'good';\n    }).length;\n  }\n\n  const getRedRooms = () => {\n    return rooms.filter((room) => {\n      return getVariant(room['contamination_index']) === 'critical';\n    }).length;\n  }\n\n  const getColor = () => {\n    return getVariantColor(getContaminationIndex());\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Grid container direction={\"row\"} justify={\"space-between\"} alignItems={\"center\"}>\n        <Grid item style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n          <Typography variant={\"h4\"}>Hello {user && user.username}!</Typography>\n          <Tooltip title={\"Refresh\"}>\n            <IconButton onClick={() => {\n              setFetchData(!fetchData);\n            }}>\n              <Refresh/>\n            </IconButton>\n          </Tooltip>\n        </Grid>\n        <Grid item>\n          <FormControl variant={'outlined'} style={{minWidth: '320px', margin: '8px'}}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Select hospital</InputLabel>\n            <Select label=\"Select Hospital\" onChange={hospitalSelected} value={hospital}>\n              <MenuItem value={false}>\n                <em>All</em>\n              </MenuItem>\n              {\n                hospitals.map(hosp => (\n                  <MenuItem value={hosp['_id']} key={hosp['_id']}>{hosp.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Grid container spacing={6}>\n        <Grid item xs={5}>\n          <Typography variant={\"h5\"} className={styles.semiBold}>Alerts</Typography>\n          <Alerts reports={reports} loading={loading}/>\n        </Grid>\n        <Grid item xs className={styles.grid} style={{marginTop: 48}}>\n          <Grid container spacing={4} justify={\"space-between\"}>\n            <Grid item>\n              <KeyStat subtitle={\"Rooms cleaned today\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getCleanedRooms()} color={\"#F2C94C\"}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Average contamination index\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getContaminationIndex() + '%'}\n                       color={!loading && getColor()}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Green rooms\"}\n                       value={loading ? <CircularProgress color={\"secondary\"}/> : getGreenRooms()} color={\"#27AE60\"}/>\n            </Grid>\n            <Grid item>\n              <KeyStat subtitle={\"Red rooms\"} value={loading ? <CircularProgress color={\"secondary\"}/> : getRedRooms()}\n                       color={\"#EB5757\"}/>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <ReportsPerDay loading={loading} reports={reports}/>\n    </PageContainer>\n  )\n}\n\nexport default DashboardPage;","import React from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {TextField} from \"formik-material-ui\";\nimport {Formik, Form, Field} from \"formik\";\nimport {Button, Grid, Typography} from \"@material-ui/core\";\nimport * as Yup from \"yup\";\nimport {authenticate} from \"../../utils/api\";\nimport {useHistory} from 'react-router-dom';\nimport Paper from \"@material-ui/core/Paper\";\nimport styles from './LoginPage.module.scss';\n\n\nconst validationSchema = Yup.object({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n});\n\nconst LoginPage = () => {\n  const history = useHistory();\n\n  const initialValues = {\n    username: '',\n    password: ''\n  }\n\n  const handleSubmit = (vars, {setSubmitting}) => {\n    console.log(vars)\n    authenticate(vars.username, vars.password);\n    history.push('/dashboard');\n  }\n\n  return (\n    <PageContainer noToolbar>\n      <Paper variant={\"elevation\"} className={styles.form}>\n        <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n          {({isSubmitting, resetForm, values}) => (\n            <Form>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Typography variant={\"h4\"}>Login to spotless</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    variant={\"outlined\"}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Username\"\n                    type=\"text\"\n                    name=\"username\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    variant={\"outlined\"}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Password\"\n                    type=\"password\"\n                    name=\"password\"\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button type=\"submit\" color=\"primary\" variant={\"contained\"} className={styles.btn}>Sign in</Button>\n            </Form>\n          )}\n        </Formik>\n      </Paper>\n    </PageContainer>\n  )\n}\n\nexport default LoginPage;","import LoginPage from './LoginPage';\nexport default LoginPage;\n","import {Grid, MenuItem, Typography} from \"@material-ui/core\";\nimport styles from \"./ShiftPicker.module.scss\";\nimport {Field} from \"formik\";\nimport {Select} from \"formik-material-ui\";\nimport React from \"react\";\n\n\nconst ShiftPicker = () => {\n  return (\n    <Grid item xs className={styles.row}>\n      <div>\n        <Typography variant={\"body1\"}>Shift start</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"startHour\">\n            {[...Array(24).keys()].map((number) => {\n              const num = number.toString().padStart(2, '0')\n              return <MenuItem key={number} value={num}>{num}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"h6\"}>:</Typography>\n          <Field component={Select} name=\"startMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n      <Typography variant={\"h4\"} style={{margin: '0 16px'}}>-</Typography>\n      <div>\n        <Typography variant={\"body1\"}>Shift end</Typography>\n        <div className={styles.row}>\n          <Field component={Select} name=\"endHour\">\n            {[...Array(23).keys()].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n          <Typography variant={\"body1\"}>:</Typography>\n          <Field component={Select} name=\"endMinutes\">\n            {['00', 15, 30, 45].map((number) => {\n              return <MenuItem key={number} value={number.toString()}>{number}</MenuItem>;\n            })}\n          </Field>\n        </div>\n      </div>\n    </Grid>\n  )\n}\n\nexport default ShiftPicker;","import {Checkbox, TableCell, TableHead, TableRow, TableSortLabel} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction EnhancedTableHead(props) {\n  const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, headCells, type} = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {type && type !== 'noSelection' &&\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{'aria-label': 'select all desserts'}}\n          />\n        </TableCell>\n        }\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number,\n  headCells: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['noSelection', 'selection'])\n};\n\nexport default EnhancedTableHead;\n","export function descendingComparator(a, b, orderBy) {\n  if (typeof a[orderBy] === 'string' && typeof b[orderBy] === 'string') {\n    if (a[orderBy] === undefined) return 1;\n    if (b[orderBy].toUpperCase() < a[orderBy].toUpperCase()) {\n      return -1;\n    }\n    if (b[orderBy].toUpperCase() > a[orderBy].toUpperCase()) {\n      return 1;\n    }\n    return 0;\n  } else {\n    if (a[orderBy] === undefined) return 1;\n\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n}\n\nexport function getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport function handleClick(event, item, selected, setSelected) {\n  const selectedIndex = selected.indexOf(item);\n  let newSelected = [];\n\n  if (selectedIndex === -1) {\n    newSelected = newSelected.concat(selected, item);\n  } else if (selectedIndex === 0) {\n    newSelected = newSelected.concat(selected.slice(1));\n  } else if (selectedIndex === selected.length - 1) {\n    newSelected = newSelected.concat(selected.slice(0, -1));\n  } else if (selectedIndex > 0) {\n    newSelected = newSelected.concat(\n      selected.slice(0, selectedIndex),\n      selected.slice(selectedIndex + 1),\n    );\n  }\n\n  setSelected(newSelected);\n}","import React, {useEffect, useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport {\n  Grid,\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TableRow,\n  Typography,\n  Tooltip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Button,\n  DialogActions, TablePagination,\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AddCircleOutline, VisibilityOutlined} from \"@material-ui/icons\";\nimport {createCleaner, getCleaners, getRooms} from \"../../utils/api\";\nimport styles from './CleanersPage.module.scss';\nimport * as Yup from \"yup\";\nimport {Formik, Form, Field} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\nimport moment from \"moment\";\nimport EnhancedTableHead from \"../../components/RoomSelector/EnhancedTableHead\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {getComparator, stableSort} from \"../../utils/tableUtils\";\n\nconst CleanersPage = () => {\n  const [cleaners, setCleaners] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n\n  useEffect(() => {\n    Promise.all([getCleaners(), getRooms(null, null, true)])\n      .then((responses) => {\n        setCleaners(responses[0]);\n        setRooms(responses[1]);\n        setIsLoaded(true);\n      }, (err) => {\n        console.log(err);\n      });\n  }, [setOpen, isLoaded])\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Cleaners</Typography>\n        <Tooltip title=\"Add cleaner\">\n          <IconButton onClick={() => setOpen(true)}>\n            <AddCircleOutline/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {isLoaded ? <CleanersTable cleaners={cleaners} rooms={rooms}/> :\n        <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <AddCleanerDialog open={open} setOpen={setOpen} setIsLoaded={setIsLoaded} setSnackOpen={setSnackOpen}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          Cleaner created\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required('First name is required'),\n  lastName: Yup.string().required('Last name is required')\n});\n\nconst AddCleanerDialog = ({open, setOpen, setIsLoaded, setSnackOpen}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const initialValues = {\n    firstName: '',\n    lastName: '',\n    startHour: '08',\n    endHour: '16',\n    startMinutes: '00',\n    endMinutes: '00'\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const cleaner = await createCleaner(`${vars.firstName} ${vars.lastName}`,\n      `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`,\n      `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`);\n    console.log(cleaner);\n    setIsLoaded(false);\n    setSubmitting(false);\n    setSnackOpen(true);\n    setOpen(false);\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Create a new cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"First name\"\n                    type=\"text\"\n                    name=\"firstName\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Last name\"\n                    type=\"text\"\n                    name=\"lastName\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Create cleaner\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CleanersTable = ({cleaners, rooms}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [page, setPage] = React.useState(0);\n  const [cleanersPerPage, setCleanersPerPage] = React.useState(15);\n\n  const viewCleaner = (cleaner) => {\n    const id = cleaner['_id'];\n    history.push({\n      pathname: `/cleaners/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setCleanersPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const getCleaningProgress = (cleaner) => {\n    const assignedRooms = rooms.filter((room) => {\n      return room['assigned_cleaners'].length > 0 && room['assigned_cleaners'][0]['_id'] === cleaner['_id'];\n    });\n    const today = moment();\n    const numCleaned = assignedRooms.filter((room) => {\n      if (!room['last_cleaned']) {\n        return false;\n      }\n      return moment(room['last_cleaned']).isSame(today, 'date');\n    }).length;\n    cleaner['cleaning_progress'] = Math.round(((numCleaned / assignedRooms.length) * 100)) || 0 + '%';\n    return (\n      <Tooltip title={`${numCleaned}/${assignedRooms.length}`} placement={\"right\"}>\n        <Typography>{cleaner['cleaning_progress']}</Typography>\n      </Tooltip>\n    )\n  }\n\n  const getStatus = (cleaner) => {\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    cleaner.status = isBetween ? '' : 'Unavailable';\n    return cleaner.status;\n  }\n  const headCells = [\n    {id: 'name', numeric: false, disablePadding: false, label: 'Name'},\n    {id: 'shift_start', numeric: true, disablePadding: false, label: 'Shift start'},\n    {id: 'shift_end', numeric: true, disablePadding: false, label: 'Shift end'},\n    {id: 'cleaning_progress', numeric: true, disablePadding: false, label: 'Cleaning progress'},\n    {id: 'current_location', numeric: true, disablePadding: false, label: 'Current location'},\n    {id: 'status', numeric: true, disablePadding: false, label: 'Status'},\n    {id: 'action', numeric: false, disablePadding: false, label: 'Action'},\n  ];\n  return (\n    <Paper>\n      <TableContainer>\n        <Table size={'small'}>\n          <EnhancedTableHead classes={classes} onRequestSort={handleRequestSort} order={order} orderBy={orderBy}\n                             headCells={headCells}/>\n          <TableBody>\n            {stableSort(cleaners, getComparator(order, orderBy))\n              .slice(page * cleanersPerPage, page * cleanersPerPage + cleanersPerPage)\n              .map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return (\n                  <TableRow\n                    hover\n                    tabIndex={-1}\n                    key={labelId}\n                    style={{height: '33px'}}\n                  >\n                    <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                    <TableCell align=\"right\">{row['shift_start']}</TableCell>\n                    <TableCell align=\"right\">{row['shift_end']}</TableCell>\n                    <TableCell align=\"right\">{getCleaningProgress(row)}</TableCell>\n                    <TableCell align=\"right\">{}</TableCell>\n                    <TableCell align=\"right\">{getStatus(row)}</TableCell>\n                    <TableCell>\n                      <IconButton size={\"small\"} color={\"secondary\"} onClick={() => {\n                        viewCleaner(row)\n                      }}><VisibilityOutlined/></IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 15, 25, 50]}\n        component=\"div\"\n        count={cleaners.length}\n        rowsPerPage={cleanersPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\n\nexport default CleanersPage;","import CleanersPage from './CleanersPage';\nexport default CleanersPage;\n","import React, {useEffect, useState} from 'react';\nimport {AppBar, Typography, Tabs, Toolbar as MaterialToolbar, Tab, IconButton} from \"@material-ui/core\";\nimport {Link, useLocation, matchPath, useHistory} from 'react-router-dom';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport styles from './Toolbar.module.scss';\nimport {\n  ArrowBackRounded, AssessmentRounded,\n  BusinessRounded,\n  DashboardRounded, ExitToApp,\n  FormatListBulletedRounded,\n  PeopleRounded, Settings\n} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {getUser, logout} from \"../../utils/api\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst NavTabs = withStyles({\n  root: {\n    width: '100%',\n    flexGrow: 1\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'transparent',\n    marginBottom: '4px',\n    '& > span': {\n      width: '40%',\n      backgroundColor: '#00b0ff',\n      borderTopLeftRadius: 4,\n      borderTopRightRadius: 4,\n    },\n  }\n})((props) => <Tabs {...props} TabIndicatorProps={{children: <span/>}}/>);\n\nconst mountTabValueFactory = (location, tabId) => (route) => !!matchPath(location.pathname, {\n  path: route,\n  exact: false,\n  strict: false,\n}) ? tabId : -1;\n\nconst Toolbar = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const tabId = 'myTabId';\n  const getTabValue = mountTabValueFactory(location, tabId);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [user, setUser] = useState('');\n\n  useEffect(() => {\n    const u = getUser();\n    setUser(u);\n  }, []);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <AppBar position={\"static\"}>\n      <MaterialToolbar variant={\"dense\"}>\n        <div className={styles.toolbar}>\n          {location.pathname.split('/').length > 2 ? (\n            <Tooltip title={'Go Back'}>\n              <IconButton onClick={() => {\n                history.goBack()\n              }}>\n                <ArrowBackRounded className={styles.svg}/>\n              </IconButton>\n            </Tooltip>\n          ) : <div style={{width: 40}}/>}\n          <Typography variant={\"h6\"} className={styles.name}>Spotless</Typography>\n        </div>\n        <NavTabs variant={\"fullWidth\"} value={tabId}>\n          <Tab label={<div className={styles.tab}><DashboardRounded fontSize={\"small\"}/> Dashboard</div>}\n               value={getTabValue(\"/dashboard\")} component={Link} to={\"/dashboard\"}\n               disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><FormatListBulletedRounded fontSize={\"small\"}/> Assignments</div>}\n               value={getTabValue(\"/assignments\")} component={Link} to={\"/assignments\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><PeopleRounded fontSize={\"small\"}/> Cleaners</div>}\n               value={getTabValue(\"/cleaners\")} component={Link} to={\"/cleaners\"}\n               disableRipple={true} className={styles.tab}/>\n          <Tab label={<div className={styles.tab}><BusinessRounded fontSize={\"small\"}/> Rooms</div>}\n               value={getTabValue(\"/rooms\")} component={Link} to={\"/rooms\"} disableRipple={true}/>\n          <Tab label={<div className={styles.tab}><AssessmentRounded fontSize={\"small\"}/> Analysis</div>}\n               value={getTabValue(\"/analysis\")} component={Link} to={\"/analysis\"}\n               disableRipple={true} className={styles.tab}/>\n        </NavTabs>\n        <Tooltip title={\"Open menu\"}>\n          <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <MenuIcon color={\"secondary\"}/>\n          </IconButton>\n        </Tooltip>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          {user.superAdmin &&\n          <MenuItem onClick={() => {\n            handleClose();\n            history.push('/simulator');\n          }}>\n            <ListItemIcon>\n              <Settings fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Simulator\"/>\n          </MenuItem>}\n\n          <MenuItem onClick={() => {\n            handleClose();\n            logout();\n            history.push('/');\n          }}>\n            <ListItemIcon>\n              <ExitToApp color={\"secondary\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Sign out\"/>\n          </MenuItem>\n        </Menu>\n      </MaterialToolbar>\n    </AppBar>\n  );\n}\n\nexport default Toolbar;","import Toolbar from './Toolbar';\nexport default Toolbar;","import CleaningsByCleaner from './CleaningsByCleaner';\nexport default CleaningsByCleaner;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Bar, BarChart\n} from 'recharts';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./CleaningsByCleaner.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\n\nconst CleaningsByCleaner = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return report['cleaner_name'];\n  })\n  const counts = {};\n  data.forEach((x) => {\n    counts[x] = (counts[x] || 0) + 1;\n  });\n  const formattedReports = [];\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      cleaner: x,\n      amount: counts[x]\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Cleanings done by cleaner</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning events</Typography>\n                :\n                <BarChart data={formattedReports}>\n                  <XAxis dataKey=\"cleaner\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Bar dataKey=\"amount\" name=\"Cleaning events\" fill=\"#8884d8\"/>\n                </BarChart>\n              }\n\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nCleaningsByCleaner.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default CleaningsByCleaner;","import ContaminationIndexOverTime from './ContaminationIndexOverTime';\nexport default ContaminationIndexOverTime;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line\n} from 'recharts';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./ContaminationIndexOverTime.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\nimport moment from \"moment\";\n\nconst ContaminationIndexOverTime = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return moment(report['cleaning_time']).format('DD.MM.YYYY');\n  });\n  const counts = {};\n  data.forEach((x) => {\n    const date = moment(x, 'DD.MM.YYYY');\n    counts[x] = reports.filter((report) => {\n      return moment(report['cleaning_time']).isSame(date, 'date');\n    });\n  });\n  const formattedReports = [];\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      date: x,\n      contamination: counts[x].reduce((acc, report) => {\n        return acc + report['contamination_index'];\n      }, 0) / counts[x].length\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Contamination index (before cleaning) over time</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning\n                  events</Typography>\n                :\n                <LineChart data={formattedReports}>\n                  <XAxis dataKey=\"date\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Line type=\"monotone\" dataKey=\"contamination\" name=\"Contamination index\" stroke=\"#8884d8\"\n                        strokeWidth={2}/>\n                </LineChart>\n              }\n\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nContaminationIndexOverTime.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default ContaminationIndexOverTime;","import CleaningDuration from './CleaningDuration';\nexport default CleaningDuration;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar\n} from 'recharts';\nimport moment from \"moment\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styles from \"./CleaningDuration.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {Typography} from \"@material-ui/core\";\nimport {ROOM_TYPES} from \"../../../utils/constants\";\n\nconst CleaningDuration = ({reports, loading}) => {\n  let data = reports.map((report) => {\n    return report.room && report.room['room_type'];\n  })\n  const counts = {};\n  data.forEach((x) => {\n    counts[x] = reports.filter((report) => {\n      if (typeof x === 'undefined') {\n        return x === report.room;\n      } else {\n        if (!report.room) {\n          return false;\n        }\n        return x === report.room['room_type'];\n      }\n    });\n  });\n  const formattedReports = [];\n  const und = counts['undefined'];\n  if (und) {\n    formattedReports.push({\n      type: 'No type',\n      amount: Math.round(und.reduce((acc, report) => {\n        return acc + report['cleaning_duration_seconds'];\n      }, 0) / und.length),\n      estimated: 0\n    });\n    delete counts['undefined'];\n  }\n\n  Object.keys(counts).forEach((x) => {\n    formattedReports.push({\n      type: ROOM_TYPES[x].displayName,\n      amount: Math.round(counts[x].reduce((acc, report) => {\n        return acc + report['cleaning_duration_seconds'];\n      }, 0) / counts[x].length),\n      estimated: ROOM_TYPES[x].cleaningTime * 60\n    });\n  });\n\n  return (\n    <div style={{height: '100%'}}>\n      <Paper className={styles.container}>\n        <Typography variant={\"h6\"} className={styles.title}>Cleaning duration by room type</Typography>\n        <>\n          {loading ? <CircularProgress color={\"secondary\"} style={{margin: 'auto'}}/> :\n            <ResponsiveContainer width=\"100%\" height={400} className={styles.chart}>\n              {formattedReports.length === 0 ?\n                <Typography variant={\"h6\"} className={styles.title} style={{textAlign: 'center'}}>No cleaning\n                  events</Typography>\n                :\n                <BarChart data={formattedReports}>\n                  <XAxis dataKey=\"type\"/>\n                  <YAxis/>\n                  <CartesianGrid strokeDasharray=\"3 3\"/>\n                  <Tooltip/>\n                  <Legend/>\n                  <Bar dataKey=\"amount\" name=\"Actual time\" fill=\"#8884d8\" unit=\" seconds\"/>\n                  <Bar dataKey=\"estimated\" name=\"Estimated time\" fill=\"#82ca9d\" unit=\" seconds\"/>\n                </BarChart>\n              }\n            </ResponsiveContainer>\n          }\n        </>\n      </Paper>\n    </div>\n  )\n}\n\nCleaningDuration.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired\n};\n\nexport default CleaningDuration;","import AnalysisPage from './AnalysisPage';\nexport default AnalysisPage;\n","import React, {useEffect, useState} from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport CleaningsByCleaner from \"../../components/Charts/CleaningsByCleaner\";\nimport {getReports, getRooms} from \"../../utils/api\";\nimport ContaminationIndexOverTime from \"../../components/Charts/ContaminationIndexOverTime\";\nimport CleaningDuration from \"../../components/Charts/CleaningDuration\";\n\nconst AnalysisPage = () => {\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(() => {\n    Promise.all([getRooms(), getReports()])\n      .then((result) => {\n        result[1].forEach((report) => {\n          report.room = result[0].find((room) => {\n            return room['_id'] === report['room_id'];\n          });\n        })\n        setRooms(result[0]);\n        setReports(result[1]);\n        setLoading(false);\n      });\n  }, []);\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h5\"} style={{marginBottom: 16}}>Analysis</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <CleaningsByCleaner reports={reports} loading={loading}/>\n        </Grid>\n        <Grid item xs={6}>\n          <ContaminationIndexOverTime reports={reports} loading={loading}/>\n        </Grid>\n        <Grid item xs={6}>\n          <CleaningDuration reports={reports} loading={loading}/>\n        </Grid>\n      </Grid>\n    </PageContainer>\n  )\n}\n\nexport default AnalysisPage;","import React, {useEffect, useState} from \"react\";\nimport hospitalImg from \"../../assets/hospital.png\";\nimport styles from \"./RoomsPage.module.scss\";\nimport ImageMapper from 'react-image-mapper';\nimport {HOSPITAL_MAP} from \"../../utils/constants\";\nimport {useHistory} from \"react-router-dom\";\nimport {getRoomTypeProp, getVariantColor, hexToRgb} from \"../../utils/utils\";\nimport {Typography} from \"@material-ui/core\";\n\nconst initMap = (rooms) => {\n  let map = {};\n  map = JSON.parse(JSON.stringify(HOSPITAL_MAP));\n  rooms.forEach((room, index) => {\n    const area = map.areas[index];\n    if (!area) {\n      return;\n    }\n    const color = hexToRgb(getVariantColor(room['contamination_index']));\n    area.preFillColor = `rgba(${color.r}, ${color.g}, ${color.b}, 0.5)`\n    area['_id'] = room['_id'];\n    area.room = room;\n  });\n  return map;\n}\n\nconst RoomsMap = ({rooms}) => {\n  const history = useHistory();\n  const [hovering, setHovering] = useState(false);\n  const [room, setRoom] = useState({});\n  const [hoverStyle, setHoverStyle] = useState({});\n  const [map, setMap] = useState({});\n  const [ignored, forceUpdate] = useState(642);\n\n  useEffect(() => {\n    setMap(initMap(rooms));\n    forceUpdate(i => i === 642 ? 643 : 642);\n  }, [rooms, setMap])\n\n  const click = (area, num, event) => {\n    const id = area['_id'];\n    if (!id) {\n      return;\n    }\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const enter = (area, index, event) => {\n    if (area.room) {\n      const style = {\n        top: event.pageY,\n        left: event.pageX\n      }\n      setHovering(true);\n      setRoom(area.room);\n      setHoverStyle(style);\n    }\n  }\n\n  const width = window.innerWidth / 2.1;\n\n  return (\n    <>\n      {Object.keys(map).length !== 0 &&\n      <div className={styles.map}>\n        <ImageMapper src={hospitalImg}\n                     map={map}\n                     fillColor={'rgba(0,0,0, 0.2)'}\n                     onClick={click}\n                     width={width}\n                     imgWidth={ignored}\n                     onMouseEnter={enter}\n                     onMouseLeave={() => {\n                       setHovering(false);\n                       setRoom({});\n                       setHoverStyle({});\n                     }}\n        />\n      </div>\n      }\n      {hovering &&\n      <div id=\"info\" className={styles.roomInfo} style={hoverStyle}>\n        <Typography variant={\"h6\"} className={styles.bold}>Room: {room.name}</Typography>\n        <Typography variant={\"body1\"}>{getRoomTypeProp(room, 'displayName')}</Typography>\n        <Typography variant={\"body1\"} color={\"textSecondary\"}>Contamination Index: <span\n          style={{color: getVariantColor(room['contamination_index'])}}>{room['contamination_index'].toFixed(1)}</span>\n        </Typography>\n      </div>\n      }\n    </>\n  )\n}\n\nexport default RoomsMap;","import React, {useEffect} from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {ROOM_TYPES} from \"../../utils/constants\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport PropTypes from \"prop-types\";\n\nconst TableFilters = ({rooms, setRooms, initialBuilding, initialFloor, hideAll, hideAssigned}) => {\n  const [building, setBuilding] = React.useState(initialBuilding || '');\n  const [floor, setFloor] = React.useState(initialFloor || '');\n  const [roomType, setRoomType] = React.useState('');\n  const [assigned, setAssigned] = React.useState(true);\n  const [filters, setFilters] = React.useState(true);\n\n  useEffect(() => {\n    if (filters) {\n      let filtered = rooms;\n      filtered = filtered.filter((room) => {\n        let valid = true;\n        if (building) {\n          valid = room.building === building;\n        }\n        if (floor) {\n          valid = room.floor === floor && valid;\n        }\n        if (roomType) {\n          valid = room['room_type'] === roomType.key && valid;\n        }\n        if (!hideAssigned && !assigned) {\n          valid = room['assigned_cleaners'].length === 0 && valid;\n        }\n        return valid;\n      });\n      setRooms(filtered);\n      setFilters(false);\n    }\n  }, [assigned, building, floor, roomType, filters, rooms, setRooms, hideAssigned])\n  const getBuildings = () => {\n    return [...new Set(rooms.map(room => {\n      return room.building;\n    }))].sort();\n  };\n\n  const getFloors = () => {\n    return [...new Set(rooms.map(room => {\n      return room.floor;\n    }))].sort();\n  }\n  return (\n    <>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"building\">Building</InputLabel>\n        <Select label=\"Building\" onChange={(event) => {\n          setBuilding(event.target.value);\n          setFilters(true);\n        }} value={building}>\n          {!hideAll &&\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>}\n          {getBuildings().map(building => (\n            <MenuItem value={building} key={building}>{building}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"floor\">Floor</InputLabel>\n        <Select label=\"Floor\" onChange={(event) => {\n          setFloor(event.target.value);\n          setFilters(true);\n        }} value={floor}>\n          {!hideAll &&\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          }\n          {getFloors().map(floor => (\n            <MenuItem value={floor} key={floor}>{floor}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant={'outlined'} style={{minWidth: '240px', marginBottom: 8}}>\n        <InputLabel id=\"room-type\">Room type</InputLabel>\n        <Select label=\"Room type\" onChange={(event) => {\n          setRoomType(event.target.value);\n          setFilters(true);\n        }} value={roomType}>\n          <MenuItem value={''}>\n            <em>All</em>\n          </MenuItem>\n          {Object.keys(ROOM_TYPES).map(type => (\n            <MenuItem value={ROOM_TYPES[type]}\n                      key={ROOM_TYPES[type].displayName}>{ROOM_TYPES[type].displayName}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      {!hideAssigned &&\n      <FormControlLabel control={<Checkbox checked={assigned} onChange={(event, checked) => {\n        setAssigned(checked);\n        setFilters(true);\n      }}/>} label=\"Show assigned\"/>}\n    </>\n  );\n}\n\nTableFilters.propTypes = {\n  rooms: PropTypes.array.isRequired,\n  setRooms: PropTypes.func.isRequired,\n  initialBuilding: PropTypes.string,\n  initialFloor: PropTypes.string,\n  hideAll: PropTypes.bool,\n  hideAssigned: PropTypes.bool\n}\n\nexport default TableFilters;","import RoomsPage from './RoomsPage';\nexport default RoomsPage;\n","import React, {useEffect, useState} from 'react';\nimport {getRooms} from \"../../utils/api\";\nimport {Typography} from \"@material-ui/core\";\nimport styles from \"./RoomsPage.module.scss\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport RoomsMap from \"./RoomsMap\";\nimport TableFilters from \"../AssignmentsPage/TableFilters\";\n\nconst RoomsPage = () => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n\n  useEffect(() => {\n    getRooms()\n      .then((rooms) => {\n          setRooms(rooms);\n          setOrigRooms(rooms);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setError(true);\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }, []);\n\n  return (\n    <PageContainer>\n      <div className={styles.headerRow}>\n        <Typography variant={\"h5\"} className={styles.bold}>Rooms</Typography>\n        {isLoaded &&\n        <div className={styles.filters}>\n          <TableFilters rooms={origRooms} setRooms={setRooms} hideAll={true} hideAssigned={true} initialBuilding={rooms[0] && rooms[0].building} initialFloor={rooms[0] && rooms[0].floor}/>\n        </div>\n        }\n      </div>\n      {isLoaded &&\n      <RoomsMap rooms={rooms}/>\n      }\n      {error && <p>ERROR</p>}\n    </PageContainer>\n  )\n}\n\nexport default RoomsPage;","import CleanerSelect from './CleanerSelect';\nexport default CleanerSelect;","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport {Autocomplete} from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {getCleaners} from \"../../utils/api\";\nimport styles from \"./CleanerSelect.module.scss\";\n\nconst CleanerSelect = ({onChange, style}) => {\n  const [options, setOptions] = useState([]);\n  const [openSelect, setOpenSelect] = useState(false);\n  const [cleaner, setCleaner] = useState(null);\n  const loading = openSelect && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const clnrs = await getCleaners();\n\n      if (active) {\n        setOptions(clnrs);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  const onSelectChange = (event, newValue) => {\n    setCleaner(newValue);\n    onChange(event, newValue);\n  }\n\n  return (\n    <Autocomplete\n      open={openSelect}\n      onOpen={() => {\n        setOpenSelect(true);\n      }}\n      onClose={() => {\n        setOpenSelect(false);\n      }}\n      className={styles.autocomplete}\n      style={style}\n      getOptionLabel={(option) => option.name || ''}\n      options={options}\n      loading={loading}\n      value={cleaner}\n      onChange={onSelectChange}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Cleaner\"\n          variant=\"outlined\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading ? <CircularProgress color=\"inherit\" size={20}/> : null}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nCleanerSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  style: PropTypes.object\n}\n\nexport default CleanerSelect;","import React, {useState} from \"react\";\nimport {assignRoomsToCleaner, unAssignRooms} from \"../../utils/api\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\n\nexport const AssignCleanerDialog = ({open, setOpen, selected, setSnackOpen, onClose, setSnackText}) => {\n  const [cleaner, setCleaner] = useState(null);\n\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const handleSubmit = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n    handleClose();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}>\n      <DialogTitle id=\"form-dialog-title\">Select a cleaner</DialogTitle>\n      <DialogContent>\n        <CleanerSelect onChange={(event, newValue) => {\n          setCleaner(newValue)\n        }}/>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleSubmit} disabled={cleaner === ''}>\n          Assign\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {lighten, makeStyles} from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport {getRooms, unAssignRooms} from \"../../utils/api\";\nimport {VisibilityOutlined, FilterList, Close} from \"@material-ui/icons\";\nimport moment from \"moment\";\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport styles from \"./AssignmentsPage.module.scss\"\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {AssignCleanerDialog} from \"./AssignCleanerDialog\";\nimport Link from \"@material-ui/core/Link\";\nimport {Link as RouterLink} from 'react-router-dom';\nimport {getRoomTypeProp, getStatus, mergeCleaners} from \"../../utils/utils\";\nimport TableFilters from \"./TableFilters\";\nimport EnhancedTableHead from \"../../components/RoomSelector/EnhancedTableHead\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner_name', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left',\n    flexDirection: 'column'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  filters: {\n    minHeight: 96\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, selected, setSelected, setSnackOpen, setSnackText, getData, rooms, setRooms} = props;\n  const [open, setOpen] = React.useState(false);\n  const [filter, showFilters] = React.useState(false);\n  const selectedWithCleaner = selected.filter((room) => {\n    return room['assigned_cleaners'].length > 0;\n  });\n\n  const removeAssignments = async () => {\n    await unAssignRooms(selectedWithCleaner);\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n    setSelected([]);\n    getData(true);\n  }\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n        [classes.filters]: filter && numSelected === 0\n      })}\n    >\n      <div className={styles.row}>\n        {numSelected > 0 ? (\n          <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                      style={{fontWeight: 600}}>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n            Select rows to assign to cleaner\n          </Typography>\n        )}\n        {numSelected > 0 ? (\n          <>\n            {selectedWithCleaner.length > 0 &&\n            <Tooltip title=\"Remove room assignments\">\n              <Button variant={'contained'} startIcon={<Close/>} className={styles.critical}\n                      style={{flexBasis: '300px', marginRight: 32}} onClick={removeAssignments}>Remove assignments\n              </Button>\n            </Tooltip>\n            }\n            <Tooltip title=\"Assign to cleaner\">\n              <Button variant={'contained'} color={'secondary'} style={{flexBasis: '180px'}} onClick={() => {\n                setOpen(true);\n              }}>Assign rooms</Button>\n            </Tooltip>\n          </>\n        ) : (\n          <Tooltip title=\"Filter list\">\n            <IconButton aria-label=\"filter list\" onClick={() => {\n              showFilters(!filter);\n            }}>\n              <FilterList color={filter ? 'secondary' : 'inherit'}/>\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n      {filter && numSelected === 0 &&\n      <div className={styles.row}>\n        <TableFilters rooms={rooms} setRooms={setRooms}/>\n      </div>\n      }\n      <AssignCleanerDialog open={open} setOpen={setOpen} selected={selected} onClose={() => {\n        setSelected([]);\n        getData(true);\n      }} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array.isRequired,\n  setSelected: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function AssignmentsPage() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(15);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n  const [data, getData] = React.useState(true);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    if (data) {\n      getRooms(null, null, true)\n        .then((rooms) => {\n            rooms = mergeCleaners(rooms);\n            setRooms(rooms);\n            setOrigRooms(rooms);\n            setIsLoaded(true);\n            getData(false);\n          },\n          (error) => {\n            setIsLoaded(true);\n            console.log(error);\n          });\n    }\n  }, [data]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  const getCleaner = (row) => {\n    if (!row.cleaner) {\n      return row['cleaner_name'];\n    }\n    const cleaner = row.cleaner;\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${cleaner['_id']}`,\n                    state: {id: cleaner['_id']}\n                  }}>\n      {cleaner.name}\n    </Link>);\n  }\n\n  return (\n    <PageContainer className={classes.root}>\n      {isLoaded ?\n        <Paper className={classes.paper}>\n          <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSnackOpen={setSnackOpen}\n                                setSelected={setSelected} setSnackText={setSnackText} getData={getData}\n                                rooms={origRooms} setRooms={setRooms}/>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                order={order}\n                orderBy={orderBy}\n                onSelectAllClick={handleSelectAllClick}\n                onRequestSort={handleRequestSort}\n                rowCount={rooms.length}\n                headCells={headCells}\n                type={\"selection\"}\n              />\n              <TableBody>\n                {stableSort(rooms, getComparator(order, orderBy))\n                  .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row, selected, setSelected)}\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row.name}\n                        selected={isItemSelected}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox\n                            checked={isItemSelected}\n                            inputProps={{'aria-labelledby': labelId}}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.building}</TableCell>\n                        <TableCell align=\"right\">{row.floor}</TableCell>\n                        <TableCell>{getCleaner(row)}</TableCell>\n                        <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                        <TableCell align=\"right\">{row['contamination_index'].toFixed(2)}</TableCell>\n                        <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                        <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton color={\"secondary\"} size={\"small\"}\n                                      onClick={() => {\n                                        openRoom(row)\n                                      }}>\n                            <VisibilityOutlined/>\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15, 25, 50]}\n            component=\"div\"\n            count={rooms.length}\n            rowsPerPage={roomsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n","import AssignmentsPage from './AssignmentsPage';\nexport default AssignmentsPage;\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport {Divider, Typography} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport {getRoomTypeProp} from \"../../utils/utils\";\n\n\nconst RoomDetailsCard = ({room}) => {\n\n  const getVariant = (contamination) => {\n    let variant = 'neutral';\n    if (contamination >= 60) {\n      variant = 'critical';\n    } else if (contamination >= 30) {\n      variant = 'med';\n    } else if (contamination < 30) {\n      variant = 'good';\n    }\n    return variant;\n  }\n  return (\n    <Card className={styles.card}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold}>Room details</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <Typography variant={\"body1\"} className={styles.semiBold}>Building {room.building}</Typography>\n        <Typography variant={\"body2\"} className={styles.medium} color=\"textSecondary\">Floor {room.floor}</Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>{getRoomTypeProp(room, 'displayName')}</Typography>\n          <Typography\n            variant={\"body2\"}\n            className={styles.semiBold}>\n            Cleaning time: {getRoomTypeProp(room, 'cleaningTime')} min\n          </Typography>\n        </div>\n        <Typography variant={\"body2\"} className={styles.medium}\n                    color=\"textSecondary\">Cleaning {getRoomTypeProp(room, 'frequency')} times / week\n        </Typography>\n        <Divider light={true} className={styles.divider}/>\n        <div className={styles.row}>\n          <Typography variant={\"body1\"} className={styles.semiBold}>Contamination index</Typography>\n          <Typography variant={\"body1\"}\n                      className={[styles[getVariant(room['contamination_index'])], styles.medium].join(' ')}>{room['contamination_index']}</Typography>\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nRoomDetailsCard.propTypes = {\n  room: PropTypes.object.isRequired\n}\n\nexport default RoomDetailsCard;","import React, {useState} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport StatusDot from \"../../components/StatusDot\";\nimport PropTypes from 'prop-types';\nimport {Button, IconButton, Typography} from \"@material-ui/core\";\nimport CleanerSelect from \"../../components/CleanerSelect\";\nimport moment from \"moment\";\nimport {ClearOutlined} from \"@material-ui/icons\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {assignRoom, unAssignRoom} from \"../../utils/api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\n\n\nconst RoomCleanerCard = ({room, cleaner, setCleaner}) => {\n  const [newCleaner, setNewCleaner] = useState({});\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('');\n\n  const hasCleaner = Object.keys(cleaner).length !== 0;\n  const getColor = () => {\n    if (!hasCleaner) return 'neutral';\n    const shiftStart = moment(cleaner['shift_start'], 'HH:mm');\n    const shiftEnd = moment(cleaner['shift_end'], 'HH:mm');\n    const isBetween = moment().isBetween(shiftStart, shiftEnd);\n    return isBetween ? 'good' : 'critical';\n  }\n\n  const removeCleanerAssignment = async () => {\n    await unAssignRoom(room['_id'], cleaner['_id']);\n    setCleaner({});\n    setSnackText('Cleaner unassigned');\n    setSnackOpen(true);\n  }\n\n  const assignNewCleaner = async () => {\n    await assignRoom(room['_id'], newCleaner['_id']);\n    setCleaner(newCleaner);\n    setNewCleaner({});\n    setSnackText('Cleaner assigned');\n    setSnackOpen(true);\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  return (\n    <Card className={styles.card} style={{height: 'min-content'}}>\n      <div className={styles.cardContent}>\n        <div className={styles.row}>\n          <StatusDot variant={getColor()} size={'tiny'} tooltip={'Cleaner name'}/>\n          {hasCleaner ? (\n              <>\n                <Link component={RouterLink} style={{marginLeft: 16}} color=\"secondary\"\n                      to={{\n                        pathname: `/cleaners/${cleaner['_id']}`,\n                        state: {id: cleaner['_id']}\n                      }}>\n                  <Typography variant={'h6'} className={styles.semiBold}>{cleaner.name}</Typography>\n                </Link>\n                <Tooltip title=\"Remove assignment\">\n                  <IconButton style={{marginLeft: 'auto'}} size={\"small\"} onClick={removeCleanerAssignment}>\n                    <ClearOutlined/>\n                  </IconButton>\n                </Tooltip>\n              </>\n            )\n            :\n            <CleanerSelect onChange={(event, newValue) => setNewCleaner(newValue)} style={{marginLeft: 16}}/>\n          }\n        </div>\n        {newCleaner && Object.keys(newCleaner).length !== 0 && (\n          <>\n            <Divider className={styles.divider}/>\n            <div className={styles.row}>\n              <Button onClick={assignNewCleaner} variant={\"contained\"} color={\"secondary\"}\n                      className={styles.btn}>Assign</Button>\n            </div>\n          </>\n        )}\n      </div>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>{snackText}</Alert>\n      </Snackbar>\n    </Card>\n  )\n}\n\nRoomCleanerCard.propTypes = {\n  room: PropTypes.object.isRequired,\n  cleaner: PropTypes.object\n}\n\nexport default RoomCleanerCard;","import React from 'react';\nimport styles from './RoomDetailsPage.module.scss';\nimport {Divider, Typography} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport moment from 'moment';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    lineHeight: '200%'\n  },\n});\nconst CommentsList = ({reports}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={styles.comments}>\n      <div className={styles.cardContent}>\n        <Typography variant={\"h6\"} className={styles.semiBold} style={{marginBottom: 16}}>Cleaner comments:</Typography>\n        {reports.length > 0 ? (\n          reports.reduce((result, report) => {\n            const showReport = report.comments !== '';\n            if (showReport) {\n              const time = moment(report['cleaning_time']);\n              result.push(\n                <div key={report['_id']} className={styles.comment}>\n                  <Divider />\n                  <Typography variant={\"h6\"} className={classes.root}>{time.format('D MMM, YYYY')}</Typography>\n                  <Typography variant={\"h6\"} className={[styles.semiBold, styles.author, classes.root].join(' ')}>{report['cleaner_name']}</Typography>\n                  <Typography variant={\"body1\"} className={classes.root}>{report.comments}</Typography>\n                </div>\n              );\n            }\n            return result;\n          }, [])\n        ) :\n        <Typography variant={\"body1\"} className={styles.semiBold}>No comments</Typography>\n        }\n      </div>\n    </Card>\n  );\n}\n\nexport default CommentsList;","import React from \"react\";\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Typography\n} from \"@material-ui/core\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {Check, CloseRounded, VisibilityOutlined} from \"@material-ui/icons\";\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\nimport moment from \"moment\";\nimport styles from './CleaningReportTable.module.scss';\nimport Link from \"@material-ui/core/Link\";\nimport PropTypes from 'prop-types';\nimport {getComparator, stableSort} from \"../../utils/tableUtils\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport EnhancedTableHead from \"../RoomSelector/EnhancedTableHead\";\n\nfunction ReportsTableHead(props) {\n  const {classes, order, orderBy, onRequestSort, type} = props;\n  const headCells = [\n    {id: 'cleaning_time', numeric: true, disablePadding: false, label: 'Cleaning time'},\n    {id: 'cleaning_successful', numeric: false, disablePadding: false, label: 'Cleaning successful'},\n    {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n  ];\n  if (type === 'room') {\n    headCells.unshift({id: 'cleaner', numeric: false, disablePadding: false, label: 'Cleaner'});\n  } else {\n    headCells.unshift({id: 'room', numeric: false, disablePadding: false, label: 'Room'});\n  }\n\n  return (\n    <EnhancedTableHead\n      classes={classes}\n      order={order}\n      orderBy={orderBy}\n      onRequestSort={onRequestSort}\n      headCells={headCells}\n    />\n  );\n}\n\nReportsTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['room', 'cleaner']).isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst CleaningReportsTable = ({reports, type}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [page, setPage] = React.useState(0);\n  const [reportsPerPage, setReportsPerPage] = React.useState(10);\n  const viewReport = (report) => {\n    const id = report['_id'];\n    history.push({\n      pathname: `/rooms/reports/${id}`,\n      state: {id}\n    })\n  }\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good}/>) : (<CloseRounded color={\"error\"}/>);\n  }\n\n  const getCleaner = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n      {report['cleaner_name']}\n    </Link>);\n  }\n\n  const getRoom = (report) => {\n    return (<Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/rooms/${report['room_id']}`,\n                    state: {id: report['room_id']}\n                  }}>\n      {report['room_name']}\n    </Link>);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setReportsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div>\n      <Typography variant={\"h5\"} style={{margin: '16px 0'}} className={styles.semiBold}>Past cleaning\n        reports</Typography>\n      {reports.length > 0 ?\n        <Paper className={classes.paper}>\n          <TableContainer>\n            <Table\n              className={classes.table}\n              aria-labelledby=\"tableTitle\"\n              aria-label=\"enhanced table\"\n              size={'small'}\n            >\n              <ReportsTableHead\n                classes={classes}\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n                type={type}\n              />\n              <TableBody>\n                {stableSort(reports, getComparator(order, orderBy))\n                  .slice(page * reportsPerPage, page * reportsPerPage + reportsPerPage)\n                  .map((row, index) => {\n                    const labelId = `enhanced-table-checkbox-${index}`;\n                    return (\n                      <TableRow\n                        hover\n                        tabIndex={-1}\n                        key={labelId}\n                        style={{height: '33px'}}\n                      >\n                        <TableCell component=\"th\" id={labelId} scope=\"row\">\n                          {type === 'room' ? getCleaner(row) : getRoom(row)}\n                        </TableCell>\n                        <TableCell align=\"right\">{moment(row['cleaning_time']).format('DD.MM.YYYY HH:mm')}</TableCell>\n                        <TableCell>{getIcon(row['cleaning_succesful'])}</TableCell>\n                        <TableCell align=\"right\">\n                          <IconButton color={\"secondary\"} size={\"small\"}\n                                      onClick={() => {\n                                        viewReport(row)\n                                      }}>\n                            <VisibilityOutlined/>\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25, 50]}\n            component=\"div\"\n            count={reports.length}\n            rowsPerPage={reportsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Paper>\n        : <Typography variant={\"h6\"}>No cleaning Reports</Typography>\n      }\n    </div>\n  );\n}\nCleaningReportsTable.propTypes = {\n  reports: PropTypes.array.isRequired,\n  type: PropTypes.oneOf(['cleaner', 'room']).isRequired\n}\nexport default CleaningReportsTable;","import RoomDetailsPage from './RoomDetailsPage';\nexport default RoomDetailsPage;","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {Button, Typography} from \"@material-ui/core\";\nimport {getAssignedCleaners, getFloorplan, getReports, getRoom, getRoomHeatmap} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport styles from \"./RoomDetailsPage.module.scss\";\nimport RoomDetailsCard from \"./RoomDetailsCard\";\nimport RoomCleanerCard from \"./RoomCleanerCard\";\nimport CommentsList from \"./RoomReportComments\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable/CleaningReportsTable\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nconst RoomDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [roomLoaded, setRoomLoaded] = useState(false);\n  const [room, setRoom] = useState({});\n  const [reports, setReports] = useState([]);\n  const [cleaner, setCleaner] = useState({});\n  const [image, setImage] = useState('');\n  const [showMap, setShowMap] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  useEffect(() => {\n    getRoom(params.id)\n      .then((room) => {\n          setRoom(room);\n          setRoomLoaded(true);\n        },\n        (error) => console.log(error));\n    getAssignedCleaners(params.id)\n      .then((cleaners) => {\n        if (cleaners.length >= 1) {\n          setCleaner(cleaners[0]);\n        }\n      }, (error) => console.log(error));\n    getReports(params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n    getFloorplan(params.id).then((img) => {\n      setImage(URL.createObjectURL(img));\n    }).catch((err) => {\n      console.log(err)\n    })\n  }, [params.id]);\n\n  useEffect(() => {\n    if (showMap) {\n      getRoomHeatmap(params.id, 'contamination')\n        .then((response) => {\n          const aux = document.getElementById('aux');\n          const canvas = document.getElementById('main');\n          let scaler = 1n;\n          if (room['is_simulated']) {\n            if (room['contamination_index'] >= 60) {\n              scaler = 20n;\n            } else if (room['contamination_index'] >= 30) {\n              scaler = 10n;\n            } else {\n              scaler = 5n;\n            }\n          }\n          // eslint-disable-next-line no-undef\n          update_img(response, aux, canvas, scaler);\n        })\n        .catch((err) => {\n          setShowMap(false);\n          console.log(err.message)\n          setErrorMsg(err.message);\n          setError(true);\n        })\n    }\n  }, [params.id, room, showMap])\n  const navigateToMap = () => {\n    history.push({\n      pathname: `/rooms`,\n      state: {id: params.id, action: 'show'}\n    })\n  }\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(false);\n    setShowMap(false);\n  };\n\n  return (\n    <PageContainer style={{width: '65%'}}>\n      {roomLoaded ? (\n        <>\n          <div className={styles.titleRow}>\n            <Typography variant={\"h4\"}>Room: {room.name}</Typography>\n            <Button variant={\"text\"} onClick={navigateToMap} size={\"small\"}>Show on map</Button>\n          </div>\n          <div className={styles.content}>\n            <div className={styles.detailsRow}>\n              <RoomDetailsCard room={room}/>\n              <RoomCleanerCard room={room} cleaner={cleaner} setCleaner={setCleaner}/>\n            </div>\n            <div className={styles.row} style={{marginTop: 32}}>\n              <Typography variant={\"h5\"}>Room map</Typography>\n              <Button variant={\"outlined\"} color={\"primary\"} onClick={() => setShowMap(!showMap)}>\n                {showMap ? 'Hide map' : 'Show Map'}\n              </Button>\n            </div>\n            {showMap && (\n              <div className={styles.container}>\n                <canvas id=\"aux\" style={{display: 'none'}}/>\n                <canvas id=\"main\" width={72} height={56} className={styles.map} />\n                <img src={image} alt={\"\"} className={styles.overlay} />\n              </div>\n            )}\n            <CommentsList reports={reports}/>\n            <CleaningReportsTable reports={reports} type={'room'}/>\n          </div>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nexport default RoomDetailsPage;","import CleaningReportsTable from './CleaningReportsTable';\nexport default CleaningReportsTable;","import * as Yup from \"yup\";\nimport {editCleaner} from \"../../utils/api\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@material-ui/core\";\nimport {Field, Form, Formik} from \"formik\";\nimport {TextField} from \"formik-material-ui\";\nimport React from \"react\";\nimport ShiftPicker from \"../../components/ShiftPicker/ShiftPicker\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required()\n});\n\nconst EditCleanerDialog = ({cleaner, open, setOpen, onSave}) => {\n  const handleClose = () => {\n    setOpen(false);\n  }\n  const start = cleaner['shift_start'].split(':');\n  const end = cleaner['shift_end'].split(':');\n\n  const initialValues = {\n    name: cleaner.name,\n    startHour: start.length > 0 ? start[0] : '',\n    endHour: end.length > 0 ? end[0] : '',\n    startMinutes: start.length > 0 ? start[1] : '',\n    endMinutes: end.length > 0 ? end[1] : ''\n  }\n\n  const handleSubmit = async (vars, {setSubmitting}) => {\n    const edited = vars;\n    edited['_id'] = cleaner['_id'];\n    edited['shift_start'] = `${vars.startHour.padStart(2, '0')}:${vars.startMinutes.padStart(2, '0')}`;\n    edited['shift_end'] = `${vars.endHour.padStart(2, '0')}:${vars.endMinutes.padStart(2, '0')}`;\n    const res = await editCleaner(edited);\n    console.log(res);\n    setSubmitting(false);\n    setOpen(false);\n    onSave();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Edit cleaner</DialogTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={validationSchema}>\n        {({isSubmitting, resetForm, values}) => (\n          <Form>\n            <DialogContent>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    component={TextField}\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    fullWidth\n                  />\n                </Grid>\n                <ShiftPicker/>\n              </Grid>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button type=\"submit\" color=\"primary\">\n                Save\n              </Button>\n            </DialogActions>\n          </Form>\n        )}\n      </Formik>\n    </Dialog>\n  );\n}\n\nexport default EditCleanerDialog;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {assignRoomsToCleaner, getRooms, unAssignRooms} from \"../../utils/api\";\nimport styles from \"./RoomSelector.module.scss\";\nimport {\n  Button,\n  Checkbox, Dialog, DialogActions, DialogContent,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow, Toolbar, Tooltip, Typography\n} from \"@material-ui/core\";\nimport {getComparator, handleClick, stableSort} from \"../../utils/tableUtils\";\nimport {getRoomTypeProp, getStatus, mergeCleaners} from \"../../utils/utils\";\nimport {FilterList, VisibilityOutlined} from \"@material-ui/icons\";\nimport {useHistory} from \"react-router-dom\";\nimport moment from \"moment\";\nimport {lighten, makeStyles} from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport TableFilters from \"../../pages/AssignmentsPage/TableFilters\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n\nconst headCells = [\n  {id: 'name', numeric: false, disablePadding: true, label: 'Name'},\n  {id: 'building', numeric: true, disablePadding: false, label: 'Building'},\n  {id: 'floor', numeric: true, disablePadding: false, label: 'Floor'},\n  {id: 'cleaner_name', numeric: false, disablePadding: false, label: 'Assigned Cleaner'},\n  {id: 'status', numeric: false, disablePadding: false, label: 'Status'},\n  {id: 'contamination_index', numeric: true, disablePadding: false, label: 'Contamination index'},\n  {id: 'room_type', numeric: false, disablePadding: false, label: 'Room type'},\n  {id: 'last_cleaned', numeric: true, disablePadding: false, label: 'Last cleaned'},\n  {id: 'action', numeric: true, disablePadding: false, label: 'Action'},\n];\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n    textAlign: 'left',\n    flexDirection: 'column'\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n        color: theme.palette.secondary.main,\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n      }\n      : {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.secondary.dark,\n      },\n  filters: {\n    minHeight: 96\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {numSelected, rooms, setRooms} = props;\n  const [filter, showFilters] = React.useState(false);\n\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n        [classes.filters]: filter\n      })}\n    >\n      <div className={styles.row}>\n        {numSelected > 0 ? (\n          <Typography className={styles.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\"\n                      style={{fontWeight: 600}}>\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography className={styles.title} variant=\"h5\" id=\"tableTitle\" component=\"div\" style={{fontWeight: '600'}}>\n            Assign rooms to cleaner\n          </Typography>\n        )}\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\" onClick={() => {\n            showFilters(!filter);\n          }}>\n            <FilterList color={filter ? 'secondary' : 'inherit'}/>\n          </IconButton>\n        </Tooltip>\n      </div>\n      {filter &&\n      <div className={styles.row}>\n        <TableFilters rooms={rooms} setRooms={setRooms}/>\n      </div>\n      }\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  setRooms: PropTypes.func.isRequired,\n  rooms: PropTypes.array.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nconst RoomSelector = ({cleaner, onClose, open, setOpen, setSnackOpen, setSnackText}) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('name');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [roomsPerPage, setRoomsPerPage] = React.useState(10);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  const [origRooms, setOrigRooms] = useState([]);\n  const history = useHistory();\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rooms.map((n) => n);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  useEffect(() => {\n    getRooms(null, null, true)\n      .then((rooms) => {\n          rooms = mergeCleaners(rooms);\n          console.log(rooms);\n          setRooms(rooms);\n          setOrigRooms(rooms);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setIsLoaded(true);\n          console.log(error);\n        });\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRoomsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const getDate = (date) => {\n    return date ? moment(date).format('YYYY-MM-DD HH:mm:ss') : 'Never';\n  }\n\n  const openRoom = (room) => {\n    const id = room['_id'];\n    history.push({\n      pathname: `/rooms/${id}`,\n      state: {id}\n    })\n  }\n\n  const getCleaner = (room) => {\n    const cleaners = room['assigned_cleaners'];\n    const cleaner = cleaners.length > 0 && cleaners[0];\n    if (!cleaner) {\n      return '-';\n    }\n    return cleaner.name;\n  }\n  const handleClose = () => {\n    onClose();\n    setOpen(false);\n  }\n\n  const assign = async () => {\n    const selectedWithCleaner = selected.filter((room) => {\n      return room['assigned_cleaners'].length > 0;\n    });\n    if (selectedWithCleaner.length > 0) {\n      await unAssignRooms(selectedWithCleaner);\n    }\n    await assignRoomsToCleaner(selected, cleaner['_id'])\n    setSnackText('Rooms assigned');\n    setSnackOpen(true);\n    onClose();\n    setOpen(false);\n  }\n  return (\n    <>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick={true}\n              maxWidth={\"lg\"}>\n        <DialogContent>\n          {isLoaded ?\n            <Paper className={classes.paper}>\n              <EnhancedTableToolbar numSelected={selected.length} rooms={origRooms} setRooms={setRooms}/>\n              <TableContainer>\n                <Table\n                  className={classes.table}\n                  aria-labelledby=\"tableTitle\"\n                  aria-label=\"enhanced table\"\n                  size={'small'}\n                >\n                  <EnhancedTableHead\n                    classes={classes}\n                    numSelected={selected.length}\n                    order={order}\n                    orderBy={orderBy}\n                    onSelectAllClick={handleSelectAllClick}\n                    onRequestSort={handleRequestSort}\n                    rowCount={rooms.length}\n                    headCells={headCells}\n                    type={\"selection\"}\n                  />\n                  <TableBody>\n                    {stableSort(rooms, getComparator(order, orderBy))\n                      .slice(page * roomsPerPage, page * roomsPerPage + roomsPerPage)\n                      .map((row, index) => {\n                        const isItemSelected = isSelected(row);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                        return (\n                          <TableRow\n                            hover\n                            onClick={(event) => handleClick(event, row, selected, setSelected)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={row.name}\n                            selected={isItemSelected}\n                            style={{height: '33px'}}\n                          >\n                            <TableCell padding=\"checkbox\">\n                              <Checkbox\n                                checked={isItemSelected}\n                                inputProps={{'aria-labelledby': labelId}}\n                              />\n                            </TableCell>\n                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                              {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.building}</TableCell>\n                            <TableCell align=\"right\">{row.floor}</TableCell>\n                            <TableCell>{getCleaner(row)}</TableCell>\n                            <TableCell>{getStatus(row['contamination_index'])}</TableCell>\n                            <TableCell align=\"right\">{row['contamination_index'].toFixed(2)}</TableCell>\n                            <TableCell>{getRoomTypeProp(row, 'displayName')}</TableCell>\n                            <TableCell align=\"right\">{getDate(row['last_cleaned'])}</TableCell>\n                            <TableCell align=\"right\">\n                              <IconButton color={\"secondary\"} size={\"small\"}\n                                          onClick={() => {\n                                            openRoom(row)\n                                          }}>\n                                <VisibilityOutlined/>\n                              </IconButton>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, 50]}\n                component=\"div\"\n                count={rooms.length}\n                rowsPerPage={roomsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </Paper>\n            : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={assign} disabled={selected.length === 0} variant={\"contained\"}>\n            Assign\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n\nRoomSelector.propTypes = {\n  cleaner: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  setSnackOpen: PropTypes.func.isRequired,\n  setSnackText: PropTypes.func.isRequired\n}\n\nexport default RoomSelector;","import RoomSelector from './RoomSelector';\nexport default RoomSelector;","import React, {useEffect, useState} from \"react\";\nimport {useLocation, useHistory} from 'react-router-dom';\nimport {IconButton, Paper, Table, TableContainer, TableHead, TableRow, Typography} from \"@material-ui/core\";\nimport {getAssignedRooms, getCleaner, getReports, unAssignRoom, deleteCleaner as removeCleaner} from \"../../utils/api\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport {AccountCircleRounded, AddCircleOutline, Clear, DeleteForever, Edit} from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {getRoomTypeProp, getStatus} from \"../../utils/utils\";\nimport CleaningReportsTable from \"../../components/CleaningReportsTable\";\nimport styles from './CleanerDetailsPage.module.scss';\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport EditCleanerDialog from \"./EditCleanerDialog\";\nimport RoomSelector from \"../../components/RoomSelector\";\n\nconst CleanerDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const params = location.state;\n  const [cleanerLoaded, setCleanerLoaded] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [cleaner, setCleaner] = useState({});\n  const [reports, setReports] = useState([]);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [data, getData] = React.useState(false);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [snackText, setSnackText] = useState('Cleaned deleted');\n  const [showRoomSelector, setShowRoomSelector] = useState(false);\n\n  const handleConfirmClose = () => {\n    setOpen(false);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const deleteCleaner = async () => {\n    await removeCleaner(cleaner['_id']);\n    setSnackText('Cleaner Deleted');\n    setSnackOpen(true);\n    history.goBack();\n  }\n\n  const saved = () => {\n    setSnackText('Saved');\n    setSnackOpen(true);\n    getData(true);\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n\n  useEffect(() => {\n    getCleaner(params.id)\n      .then((room) => {\n          console.log(room);\n          setCleaner(room);\n          setCleanerLoaded(true);\n        },\n        (error) => {\n          console.log(error);\n        });\n    getReports(null, params.id)\n      .then((reports) => {\n        setReports(reports.sort((a, b) => new Date(b['cleaning_time']) - new Date(a['cleaning_time'])));\n      })\n  }, [params.id, data]);\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <div className={styles.row} style={{justifyContent: 'space-between'}}>\n        <Typography variant={\"h5\"} className={styles.semiBold}>Cleaner details</Typography>\n        <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} variant={\"outlined\"}\n                color={\"primary\"}>\n          Actions\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => {\n            handleClose();\n            setEditing(true);\n          }}>\n            <ListItemIcon>\n              <Edit fontSize=\"small\" style={{color: '#808080'}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Edit cleaner\"/>\n          </MenuItem>\n          <MenuItem onClick={() => {\n            setOpen(true);\n            handleClose()\n          }}>\n            <ListItemIcon>\n              <DeleteForever color={\"error\"} fontSize=\"small\"/>\n            </ListItemIcon>\n            <ListItemText primary=\"Delete cleaner\"/>\n          </MenuItem>\n        </Menu>\n      </div>\n      {cleanerLoaded ? (\n        <>\n          <div className={[styles.row, styles.content].join(' ')}>\n            <AccountCircleRounded className={styles.avatar}/>\n            <div>\n              <Typography variant={\"h6\"} className={styles.semiBold}>Cleaner name: {cleaner.name}</Typography>\n              <Typography variant={\"body1\"} color={\"textSecondary\"}>\n                Shift: {cleaner['shift_start']} - {cleaner['shift_end']}\n              </Typography>\n            </div>\n          </div>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"} className={styles.semiBold}>Assigned Rooms</Typography>\n            <Tooltip title={\"Add assignments\"}>\n              <IconButton onClick={() => {\n                setShowRoomSelector(true);\n              }}>\n                <AddCircleOutline/>\n              </IconButton>\n            </Tooltip>\n          </div>\n          <AssignmentsTable cleaner={cleaner} setSnackOpen={setSnackOpen} setSnackText={setSnackText}/>\n          <CleaningReportsTable reports={reports} type={\"cleaner\"}/>\n        </>\n      ) : <CircularProgress color=\"secondary\" style={{margin: '16px auto'}}/>}\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete cleaner\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to delete the cleaner?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => {\n            handleConfirmClose();\n            deleteCleaner();\n          }} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {cleanerLoaded &&\n      <EditCleanerDialog cleaner={cleaner} open={editing} setOpen={setEditing} onSave={saved}/>}\n      <RoomSelector setSnackText={setSnackText} open={showRoomSelector} setSnackOpen={setSnackOpen}\n                    setOpen={setShowRoomSelector} onClose={() => {\n        getData(true);\n      }} cleaner={cleaner}/>\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n    </PageContainer>\n  );\n}\n\nconst AssignmentsTable = ({cleaner, setSnackOpen, setSnackText}) => {\n  const [assignments, setAssignments] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getAssignedRooms(cleaner['_id'])\n      .then((assignments) => {\n        console.log(assignments);\n        setAssignments(assignments);\n        setLoading(false);\n      }, (error) => {\n        console.log(error);\n      })\n  }, [cleaner]);\n\n  const removeAssignment = async (room) => {\n    const response = await unAssignRoom(room['_id'], cleaner['_id']);\n    console.log(response);\n    const newAssignments = [...assignments];\n    newAssignments.splice(assignments.indexOf(room), 1);\n    setAssignments(newAssignments);\n    setSnackText('Assignment removed');\n    setSnackOpen(true);\n  }\n\n  return (\n    <div style={{margin: '16px 0'}}>\n      {loading ? <CircularProgress color=\"secondary\"/> :\n        (\n          assignments.length > 0 ?\n            <TableContainer component={Paper}>\n              <Table size={\"small\"}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Room</TableCell>\n                    <TableCell align=\"right\">Status</TableCell>\n                    <TableCell align=\"right\">Contamination Index</TableCell>\n                    <TableCell align=\"right\">Room type</TableCell>\n                    <TableCell align=\"right\">Cleaning Status</TableCell>\n                    <TableCell>Action</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {assignments.map((row) => (\n                    <TableRow key={row['_id']}>\n                      <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\n                      <TableCell align=\"right\">{getStatus(row['contamination_index'])}</TableCell>\n                      <TableCell align=\"right\">{row['contamination_index']}</TableCell>\n                      <TableCell align=\"right\">{getRoomTypeProp(row, 'displayName')}</TableCell>\n                      <TableCell\n                        align=\"right\">{row['is_cleaning'] ? 'Cleaning in progress' : 'Needs cleaning'}</TableCell>\n                      <TableCell>\n                        <Tooltip title={\"Remove assignment\"}>\n                          <IconButton size={\"small\"} onClick={() => {\n                            removeAssignment(row);\n                          }}>\n                            <Clear color={\"error\"}/>\n                          </IconButton>\n                        </Tooltip>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer> : <Typography variant={\"h6\"}>No assigned rooms</Typography>\n        )}\n    </div>\n  );\n}\n\nexport default CleanerDetailsPage;","import CleanerDetailsPage from './CleanerDetailsPage';\nexport default CleanerDetailsPage;","import ReportPage from './ReportPage';\nexport default ReportPage;\n","import React, {useEffect, useState} from 'react';\nimport {Link as RouterLink, useLocation} from \"react-router-dom\";\nimport {getHeatmap, getReport} from \"../../utils/api\";\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Typography, Select, Grid} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport styles from './ReportPage.module.scss';\nimport {Check, CloseRounded} from \"@material-ui/icons\";\nimport {getVariant, update_img} from \"../../utils/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\nimport Link from \"@material-ui/core/Link\";\nimport heatmap from \"../../assets/heatmap2.png\";\n\nconst ReportPage = () => {\n  const location = useLocation();\n  const {id} = location.state;\n  const [report, setReport] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [type, setType] = useState('');\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [showContImg, setShowContImg] = useState(false);\n  const [showCleanImg, setShowCleanImg] = useState(false);\n\n  useEffect(() => {\n    getReport(id)\n      .then((report) => {\n        setReport(report);\n        setLoading(false);\n      })\n  }, [id]);\n\n  const mapSelected = async (event) => {\n    setType(event.target.value);\n    if (report['is_simulated']) {\n      setShowContImg(false);\n      setShowCleanImg(false);\n      if (event.target.value === 'contamination') {\n        setShowContImg(true);\n      } else {\n        setShowCleanImg(true);\n      }\n    } else {\n      await getHeatmap(id, event.target.value)\n        .then((res) => {\n          const aux = document.getElementById('aux');\n          const canvas = document.getElementById('main');\n          console.log(res)\n          update_img(res, aux, canvas, 1n);\n        }).catch((err) => {\n          console.error(err)\n          setErrorMsg('Could not load map');\n          setError(true);\n        });\n    }\n  }\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setError(false);\n  };\n\n  const getIcon = (successful) => {\n    return successful ? (<Check className={styles.good} fontSize={\"large\"}/>) : (\n      <CloseRounded color={\"error\"} fontSize={\"large\"}/>);\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h4\"} className={styles.semiBold}>Cleaning report details</Typography>\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <div className={styles.row} style={{justifyContent: 'space-between'}}>\n            <Typography variant={\"h5\"}>Room map</Typography>\n            <FormControl variant={'outlined'} style={{minWidth: '320px', marginBottom: 8}}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Contamination map type</InputLabel>\n              <Select label=\"Contamination map type\" onChange={mapSelected} value={type}>\n                <MenuItem value=\"clean\">After cleaning</MenuItem>\n                <MenuItem value=\"contamination\">Before cleaning</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            {showContImg &&\n            <img src={heatmap} alt=\"contamination map\" className={styles.map}/>\n            }\n            {showCleanImg &&\n            <img src={heatmap} alt=\"clean map\" className={styles.map}/>\n            }\n            {!showCleanImg && !showContImg &&\n            <>\n              <canvas id=\"aux\" style={{display: 'none'}}/>\n              <canvas id=\"main\" width={72} height={56} className={styles.map}/>\n            </>\n            }\n          </div>\n          <Typography variant={\"h5\"}>Cleaner comments:</Typography>\n          <div className={styles.comments}>\n            <Typography variant={\"body1\"} className={styles.comment}>{report.comments}</Typography>\n          </div>\n        </Grid>\n        {!loading &&\n        <Grid item xs={6}>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaner:</Typography>\n            <Link component={RouterLink} color=\"secondary\"\n                  to={{\n                    pathname: `/cleaners/${report['cleaner_id']}`,\n                    state: {id: report['cleaner_id']}\n                  }}>\n              <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['cleaner_name']}</Typography>\n            </Link>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Room:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report['room_name']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning time:</Typography>\n            <Typography style={{marginLeft: '4px'}}\n                        variant={\"h5\"}>{moment(report['cleaning_time']).format('YYYY-MM-DD HH:mm:ss')}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning successful:</Typography>\n            <div style={{marginLeft: 4, height: 35}}>{getIcon(report['cleaning_succesful'])}</div>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Overview:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}>{report.overview}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Contamination index:</Typography>\n            <Typography style={{marginLeft: '4px'}} variant={\"h5\"}\n                        className={styles[getVariant(report['contamination_index'])]}>{report['contamination_index']}</Typography>\n          </div>\n          <div className={styles.row}>\n            <Typography variant={\"h5\"} className={styles.reportInfo}>Cleaning duration:</Typography>\n            <Typography style={{marginLeft: '4px'}}\n                        variant={\"h5\"}>{moment(report['cleaning_duration_seconds'], 's').format('m [minutes] s [seconds]')}</Typography>\n          </div>\n        </Grid>}\n      </Grid>\n      <Snackbar open={error} autoHideDuration={6000} onClose={handleSnackClose}>\n        <Alert onClose={() => setError(false)} severity=\"error\">{errorMsg}</Alert>\n      </Snackbar>\n    </PageContainer>\n  )\n}\n\nexport default ReportPage;","import CircularProgressWithLabel from \"./CircularProgressWithLabel\";\nexport default CircularProgressWithLabel;","import Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"static\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nexport default CircularProgressWithLabel;","import AdminPage from './AdminPage';\nexport default AdminPage;\n","import React, {useEffect, useState} from 'react';\nimport PageContainer from \"../../containers/PageContainer\";\nimport {Button, Divider, Typography} from \"@material-ui/core\";\nimport styles from \"./AdminPage.module.scss\";\nimport Slider from \"@material-ui/core/Slider\";\nimport {getSimulatorSettings, resetSimulation, setSimulation} from \"../../utils/api\";\nimport Input from \"@material-ui/core/Input\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Card from \"@material-ui/core/Card\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport CircularProgressWithLabel from \"../../components/CircularProgressWithLabel\";\n//import {ROOM_TYPES} from \"../../utils/constants\";\n\nconst AdminPage = () => {\n  const [simSpeed, setSimSpeed] = useState(10);\n  const [loading, setLoading] = useState(true);\n  const [snackOpen, setSnackOpen] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [generating, setGenerating] = useState(false);\n  const [snackText, setSnackText] = useState('Simulation speed updated');\n\n  const handleSnackClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackOpen(false);\n  };\n  useEffect(() => {\n    getSimulatorSettings()\n      .then((settings) => {\n        setSimSpeed(settings['simulator_speed']);\n        setLoading(false);\n      })\n  }, [])\n  const valuetext = (value) => {\n    return `${value}x`;\n  }\n\n  const generateMarks = () => {\n    const mark = [];\n    for (let i = 5; i <= 100; i += 5) {\n      mark.push({\n        value: i,\n        label: i\n      });\n    }\n    mark.unshift({\n      value: 0.1,\n      label: '0.1'\n    }, {\n      value: 0.5,\n    }, {\n      value: 1,\n    });\n\n    return mark;\n  }\n\n  const updateSimSpeed = () => {\n    setSimulation(simSpeed)\n      .then(() => {\n        setSnackText('Simulation speed updated');\n        setSnackOpen(true);\n      }).catch(() => setSnackOpen(true));\n  }\n  const handleChange = (event, newValue) => {\n    setSimSpeed(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setSimSpeed(event.target.value === '' ? '' : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (simSpeed < 0.1) {\n      setSimSpeed(0);\n    } else if (simSpeed > 1000) {\n      setSimSpeed(1000);\n    }\n  };\n\n  const handleConfirmClose = () => {\n    setSnackText('Simulation reset');\n    setOpen(false);\n  };\n\n  const generate = async () => {\n    setGenerating(true);\n    //const hospitalId = \"5fb5226d3d8e1d45045cfc3f\";\n    //const roomType = ROOM_TYPES.WAITING_ROOM.key;\n    //const roomName = 'B20';\n    //const building = 1;\n    //const floor = 1;\n    let start = 0;\n    const end = 0;\n    for (start;start <= end; start++) {\n      //const name = roomName + start;\n      //await createRoom(hospitalId, name, roomType, building, floor);\n      await new Promise(r => setTimeout(r, 1000));\n      setProgress(start);\n    }\n    setGenerating(false);\n  }\n\n  return (\n    <PageContainer style={{textAlign: 'start'}}>\n      <Typography variant={\"h5\"}>Simulator</Typography>\n      {loading ? <CircularProgress style={{margin: \"auto\"}}/> :\n        <Grid container>\n          <Grid container className={styles.slider}>\n            <Grid item xs>\n              <div className={styles.row}>\n                <Typography id=\"discrete-slider\" gutterBottom>\n                  Simulation speed\n                </Typography>\n                <Button variant={\"text\"} color={\"primary\"} onClick={updateSimSpeed}>\n                  Set\n                </Button>\n              </div>\n            </Grid>\n            <Grid container spacing={2} direction={\"row\"}>\n              <Grid item style={{flex: 1}}>\n                <Slider\n                  getAriaValueText={valuetext}\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  step={null}\n                  min={0.1}\n                  marks={generateMarks()}\n                  onChange={handleChange}\n                  value={simSpeed}\n                />\n              </Grid>\n              <Grid item>\n                <Input\n                  style={{width: 42}}\n                  value={simSpeed}\n                  margin=\"dense\"\n                  onChange={handleInputChange}\n                  onBlur={handleBlur}\n                  inputProps={{\n                    step: 5,\n                    min: 0,\n                    max: 1000,\n                    type: 'number',\n                    'aria-labelledby': 'input-slider',\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item style={{display: \"flex\", marginLeft: 32}} xs>\n            <Card className={styles.card}>\n              <div className={styles.cardContent}>\n                <Typography variant={\"h6\"} className={styles.semiBold}>Simulator actions</Typography>\n                <Divider className={styles.divider} light={true}/>\n                <Button onClick={() => {\n                  setOpen(true);\n                }} variant={\"contained\"} color={\"secondary\"}>Reset simulated rooms</Button>\n                <Button disabled={generating} onClick={() => {\n                  generate();\n                }} variant={\"contained\"} color={\"primary\"} style={{float: \"right\"}}>Generate rooms</Button>\n              </div>\n            </Card>\n          </Grid>\n        </Grid>\n      }\n      <Snackbar open={snackOpen} autoHideDuration={6000} onClose={handleSnackClose}\n                anchorOrigin={{vertical: \"top\", horizontal: \"center\"}}>\n        <Alert variant={\"filled\"} severity=\"success\" onClose={handleSnackClose}>\n          {snackText}\n        </Alert>\n      </Snackbar>\n      {generating && <CircularProgressWithLabel value={progress} style={{margin: \"auto\"}}/>}\n      <Dialog\n        open={open}\n        onClose={handleConfirmClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Reset simulated rooms</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure you want to reset the rooms?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleConfirmClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={async () => {\n            handleConfirmClose();\n            resetSimulation().then(() => setSnackOpen(true)).catch(() => setSnackOpen(true));\n          }} color=\"primary\" autoFocus>\n            Reset\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </PageContainer>\n  )\n}\n\nexport default AdminPage;","import React from 'react';\nimport './App.scss';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport {authenticated as auth, getUser} from '../utils/api';\nimport DashboardPage from \"../pages/DashboardPage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport CleanersPage from \"../pages/CleanersPage\";\nimport Toolbar from \"../components/Toolbar\";\nimport {useLocation} from 'react-router-dom';\nimport AnalysisPage from \"../pages/AnalysisPage\";\nimport RoomsPage from \"../pages/RoomsPage\";\nimport AssignmentsPage from \"../pages/AssignmentsPage\";\nimport RoomDetailsPage from \"../pages/RoomDetailsPage\";\nimport CleanerDetailsPage from \"../pages/CleanerDetailsPage\";\nimport ReportPage from \"../pages/ReportPage\";\nimport AdminPage from \"../pages/AdminPage\";\n\nfunction App() {\n  const location = useLocation();\n  const user = getUser();\n  const login = () => (auth() ? <Redirect to=\"/dashboard\"/> : <LoginPage/>);\n  const dash = () => (!auth() ? <Redirect to=\"/\"/> : <DashboardPage/>);\n  const cleaner = () => (!auth() ? <Redirect to=\"/\"/> : <CleanerDetailsPage/>);\n  const cleaners = () => (!auth() ? <Redirect to=\"/\"/> : <CleanersPage/>);\n  const assignments = () => (!auth() ? <Redirect to=\"/\"/> : <AssignmentsPage/>);\n  const rooms = () => (!auth() ? <Redirect to=\"/\"/> : <RoomsPage/>);\n  const room = () => (!auth() ? <Redirect to=\"/\"/> : <RoomDetailsPage/>);\n  const analysis = () => (!auth() ? <Redirect to=\"/\"/> : <AnalysisPage/>);\n  const report = () => (!auth() ? <Redirect to=\"/\"/> : <ReportPage/>);\n  const admin = () => (!auth() || !user.superAdmin ? <Redirect to=\"/\"/> : <AdminPage/>);\n\n  return (\n    <div className=\"App\">\n      {location.pathname !== '/' && <Toolbar/>}\n      <Switch location={location}>\n        <Route path={\"/dashboard\"} render={dash}/>\n        <Route path={\"/cleaners/:id\"} render={cleaner}/>\n        <Route path={\"/cleaners\"} render={cleaners}/>\n        <Route path={\"/assignments\"} render={assignments}/>\n        <Route path={\"/rooms/reports/:id\"} render={report}/>\n        <Route path={\"/rooms/:id\"} render={room}/>\n        <Route path={\"/rooms\"} render={rooms}/>\n        <Route path={\"/analysis\"} render={analysis}/>\n        <Route path={\"/simulator\"} render={admin}/>\n        <Route path={\"/\"} render={login}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {unstable_createMuiStrictModeTheme as createMuiTheme, StylesProvider, ThemeProvider} from '@material-ui/core/styles';\nimport {blueGrey, lightBlue} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[900],\n    },\n    secondary: lightBlue\n  },\n  typography: {\n    fontFamily: ['Raleway', 'sans-serif']\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={'/spotless'}>\n      <ThemeProvider theme={theme}>\n        <StylesProvider injectFirst>\n          <App/>\n        </StylesProvider>\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__1Bm9j\",\"name\":\"Toolbar_name__3EvOQ\",\"svg\":\"Toolbar_svg__3XlL9\",\"tab\":\"Toolbar_tab__3uwiV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"CleanerDetailsPage_content__3PEfI\",\"avatar\":\"CleanerDetailsPage_avatar__3KDG8\",\"row\":\"CleanerDetailsPage_row__G0VOc\",\"menu\":\"CleanerDetailsPage_menu__2gyF8\",\"column\":\"CleanerDetailsPage_column__3374X\",\"semiBold\":\"CleanerDetailsPage_semiBold__1F3iu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"RoomsPage_headerRow__3ck7N\",\"bold\":\"RoomsPage_bold__39rfR\",\"map\":\"RoomsPage_map__19OrU\",\"area\":\"RoomsPage_area__2kJln\",\"roomInfo\":\"RoomsPage_roomInfo__2IEIj\",\"filters\":\"RoomsPage_filters__BmR-T\"};"],"sourceRoot":""}